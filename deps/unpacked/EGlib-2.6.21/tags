!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A1p0	src/eg_random.c	/^static double A1p0[3][3] = {$/;"	v	file:
A1p127	src/eg_random.c	/^static double A1p127[3][3] = {$/;"	v	file:
A2p0	src/eg_random.c	/^static double A2p0[3][3] = {$/;"	v	file:
A2p127	src/eg_random.c	/^static double A2p127[3][3] = {$/;"	v	file:
ACCEPT_TYPE_ARG1	config.h	6;"	d
ACCEPT_TYPE_ARG2	config.h	12;"	d
ACCEPT_TYPE_ARG3	config.h	17;"	d
ADVCHECKRVAL	src/eg_macros.h	348;"	d
ADVTESTL	src/eg_macros.h	357;"	d
BOSS	src/eg_net.ex.c	39;"	d	file:
BZFILE	src/eg_config.h	/^typedef void BZFILE;$/;"	t
CHECKRVAL	src/eg_macros.h	367;"	d
CHECKRVALG	src/eg_macros.h	387;"	d
CLIENT	src/eg_net.ex.c	40;"	d	file:
Cg	src/eg_random.h	/^   double Cg[6];	\/**< Current state of the stream *\/$/;"	m	struct:__anon86
CheckSeed	src/eg_random.c	/^static int CheckSeed (const unsigned long* seed)$/;"	f	file:
DBL_TYPE	src/eg_lpnum.h	151;"	d
DEBUG	config.h	22;"	d
DEBUG	src/eg_config.h	250;"	d
EGBIT_COUNT	src/eg_bit.c	554;"	d	file:
EGBIT_COUNT	src/eg_bit.c	565;"	d	file:
EGBIT_MASK	src/eg_bit.c	553;"	d	file:
EGBIT_MASK	src/eg_bit.c	564;"	d	file:
EGBIT_TWO	src/eg_bit.c	552;"	d	file:
EGBIT_TWO	src/eg_bit.c	563;"	d	file:
EGFP10_EPSILON	src/eg_fp.h	106;"	d
EGFP20_EPSILON	src/eg_fp.h	107;"	d
EGFP25_EPSILON	src/eg_fp.h	108;"	d
EGFP28_EPSILON	src/eg_fp.h	109;"	d
EGFP_BIT	src/eg_fp.h	61;"	d
EGFP_FACTOR10	src/eg_fp.h	98;"	d
EGFP_FACTOR20	src/eg_fp.h	99;"	d
EGFP_FACTOR25	src/eg_fp.h	100;"	d
EGFP_FACTOR28	src/eg_fp.h	101;"	d
EGFP_FRBIT10	src/eg_fp.h	72;"	d
EGFP_FRBIT20	src/eg_fp.h	73;"	d
EGFP_FRBIT25	src/eg_fp.h	74;"	d
EGFP_FRBIT28	src/eg_fp.h	75;"	d
EGFP_INBIT10	src/eg_fp.h	79;"	d
EGFP_INBIT20	src/eg_fp.h	80;"	d
EGFP_INBIT25	src/eg_fp.h	81;"	d
EGFP_INBIT28	src/eg_fp.h	82;"	d
EGFP_MAX10	src/eg_fp.h	85;"	d
EGFP_MAX20	src/eg_fp.h	86;"	d
EGFP_MAX25	src/eg_fp.h	87;"	d
EGFP_MAX28	src/eg_fp.h	88;"	d
EGFP_MIN10	src/eg_fp.h	91;"	d
EGFP_MIN20	src/eg_fp.h	92;"	d
EGFP_MIN25	src/eg_fp.h	93;"	d
EGFP_MIN28	src/eg_fp.h	94;"	d
EGFP_OCHK	src/eg_fp.h	122;"	d
EGFP_OCHK	src/eg_fp.h	124;"	d
EGFP_OCHK	src/eg_fp.h	136;"	d
EGFP_OFBIT	src/eg_fp.h	66;"	d
EGFP_RCHK10	src/eg_fp.h	127;"	d
EGFP_RCHK10	src/eg_fp.h	132;"	d
EGFP_RCHK20	src/eg_fp.h	128;"	d
EGFP_RCHK20	src/eg_fp.h	133;"	d
EGFP_RCHK25	src/eg_fp.h	129;"	d
EGFP_RCHK25	src/eg_fp.h	134;"	d
EGFP_RCHK28	src/eg_fp.h	130;"	d
EGFP_RCHK28	src/eg_fp.h	135;"	d
EGFP_SGBIT	src/eg_fp.h	69;"	d
EGIO_BZLIB	src/eg_io.c	29;"	d	file:
EGIO_PLAIN	src/eg_io.c	27;"	d	file:
EGIO_ZLIB	src/eg_io.c	28;"	d	file:
EGLPNUM_DEBUGL	src/eg_lpnum.h	211;"	d
EGLPNUM_MINEPS	src/eg_lpnum.c	34;"	d	file:
EGLPNUM_MINEPS	src/eg_lpnum.c	37;"	d	file:
EGLPNUM_MINEPS	src/eg_lpnum.c	38;"	d	file:
EGLPNUM_PRECISION	src/eg_lpnum.c	/^unsigned long int EGLPNUM_PRECISION = 128;$/;"	v
EGNET_DBGL	src/eg_net.h	24;"	d
EG_A16LIST_DEBUG	src/eg_a16list.h	61;"	d
EG_A32LIST_DEBUG	src/eg_a32list.h	61;"	d
EG_ALGSTAT_ERROR	src/eg_macros.h	428;"	d
EG_ALGSTAT_NUMERROR	src/eg_macros.h	426;"	d
EG_ALGSTAT_PARTIAL	src/eg_macros.h	424;"	d
EG_ALGSTAT_SUCCESS	src/eg_macros.h	422;"	d
EG_ALG_MAXCLOSURE_DEFAULT	src/eg_maxclosure.h	42;"	d
EG_ALG_MAXCLOSURE_PR	src/eg_maxclosure.h	44;"	d
EG_ALIST_DEBUG	src/eg_alist.h	61;"	d
EG_EBTREE_LEFT	src/eg_ebtree.h	50;"	d
EG_EBTREE_PARENT	src/eg_ebtree.h	46;"	d
EG_EBTREE_RIGHT	src/eg_ebtree.h	54;"	d
EG_ESET_DLEVEL	src/eg_eset.h	44;"	d
EG_GCIT_DBG	src/eg_gcit.h	41;"	d
EG_LPNUM_MEMSLAB	config.h	27;"	d
EG_LPNUM_MEMSLAB	src/eg_lpnum.c	47;"	d	file:
EG_MEM_ALIGN	src/eg_mem.h	71;"	d
EG_MEM_ALIGNMENT	src/eg_mem.h	63;"	d
EG_MEM_ALIGNMENT_SHIFT	src/eg_mem.h	67;"	d
EG_MEM_WORD_SIZE	src/eg_mem.h	60;"	d
EG_MSLBP_FREEFREE	src/eg_memslab.h	76;"	d
EG_M_PI	src/eg_macros.h	438;"	d
EG_NET_ALLOW_NON_BLOCKING	src/eg_net.h	121;"	d
EG_NET_CONFIRM	src/eg_net.h	75;"	d
EG_NET_DATA_QUEUE_SIZE	src/eg_net.h	96;"	d
EG_NET_LISTEN_QUEUE_SIZE	src/eg_net.h	100;"	d
EG_NET_MARKER	src/eg_net.c	292;"	d	file:
EG_NET_RECEIVE	src/eg_net.c	291;"	d	file:
EG_NET_SEND	src/eg_net.c	290;"	d	file:
EG_NET_SYNCHRONIZE	src/eg_net.h	78;"	d
EG_NET_TCPIP_OVERHEAD	src/eg_net.h	91;"	d
EG_NEWLINE	src/eg_config.h	268;"	d
EG_OCTR_DEBUG	src/eg_octree.h	44;"	d
EG_PERMIT_DBG	src/eg_perm_it.h	44;"	d
EG_RETURN	src/eg_macros.h	211;"	d
EG_RETURN	src/eg_macros.h	292;"	d
EG_RSET_DEBUG	src/eg_raset.h	50;"	d
EG_SIM_DEBUG	src/eg_simula.h	60;"	d
EG_SIM_VERBOSE	src/eg_simula.h	57;"	d
EG_SLAB_DEBUG	src/eg_memslab.h	111;"	d
EG_SLAB_ENDMARK	src/eg_memslab.h	115;"	d
EG_SLAB_LLIMIT	src/eg_memslab.h	85;"	d
EG_SLAB_MASK	src/eg_memslab.h	93;"	d
EG_SLAB_PAGE	src/eg_memslab.h	128;"	d
EG_SLAB_POISON	src/eg_memslab.h	97;"	d
EG_SLAB_PROFILE	src/eg_memslab.h	101;"	d
EG_SLAB_REDUCE_TO_MALLOC	src/eg_config.h	264;"	d
EG_SLAB_REDUCE_TO_MALLOC	src/eg_memslab.h	121;"	d
EG_SLAB_SIZE	src/eg_memslab.h	89;"	d
EG_SLAB_ULIMIT	src/eg_memslab.h	84;"	d
EG_SLAB_VERBOSE	src/eg_memslab.h	106;"	d
EG_SLK_DEBUG	src/eg_slk.h	70;"	d
EG_SLK_FULL_SEARCH	src/eg_slk.h	79;"	d
EG_SLK_VERB	src/eg_slk.h	74;"	d
EG_UL2idx	src/eg_idx.h	88;"	d
EGa16ListAddAfter	src/eg_a16list.h	124;"	d
EGa16ListAddBefore	src/eg_a16list.h	140;"	d
EGa16ListDel	src/eg_a16list.h	181;"	d
EGa16ListInit	src/eg_a16list.h	84;"	d
EGa16ListMoveAfter	src/eg_a16list.h	219;"	d
EGa16ListMoveBefore	src/eg_a16list.h	237;"	d
EGa16ListNull	src/eg_a16list.h	76;"	d
EGa16ListReplace	src/eg_a16list.h	199;"	d
EGa16ListSplice	src/eg_a16list.h	255;"	d
EGa16List_t	src/eg_a16list.h	/^EGa16List_t;$/;"	t	typeref:struct:EGa16List_t
EGa16List_t	src/eg_a16list.h	/^typedef struct EGa16List_t$/;"	s
EGa32HashA	src/eg_a32hash.h	56;"	d
EGa32HashB	src/eg_a32hash.h	54;"	d
EGa32HashFunc	src/eg_a32hash.h	62;"	d
EGa32HashInfo_t	src/eg_a32hash.h	/^typedef struct EGa32HashInfo_t$/;"	s
EGa32HashInfo_t	src/eg_a32hash.h	/^} EGa32HashInfo_t;$/;"	t	typeref:struct:EGa32HashInfo_t
EGa32HashPrime	src/eg_a32hash.h	52;"	d
EGa32HashTableAdd	src/eg_a32hash.h	172;"	d
EGa32HashTableClear	src/eg_a32hash.h	108;"	d
EGa32HashTableDel	src/eg_a32hash.h	191;"	d
EGa32HashTableFind	src/eg_a32hash.h	122;"	d
EGa32HashTableFindNext	src/eg_a32hash.h	149;"	d
EGa32HashTableInit	src/eg_a32hash.h	94;"	d
EGa32HashTableNull	src/eg_a32hash.h	86;"	d
EGa32HashTableResize	src/eg_a32hash.h	213;"	d
EGa32HashTable_t	src/eg_a32hash.h	/^EGa32HashTable_t;$/;"	t	typeref:struct:EGa32HashTable_t
EGa32HashTable_t	src/eg_a32hash.h	/^typedef struct EGa32HashTable_t$/;"	s
EGa32ListAddAfter	src/eg_a32list.h	124;"	d
EGa32ListAddBefore	src/eg_a32list.h	140;"	d
EGa32ListDel	src/eg_a32list.h	181;"	d
EGa32ListInit	src/eg_a32list.h	84;"	d
EGa32ListMoveAfter	src/eg_a32list.h	219;"	d
EGa32ListMoveBefore	src/eg_a32list.h	237;"	d
EGa32ListNull	src/eg_a32list.h	76;"	d
EGa32ListReplace	src/eg_a32list.h	199;"	d
EGa32ListSplice	src/eg_a32list.h	255;"	d
EGa32List_t	src/eg_a32list.h	/^EGa32List_t;$/;"	t	typeref:struct:EGa32List_t
EGa32List_t	src/eg_a32list.h	/^typedef struct EGa32List_t$/;"	s
EGaDE_t	src/eg_adgraph.h	/^EGaDE_t;$/;"	t	typeref:struct:__anon93
EGaDGClear	src/eg_adgraph.h	165;"	d
EGaDGInit	src/eg_adgraph.c	/^void EGaDGInit($/;"	f
EGaDG_t	src/eg_adgraph.h	/^EGaDG_t;$/;"	t	typeref:struct:__anon94
EGaDGgetEdge	src/eg_adgraph.h	111;"	d
EGaDGgetInE	src/eg_adgraph.h	123;"	d
EGaDGgetNedges	src/eg_adgraph.h	139;"	d
EGaDGgetNin	src/eg_adgraph.h	127;"	d
EGaDGgetNnodes	src/eg_adgraph.h	135;"	d
EGaDGgetNode	src/eg_adgraph.h	100;"	d
EGaDGgetNout	src/eg_adgraph.h	131;"	d
EGaDGgetOutE	src/eg_adgraph.h	118;"	d
EGaDN_t	src/eg_adgraph.h	/^EGaDN_t;$/;"	t	typeref:struct:__anon92
EGaGetCElem	src/eg_macros.h	501;"	d
EGaGetElem	src/eg_macros.h	505;"	d
EGaGetPos	src/eg_macros.h	509;"	d
EGaHashA	src/eg_ahash.h	56;"	d
EGaHashB	src/eg_ahash.h	54;"	d
EGaHashFunc	src/eg_ahash.h	62;"	d
EGaHashInfo_t	src/eg_ahash.h	/^typedef struct EGaHashInfo_t$/;"	s
EGaHashInfo_t	src/eg_ahash.h	/^} EGaHashInfo_t;$/;"	t	typeref:struct:EGaHashInfo_t
EGaHashPrime	src/eg_ahash.h	52;"	d
EGaHashTableAdd	src/eg_ahash.h	172;"	d
EGaHashTableClear	src/eg_ahash.h	108;"	d
EGaHashTableDel	src/eg_ahash.h	191;"	d
EGaHashTableFind	src/eg_ahash.h	122;"	d
EGaHashTableFindNext	src/eg_ahash.h	149;"	d
EGaHashTableInit	src/eg_ahash.h	94;"	d
EGaHashTableNull	src/eg_ahash.h	86;"	d
EGaHashTableResize	src/eg_ahash.h	213;"	d
EGaHashTable_t	src/eg_ahash.h	/^EGaHashTable_t;$/;"	t	typeref:struct:EGaHashTable_t
EGaHashTable_t	src/eg_ahash.h	/^typedef struct EGaHashTable_t$/;"	s
EGaListAddAfter	src/eg_alist.h	124;"	d
EGaListAddBefore	src/eg_alist.h	140;"	d
EGaListDel	src/eg_alist.h	181;"	d
EGaListInit	src/eg_alist.h	84;"	d
EGaListMoveAfter	src/eg_alist.h	219;"	d
EGaListMoveBefore	src/eg_alist.h	237;"	d
EGaListNull	src/eg_alist.h	76;"	d
EGaListReplace	src/eg_alist.h	199;"	d
EGaListSplice	src/eg_alist.h	255;"	d
EGaList_t	src/eg_alist.h	/^EGaList_t;$/;"	t	typeref:struct:EGaList_t
EGaList_t	src/eg_alist.h	/^typedef struct EGaList_t$/;"	s
EGaStackClear	src/eg_astack.h	83;"	d
EGaStackInit	src/eg_astack.h	65;"	d
EGaStackIsEmpty	src/eg_astack.h	101;"	d
EGaStackNull	src/eg_astack.h	50;"	d
EGaStackPeek	src/eg_astack.h	109;"	d
EGaStackPop	src/eg_astack.h	121;"	d
EGaStackPush	src/eg_astack.h	93;"	d
EGaStack_t	src/eg_astack.h	/^EGaStack_t;$/;"	t	typeref:struct:__anon82
EGaUE_t	src/eg_augraph.h	/^	} EGaUE_t;$/;"	t	typeref:struct:__anon2
EGaUG_t	src/eg_augraph.h	/^	} EGaUG_t;$/;"	t	typeref:struct:__anon3
EGaUN_t	src/eg_augraph.h	/^	} EGaUN_t;$/;"	t	typeref:struct:__anon1
EGabs	src/eg_nummacros.h	75;"	d
EGalgMaxClosure	src/eg_maxclosure.c	/^int EGalgMaxClosure($/;"	f
EGalgMaxClosure_PR	src/eg_maxclosure.c	/^static int EGalgMaxClosure_PR($/;"	f	file:
EGbitAnd	src/eg_bit.c	/^int EGbitAnd (EGbitset_t * dst,$/;"	f
EGbitCopy	src/eg_bit.c	/^int EGbitCopy (EGbitset_t * const a,$/;"	f
EGbitCount	src/eg_bit.c	/^EGbitset_t EGbitCount (EGbitset_t * bitset,$/;"	f
EGbitElemBitCount	src/eg_bit.c	/^EGbitset_t EGbitElemBitCount (EGbitset_t n)$/;"	f
EGbitIsEqual	src/eg_bit.c	/^int EGbitIsEqual (const EGbitset_t * a,$/;"	f
EGbitIsLeq	src/eg_bit.c	/^int EGbitIsLeq (const EGbitset_t * a,$/;"	f
EGbitLeftShift	src/eg_bit.c	/^int EGbitLeftShift (EGbitset_t * dst,$/;"	f
EGbitNext	src/eg_bit.c	/^unsigned int EGbitNext (const EGbitset_t * dst,$/;"	f
EGbitOr	src/eg_bit.c	/^int EGbitOr (EGbitset_t * dst,$/;"	f
EGbitPlus	src/eg_bit.c	/^int EGbitPlus (EGbitset_t * dst,$/;"	f
EGbitPrev	src/eg_bit.c	/^unsigned int EGbitPrev (const EGbitset_t * dst,$/;"	f
EGbitReset	src/eg_bit.c	/^int EGbitReset (EGbitset_t * dst,$/;"	f
EGbitRightShift	src/eg_bit.c	/^int EGbitRightShift (EGbitset_t * dst,$/;"	f
EGbitSanity	src/eg_bit.c	/^int EGbitSanity (void)$/;"	f
EGbitSet	src/eg_bit.c	/^int EGbitSet (EGbitset_t * const dst,$/;"	f
EGbitTest	src/eg_bit.c	/^int EGbitTest (EGbitset_t const *const dst,$/;"	f
EGbitUnset	src/eg_bit.c	/^int EGbitUnset (EGbitset_t * dst,$/;"	f
EGbitXor	src/eg_bit.c	/^int EGbitXor (EGbitset_t * dst,$/;"	f
EGbitsetSize	src/eg_bit.h	74;"	d
EGbitset_t	src/eg_bit.h	88;"	d
EGcall	src/eg_macros.h	450;"	d
EGcallD	src/eg_macros.h	455;"	d
EGcharPermSort	src/eg_symtab.c	/^void EGcharPermSort (const size_t sz,$/;"	f
EGcompare_f	src/eg_compare.h	/^typedef int (*EGcompare_f) (const void *,$/;"	t
EGconstructor_f	src/eg_mem.h	/^typedef void (*EGconstructor_f) (void *);$/;"	t
EGcontainerOf	src/eg_macros.h	138;"	d
EGcopy_f	src/eg_macros.h	/^typedef void *(*EGcopy_f) (void *p);$/;"	t
EGcpxCHECKRVALG	src/eg_cplex.h	52;"	d
EGcpxCall	src/eg_cplex.h	65;"	d
EGcpxCallD	src/eg_cplex.h	71;"	d
EGcpxReadDblparam	src/eg_cplex.c	50;"	d	file:
EGcpxReadIntparam	src/eg_cplex.c	33;"	d	file:
EGcpxReadOptions	src/eg_cplex.c	/^int EGcpxReadOptions(CPXENVptr env, FILE * inputfile)$/;"	f
EGcpxSetintparam	src/eg_cplex.h	75;"	d
EGdCompare	src/eg_compare.c	/^int EGdCompare (const void *str1,$/;"	f
EGdestructor_f	src/eg_mem.h	/^typedef void (*EGdestructor_f) (void *);$/;"	t
EGdisplayOS_f	src/eg_io.h	/^typedef void (*EGdisplayOS_f) (void *,$/;"	t
EGdisplayString	src/eg_io.c	/^void EGdisplayString (void *str,$/;"	f
EGdisplay_f	src/eg_io.h	/^typedef void (*EGdisplay_f) (void *, FILE *);$/;"	t
EGeBTreeAddLeft	src/eg_ebtree.h	105;"	d
EGeBTreeAddRight	src/eg_ebtree.h	116;"	d
EGeBTreeClear	src/eg_ebtree.h	97;"	d
EGeBTreeCut	src/eg_ebtree.h	292;"	d
EGeBTreeDel	src/eg_ebtree.h	273;"	d
EGeBTreeGetFirst	src/eg_ebtree.h	252;"	d
EGeBTreeGetLast	src/eg_ebtree.h	262;"	d
EGeBTreeGetLeft	src/eg_ebtree.h	135;"	d
EGeBTreeGetNext	src/eg_ebtree.h	204;"	d
EGeBTreeGetParent	src/eg_ebtree.h	127;"	d
EGeBTreeGetPrev	src/eg_ebtree.h	238;"	d
EGeBTreeGetRight	src/eg_ebtree.h	143;"	d
EGeBTreeGetRoot	src/eg_ebtree.h	150;"	d
EGeBTreeInit	src/eg_ebtree.h	81;"	d
EGeBTreeReplace	src/eg_ebtree.h	162;"	d
EGeBTreeReset	src/eg_ebtree.h	89;"	d
EGeBTree_t	src/eg_ebtree.h	/^EGeBTree_t;$/;"	t	typeref:struct:EGeBTree_t
EGeBTree_t	src/eg_ebtree.h	/^typedef struct EGeBTree_t$/;"	s
EGeDgraphAddEdge	src/eg_edgraph.h	194;"	d
EGeDgraphAddNode	src/eg_edgraph.h	160;"	d
EGeDgraphChangeHead	src/eg_edgraph.h	254;"	d
EGeDgraphChangeTail	src/eg_edgraph.h	236;"	d
EGeDgraphClear	src/eg_edgraph.h	107;"	d
EGeDgraphDelEdge	src/eg_edgraph.h	217;"	d
EGeDgraphDelNode	src/eg_edgraph.h	176;"	d
EGeDgraphEdgeClear	src/eg_edgraph.h	127;"	d
EGeDgraphEdgeInit	src/eg_edgraph.h	112;"	d
EGeDgraphEdgeReset	src/eg_edgraph.h	121;"	d
EGeDgraphEdge_t	src/eg_edgraph.h	/^EGeDgraphEdge_t;$/;"	t	typeref:struct:EGeDgraphEdge_t
EGeDgraphEdge_t	src/eg_edgraph.h	/^typedef struct EGeDgraphEdge_t$/;"	s
EGeDgraphInit	src/eg_edgraph.h	93;"	d
EGeDgraphNodeClear	src/eg_edgraph.h	148;"	d
EGeDgraphNodeInit	src/eg_edgraph.h	132;"	d
EGeDgraphNodeReset	src/eg_edgraph.h	142;"	d
EGeDgraphNode_t	src/eg_edgraph.h	/^EGeDgraphNode_t;$/;"	t	typeref:struct:EGeDgraphNode_t
EGeDgraphNode_t	src/eg_edgraph.h	/^typedef struct EGeDgraphNode_t$/;"	s
EGeDgraphReset	src/eg_edgraph.h	101;"	d
EGeDgraph_t	src/eg_edgraph.h	/^EGeDgraph_t;$/;"	t	typeref:struct:__anon84
EGeHashFunc	src/eg_ehash.h	67;"	d
EGeHashInfo_t	src/eg_ehash.h	/^typedef struct EGeHashInfo_t$/;"	s
EGeHashInfo_t	src/eg_ehash.h	/^} EGeHashInfo_t;$/;"	t	typeref:struct:EGeHashInfo_t
EGeHashTableAdd	src/eg_ehash.h	164;"	d
EGeHashTableClear	src/eg_ehash.h	114;"	d
EGeHashTableDel	src/eg_ehash.h	177;"	d
EGeHashTableFind	src/eg_ehash.h	125;"	d
EGeHashTableFindNext	src/eg_ehash.h	147;"	d
EGeHashTableInit	src/eg_ehash.h	99;"	d
EGeHashTableNull	src/eg_ehash.h	92;"	d
EGeHashTableResize	src/eg_ehash.h	189;"	d
EGeHashTable_t	src/eg_ehash.h	/^EGeHashTable_t;$/;"	t	typeref:struct:EGeHashTable_t
EGeHashTable_t	src/eg_ehash.h	/^typedef struct EGeHashTable_t$/;"	s
EGeLinkIsNull	src/eg_elink.h	74;"	d
EGeLinkIsSelf	src/eg_elink.h	66;"	d
EGeLinkReset	src/eg_elink.h	49;"	d
EGeLinkSet	src/eg_elink.h	84;"	d
EGeLinkSetSelf	src/eg_elink.h	58;"	d
EGeLink_t	src/eg_elink.h	/^EGeLink_t;$/;"	t	typeref:struct:EGeLink_t
EGeLink_t	src/eg_elink.h	/^typedef struct EGeLink_t$/;"	s
EGeListAddAfter	src/eg_elist.h	112;"	d
EGeListAddBefore	src/eg_elist.h	120;"	d
EGeListDel	src/eg_elist.h	147;"	d
EGeListInit	src/eg_elist.h	82;"	d
EGeListIsEmpty	src/eg_elist.h	196;"	d
EGeListMoveAfter	src/eg_elist.h	179;"	d
EGeListMoveBefore	src/eg_elist.h	190;"	d
EGeListNull	src/eg_elist.h	62;"	d
EGeListReplace	src/eg_elist.h	163;"	d
EGeListSplice	src/eg_elist.h	224;"	d
EGeList_t	src/eg_elist.h	/^EGeList_t;$/;"	t	typeref:struct:EGeList_t
EGeList_t	src/eg_elist.h	/^typedef struct EGeList_t$/;"	s
EGeOctBit	src/eg_octree.c	/^static const unsigned EGeOctBit[17] =$/;"	v	file:
EGeOctKey	src/eg_octree.c	130;"	d	file:
EGeOctaddleaf	src/eg_octree.c	/^int EGeOctaddleaf(EGeOctree_t*const tree,EGeOctdata_t*const leaf)$/;"	f
EGeOctalloc	src/eg_octree.c	/^EGeOctbranch_t* EGeOctalloc(void*adata) { return EGsMalloc(EGeOctbranch_t,1); }$/;"	f
EGeOctalloc_f	src/eg_octree.h	/^typedef EGeOctbranch_t* (*EGeOctalloc_f)(void*adata);$/;"	t
EGeOctbranch_t	src/eg_octree.h	/^} EGeOctbranch_t;$/;"	t	typeref:struct:__anon90
EGeOctbrother	src/eg_octree.c	/^EGeOctdata_t* EGeOctbrother(const EGeOctdata_t*const branch)$/;"	f
EGeOctclear	src/eg_octree.c	/^int EGeOctclear( EGeOctree_t*const tree)$/;"	f
EGeOctcousin	src/eg_octree.c	/^EGeOctdata_t* EGeOctcousin(const EGeOctdata_t*const branch)$/;"	f
EGeOctdata_st	src/eg_octree.h	/^typedef struct EGeOctdata_st$/;"	s
EGeOctdata_t	src/eg_octree.h	/^} EGeOctdata_t;$/;"	t	typeref:struct:EGeOctdata_st
EGeOctdelleaf	src/eg_octree.c	/^int EGeOctdelleaf(EGeOctree_t*const tree,EGeOctdata_t*const leaf)$/;"	f
EGeOctfind	src/eg_octree.c	/^EGeOctdata_t*EGeOctfind($/;"	f
EGeOctfree	src/eg_octree.c	/^void EGeOctfree(void*adata,EGeOctbranch_t*branch) { EGfree(branch); }$/;"	f
EGeOctfree_f	src/eg_octree.h	/^typedef void (*EGeOctfree_f)(void*adata,EGeOctbranch_t*branch);$/;"	t
EGeOctinit	src/eg_octree.c	/^int EGeOctinit($/;"	f
EGeOctree_t	src/eg_octree.h	/^} EGeOctree_t;$/;"	t	typeref:struct:__anon91
EGeOctson	src/eg_octree.c	/^EGeOctdata_t*EGeOctson(const EGeOctdata_t*const data)$/;"	f
EGeUgraphAddEdge	src/eg_eugraph.h	193;"	d
EGeUgraphAddNode	src/eg_eugraph.h	161;"	d
EGeUgraphChangeEP	src/eg_eugraph.h	236;"	d
EGeUgraphChangeHead	src/eg_eugraph.h	266;"	d
EGeUgraphChangeTail	src/eg_eugraph.h	255;"	d
EGeUgraphClear	src/eg_eugraph.h	112;"	d
EGeUgraphDelEdge	src/eg_eugraph.h	216;"	d
EGeUgraphDelNode	src/eg_eugraph.h	177;"	d
EGeUgraphEP_t	src/eg_eugraph.h	/^EGeUgraphEP_t;$/;"	t	typeref:struct:EGeUgraphEP_t
EGeUgraphEP_t	src/eg_eugraph.h	/^typedef struct EGeUgraphEP_t$/;"	s
EGeUgraphEdgeClear	src/eg_eugraph.h	123;"	d
EGeUgraphEdgeInit	src/eg_eugraph.h	117;"	d
EGeUgraphEdge_t	src/eg_eugraph.h	/^EGeUgraphEdge_t;$/;"	t	typeref:struct:EGeUgraphEdge_t
EGeUgraphEdge_t	src/eg_eugraph.h	/^typedef struct EGeUgraphEdge_t$/;"	s
EGeUgraphGetAdjEdge	src/eg_eugraph.h	147;"	d
EGeUgraphInit	src/eg_eugraph.h	103;"	d
EGeUgraphNodeClear	src/eg_eugraph.h	138;"	d
EGeUgraphNodeInit	src/eg_eugraph.h	128;"	d
EGeUgraphNode_t	src/eg_eugraph.h	/^EGeUgraphNode_t;$/;"	t	typeref:struct:EGeUgraphNode_t
EGeUgraphNode_t	src/eg_eugraph.h	/^typedef struct EGeUgraphNode_t$/;"	s
EGeUgraph_t	src/eg_eugraph.h	/^EGeUgraph_t;$/;"	t	typeref:struct:EGeUgraph_t
EGeUgraph_t	src/eg_eugraph.h	/^typedef struct EGeUgraph_t$/;"	s
EGesFind	src/eg_eset.h	70;"	d
EGesInit	src/eg_eset.h	60;"	d
EGesLink	src/eg_eset.h	88;"	d
EGes_t	src/eg_eset.h	/^EGes_t;$/;"	t	typeref:struct:EGes_t
EGes_t	src/eg_eset.h	/^typedef struct EGes_t$/;"	s
EGflipperAddNode	src/eg_slk.c	/^int EGflipperAddNode(EGflipper_t*const flip,const int node)$/;"	f
EGflipperClear	src/eg_slk.h	228;"	d
EGflipperCopy	src/eg_slk.c	/^void EGflipperCopy(const EGflipper_t*const src,EGflipper_t*const dst)$/;"	f
EGflipperDisplay	src/eg_slk.c	/^int EGflipperDisplay(EGflipper_t*const flip,EGioFile_t* out)$/;"	f
EGflipperGetCost	src/eg_slk.c	/^int EGflipperGetCost(EGslkData_t*const data,EGflipper_t*const flip)$/;"	f
EGflipperGetTour	src/eg_slk.c	/^int EGflipperGetTour(EGflipper_t*const flip,int*const tour)$/;"	f
EGflipperInit	src/eg_slk.h	222;"	d
EGflipperLoadTour	src/eg_slk.c	/^int EGflipperLoadTour(EGflipper_t*const flip,const int*const tour,size_t const tsz)$/;"	f
EGflipperRemoveNode	src/eg_slk.c	/^int EGflipperRemoveNode(EGflipper_t*const flip,const int node)$/;"	f
EGflipperResize	src/eg_slk.c	/^void EGflipperResize(EGflipper_t*const flip,const size_t sz)$/;"	f
EGflipper_t	src/eg_slk.h	/^typedef struct EGflipper_t$/;"	s
EGflipper_t	src/eg_slk.h	/^} EGflipper_t;$/;"	t	typeref:struct:EGflipper_t
EGfp10_t	src/eg_fp.h	/^typedef long EGfp10_t;$/;"	t
EGfp20_t	src/eg_fp.h	/^typedef long EGfp20_t;$/;"	t
EGfp25_t	src/eg_fp.h	/^typedef long EGfp25_t;$/;"	t
EGfp28_t	src/eg_fp.h	/^typedef long EGfp28_t;$/;"	t
EGfpAdd	src/eg_fp.h	216;"	d
EGfpAdd	src/eg_fp.h	218;"	d
EGfpAdd10	src/eg_fp.h	220;"	d
EGfpAdd20	src/eg_fp.h	221;"	d
EGfpAdd25	src/eg_fp.h	222;"	d
EGfpAdd28	src/eg_fp.h	223;"	d
EGfpCheckOverflow10	src/eg_fp.h	141;"	d
EGfpCheckOverflow20	src/eg_fp.h	142;"	d
EGfpCheckOverflow25	src/eg_fp.h	143;"	d
EGfpCheckOverflow28	src/eg_fp.h	144;"	d
EGfpDiv10	src/eg_fp.h	275;"	d
EGfpDiv10	src/eg_fp.h	296;"	d
EGfpDiv20	src/eg_fp.h	280;"	d
EGfpDiv20	src/eg_fp.h	297;"	d
EGfpDiv25	src/eg_fp.h	285;"	d
EGfpDiv25	src/eg_fp.h	298;"	d
EGfpDiv28	src/eg_fp.h	290;"	d
EGfpDiv28	src/eg_fp.h	299;"	d
EGfpMinus	src/eg_fp.h	303;"	d
EGfpMinus10	src/eg_fp.h	304;"	d
EGfpMinus20	src/eg_fp.h	305;"	d
EGfpMinus25	src/eg_fp.h	306;"	d
EGfpMinus28	src/eg_fp.h	307;"	d
EGfpMul10	src/eg_fp.h	242;"	d
EGfpMul10	src/eg_fp.h	263;"	d
EGfpMul20	src/eg_fp.h	247;"	d
EGfpMul20	src/eg_fp.h	264;"	d
EGfpMul25	src/eg_fp.h	252;"	d
EGfpMul25	src/eg_fp.h	265;"	d
EGfpMul28	src/eg_fp.h	257;"	d
EGfpMul28	src/eg_fp.h	266;"	d
EGfpSub	src/eg_fp.h	227;"	d
EGfpSub	src/eg_fp.h	229;"	d
EGfpSub10	src/eg_fp.h	231;"	d
EGfpSub20	src/eg_fp.h	232;"	d
EGfpSub25	src/eg_fp.h	233;"	d
EGfpSub28	src/eg_fp.h	234;"	d
EGfree	src/eg_mem.h	181;"	d
EGfree	src/eg_mem.h	188;"	d
EGfree_f	src/eg_mem.h	/^typedef void (*EGfree_f) (void *);$/;"	t
EGgcItClear	src/eg_gcit.h	85;"	d
EGgcItGetChange	src/eg_gcit.h	109;"	d
EGgcItGetSize	src/eg_gcit.h	96;"	d
EGgcItGetTuple	src/eg_gcit.h	102;"	d
EGgcItInit	src/eg_gcit.h	73;"	d
EGgcItNext	src/eg_gcit.h	117;"	d
EGgcItReset	src/eg_gcit.h	59;"	d
EGgcIt_t	src/eg_gcit.h	/^EGgcIt_t;$/;"	t	typeref:struct:EGgcIt_t
EGgcIt_t	src/eg_gcit.h	/^typedef struct EGgcIt_t$/;"	s
EGgmpPl	src/eg_lpnum.c	/^EGmemSlabPool_t EGgmpPl[__GMP_MEM_NPOOL__];$/;"	v
EGguDegree	src/eg_graph_util.c	/^int EGguDegree($/;"	f
EGhashA	src/eg_ehash.c	/^const EGkey_t EGhashA = 179422291LLU;$/;"	v
EGhashB	src/eg_ehash.c	/^const EGkey_t EGhashB = 109180541LLU;$/;"	v
EGhashPrime	src/eg_ehash.c	/^const EGkey_t EGhashPrime = 4294959751LLU;$/;"	v
EGidxAdd	src/eg_idx.h	117;"	d
EGidxDiv	src/eg_idx.h	139;"	d
EGidxIsEqqual	src/eg_idx.h	95;"	d
EGidxIsLeq	src/eg_idx.h	109;"	d
EGidxIsLess	src/eg_idx.h	102;"	d
EGidxMult	src/eg_idx.h	132;"	d
EGidxOne	src/eg_idx.h	147;"	d
EGidxPP	src/eg_idx.h	150;"	d
EGidxSub	src/eg_idx.h	125;"	d
EGidxZero	src/eg_idx.h	142;"	d
EGidx_t	src/eg_idx.h	71;"	d
EGidxc_t	src/eg_idx.h	72;"	d
EGioClose	src/eg_io.c	/^int EGioClose(EGioFile_t*file)$/;"	f
EGioDisCom	src/eg_io.c	/^void EGioDisCom (char **next,$/;"	f
EGioEof	src/eg_io.c	/^int EGioEof(const EGioFile_t*const file)$/;"	f
EGioError	src/eg_io.c	/^int EGioError(const EGioFile_t*const file)$/;"	f
EGioFile_st	src/eg_io.c	/^struct EGioFile_st {int type; void*file;};$/;"	s	file:
EGioFile_t	src/eg_io.h	/^typedef struct EGioFile_st EGioFile_t;$/;"	t	typeref:struct:EGioFile_st
EGioFlush	src/eg_io.c	/^int EGioFlush(EGioFile_t*file)$/;"	f
EGioGets	src/eg_io.c	/^char* EGioGets(char*buf, int len, EGioFile_t*file)$/;"	f
EGioNParse	src/eg_io.c	/^void EGioNParse (char *input,$/;"	f
EGioOpen	src/eg_io.c	/^EGioFile_t* EGioOpen(const char *path, const char *mode)$/;"	f
EGioOpenFILE	src/eg_io.c	/^EGioFile_t* EGioOpenFILE(FILE*ifile)$/;"	f
EGioParse	src/eg_io.c	/^void EGioParse (char **next,$/;"	f
EGioPrintf	src/eg_io.c	/^int EGioPrintf(EGioFile_t*file,const char* format, ...)$/;"	f
EGioReadIntParam	src/eg_io.c	/^int EGioReadIntParam( const int argc,$/;"	f
EGioReadLine	src/eg_io.c	/^int EGioReadLine(char*const str,size_t const max_len, FILE*file)$/;"	f
EGioReadNamedDblPlusParam	src/eg_io.c	/^int EGioReadNamedDblPlusParam(const int argc,$/;"	f
EGioReadNamedIntNNParam	src/eg_io.c	/^int EGioReadNamedIntNNParam(const int argc,$/;"	f
EGioReadNamedIntPlusParam	src/eg_io.c	/^int EGioReadNamedIntPlusParam(const int argc,$/;"	f
EGioReadNamedParam	src/eg_io.c	/^int EGioReadNamedParam( const int argc,$/;"	f
EGioReadNamedStringParam	src/eg_io.c	/^int EGioReadNamedStringParam(const int argc,$/;"	f
EGioWrite	src/eg_io.c	/^int EGioWrite(EGioFile_t*file,const char*const string)$/;"	f
EGio_BUFSIZE	src/eg_io.c	427;"	d	file:
EGkeyZero	src/eg_ehash.h	50;"	d
EGkey_t	src/eg_a32hash.h	48;"	d
EGkey_t	src/eg_a32hash.h	50;"	d
EGkey_t	src/eg_ahash.h	48;"	d
EGkey_t	src/eg_ahash.h	50;"	d
EGkey_t	src/eg_ehash.h	/^typedef uint64_t EGkey_t;$/;"	t
EGkeytabAdd	src/eg_keytab.c	/^int EGkeytabAdd(EGkeytab_t*const keytab,$/;"	f
EGkeytabClear	src/eg_keytab.h	66;"	d
EGkeytabInfo_t	src/eg_keytab.h	/^} EGkeytabInfo_t;$/;"	t	typeref:struct:__anon88
EGkeytabInit	src/eg_keytab.h	59;"	d
EGkeytabKey	src/eg_keytab.h	78;"	d
EGkeytabLookUp	src/eg_keytab.c	/^int EGkeytabLookUp( const EGkeytab_t*const keytab,$/;"	f
EGkeytab_t	src/eg_keytab.h	/^} EGkeytab_t;$/;"	t	typeref:struct:__anon89
EGlfCompare	src/eg_compare.c	/^int EGlfCompare (const void *str1,$/;"	f
EGlib_info	src/eg_macros.c	/^void EGlib_info(void)$/;"	f
EGlpNumAddInnProdTo	src/eg_lpnum.h	557;"	d
EGlpNumAddTo	src/eg_lpnum.h	584;"	d
EGlpNumAddUiTo	src/eg_lpnum.h	575;"	d
EGlpNumAllocArray	src/eg_lpnum.h	312;"	d
EGlpNumCeil	src/eg_lpnum.h	325;"	d
EGlpNumClear	src/eg_lpnum.c	/^void EGlpNumClear(void)$/;"	f
EGlpNumClearVar	src/eg_lpnum.h	671;"	d
EGlpNumCopy	src/eg_lpnum.h	471;"	d
EGlpNumCopyAbs	src/eg_lpnum.h	502;"	d
EGlpNumCopyArray	src/eg_lpnum.h	537;"	d
EGlpNumCopyDiff	src/eg_lpnum.h	455;"	d
EGlpNumCopyDiffRatio	src/eg_lpnum.h	447;"	d
EGlpNumCopyFrac	src/eg_lpnum.h	522;"	d
EGlpNumCopyNeg	src/eg_lpnum.h	513;"	d
EGlpNumCopySqrOver	src/eg_lpnum.h	491;"	d
EGlpNumCopySum	src/eg_lpnum.h	463;"	d
EGlpNumDivTo	src/eg_lpnum.h	614;"	d
EGlpNumDivUiTo	src/eg_lpnum.h	624;"	d
EGlpNumExit	src/eg_lpnum.h	278;"	d
EGlpNumFloor	src/eg_lpnum.h	329;"	d
EGlpNumFreeArray	src/eg_lpnum.h	304;"	d
EGlpNumGetStr	src/eg_lpnum.h	300;"	d
EGlpNumInitVar	src/eg_lpnum.h	667;"	d
EGlpNumInv	src/eg_lpnum.h	334;"	d
EGlpNumIsDiffLess	src/eg_lpnum.h	408;"	d
EGlpNumIsEqqual	src/eg_lpnum.h	343;"	d
EGlpNumIsEqual	src/eg_lpnum.h	355;"	d
EGlpNumIsGreaDbl	src/eg_lpnum.h	428;"	d
EGlpNumIsGreatZero	src/eg_lpnum.h	379;"	d
EGlpNumIsLeq	src/eg_lpnum.h	438;"	d
EGlpNumIsLess	src/eg_lpnum.h	373;"	d
EGlpNumIsLessDbl	src/eg_lpnum.h	418;"	d
EGlpNumIsLessZero	src/eg_lpnum.h	386;"	d
EGlpNumIsNeq	src/eg_lpnum.h	357;"	d
EGlpNumIsNeqZero	src/eg_lpnum.h	361;"	d
EGlpNumIsNeqq	src/eg_lpnum.h	359;"	d
EGlpNumIsNeqqZero	src/eg_lpnum.h	363;"	d
EGlpNumIsSumLess	src/eg_lpnum.h	397;"	d
EGlpNumMultTo	src/eg_lpnum.h	604;"	d
EGlpNumMultUiTo	src/eg_lpnum.h	634;"	d
EGlpNumOne	src/eg_lpnum.h	648;"	d
EGlpNumReadStr	src/eg_lpnum.h	296;"	d
EGlpNumReallocArray	src/eg_lpnum.h	308;"	d
EGlpNumSet	src/eg_lpnum.h	321;"	d
EGlpNumSetPrecision	src/eg_lpnum.c	/^void EGlpNumSetPrecision (const unsigned prec)$/;"	f
EGlpNumSetToMaxAbs	src/eg_lpnum.h	480;"	d
EGlpNumSetToMinAbs	src/eg_lpnum.h	481;"	d
EGlpNumSign	src/eg_lpnum.h	655;"	d
EGlpNumStart	src/eg_lpnum.c	/^void EGlpNumStart(void)$/;"	f
EGlpNumSubInnProdTo	src/eg_lpnum.h	547;"	d
EGlpNumSubTo	src/eg_lpnum.h	594;"	d
EGlpNumSubUiTo	src/eg_lpnum.h	566;"	d
EGlpNumToLf	src/eg_lpnum.h	663;"	d
EGlpNumZero	src/eg_lpnum.h	641;"	d
EGmalloc	src/eg_mem.h	129;"	d
EGmax	src/eg_nummacros.h	56;"	d
EGmemSlabClear	src/eg_memslab.c	/^void EGmemSlabClear( EGmemSlab_t*slab)$/;"	f
EGmemSlabDisplay	src/eg_memslab.c	/^void EGmemSlabDisplay(const EGmemSlab_t*const slab, FILE*stream)$/;"	f
EGmemSlabGetSlab	src/eg_memslab.h	211;"	d
EGmemSlabPoolAlloc	src/eg_memslab.h	348;"	d
EGmemSlabPoolAlloc	src/eg_memslab.h	358;"	d
EGmemSlabPoolClear	src/eg_memslab.c	/^void EGmemSlabPoolClear(EGmemSlabPool_t*const Pool)$/;"	f
EGmemSlabPoolDisplay	src/eg_memslab.c	/^void EGmemSlabPoolDisplay(const EGmemSlabPool_t*const pool, FILE*stream)$/;"	f
EGmemSlabPoolFree	src/eg_memslab.h	384;"	d
EGmemSlabPoolFree	src/eg_memslab.h	391;"	d
EGmemSlabPoolInit	src/eg_memslab.h	312;"	d
EGmemSlabPoolInitProfile	src/eg_memslab.c	179;"	d	file:
EGmemSlabPoolInitProfile	src/eg_memslab.c	187;"	d	file:
EGmemSlabPoolSetParam	src/eg_memslab.c	/^int EGmemSlabPoolSetParam(EGmemSlabPool_t*const pool,$/;"	f
EGmemSlabPoolShrink	src/eg_memslab.c	/^void EGmemSlabPoolShrink(EGmemSlabPool_t*const Pool)$/;"	f
EGmemSlabPool_t	src/eg_memslab.h	/^EGmemSlabPool_t;$/;"	t	typeref:struct:EGmemSlabPool_t
EGmemSlabPool_t	src/eg_memslab.h	/^typedef struct EGmemSlabPool_t$/;"	s
EGmemSlabPopElement	src/eg_memslab.h	248;"	d
EGmemSlabPushElement	src/eg_memslab.h	273;"	d
EGmemSlab_t	src/eg_memslab.h	/^} EGmemSlab_t;$/;"	t	typeref:struct:__anon102
EGmin	src/eg_nummacros.h	64;"	d
EGmsAlloc	src/eg_memslab.h	406;"	d
EGmsClear	src/eg_memslab.h	409;"	d
EGmsFree	src/eg_memslab.h	407;"	d
EGmsInit	src/eg_memslab.h	408;"	d
EGmsShrink	src/eg_memslab.h	411;"	d
EGms_t	src/eg_memslab.h	410;"	d
EGmsbControl_t	src/eg_memslab.h	/^} EGmsbControl_t;$/;"	t	typeref:struct:__anon101
EGmvar	src/eg_io.c	/^void EGmvar (char *str,$/;"	f
EGnetClearSocket	src/eg_net.h	129;"	d
EGnetConnect	src/eg_net.c	/^int EGnetConnect (EGsocket_t * const skt, const char *host_name, unsigned port)$/;"	f
EGnetConnectE	src/eg_net.c	/^int EGnetConnectE (EGsocket_t * const skt, const char *host_name, unsigned port, int*const syserrnop)$/;"	f
EGnetDisconnect	src/eg_net.c	/^int EGnetDisconnect(EGsocket_t*const skt){return EGnetDisconnectE(skt,0);}$/;"	f
EGnetDisconnectE	src/eg_net.c	/^int EGnetDisconnectE (EGsocket_t * const skt,int*const syserrnop)$/;"	f
EGnetInitSocket	src/eg_net.h	125;"	d
EGnetListen	src/eg_net.c	/^int EGnetListen (EGsocket_t * const skt, unsigned p)$/;"	f
EGnetListenE	src/eg_net.c	/^int EGnetListenE (EGsocket_t * const skt, unsigned p,int*const syserrnop)$/;"	f
EGnetRConf	src/eg_net.c	389;"	d	file:
EGnetRConf	src/eg_net.c	392;"	d	file:
EGnetRecv	src/eg_net.c	404;"	d	file:
EGnetRecvChar	src/eg_net.c	/^int EGnetRecvChar(EGsocket_t * const skt, char *const c){return EGnetRecvCharE(skt,c,0);}$/;"	f
EGnetRecvCharE	src/eg_net.c	/^int EGnetRecvCharE (EGsocket_t * const skt, char *const buff,int*const syserrnop)$/;"	f
EGnetRecvDouble	src/eg_net.c	/^int EGnetRecvDouble(EGsocket_t * const skt, double *const d){return EGnetRecvDoubleE(skt,d,0);}$/;"	f
EGnetRecvDoubleE	src/eg_net.c	/^int EGnetRecvDoubleE (EGsocket_t * const skt, double *const d,int*const syserrnop)$/;"	f
EGnetRecvInt	src/eg_net.c	/^int EGnetRecvInt(EGsocket_t * const skt, int *const n){return EGnetRecvIntE(skt,n,0);}$/;"	f
EGnetRecvIntE	src/eg_net.c	/^int EGnetRecvIntE (EGsocket_t * const skt, int *const n,int*const syserrnop)$/;"	f
EGnetRecvShort	src/eg_net.c	/^int EGnetRecvShort (EGsocket_t * const skt, int*const n) {return EGnetRecvShortE(skt,n,0);}$/;"	f
EGnetRecvShortE	src/eg_net.c	/^int EGnetRecvShortE (EGsocket_t * const skt, int*const n,int*const syserrnop)$/;"	f
EGnetRecvString	src/eg_net.c	/^int EGnetRecvString(EGsocket_t * const skt, char *const const exstr, size_t max_size){return EGnetRecvStringE(skt,exstr,max_size,0);}$/;"	f
EGnetRecvStringE	src/eg_net.c	/^int EGnetRecvStringE (EGsocket_t * const skt, char *const const exstr, size_t max_size,int*const syserrnop)$/;"	f
EGnetRecvUint	src/eg_net.c	/^int EGnetRecvUint(EGsocket_t * const skt, unsigned int *const n){return EGnetRecvUintE(skt,n,0);}$/;"	f
EGnetRecvUintE	src/eg_net.c	/^int EGnetRecvUintE (EGsocket_t * const skt, unsigned int *const n,int*const syserrnop)$/;"	f
EGnetRecvUshort	src/eg_net.c	/^int EGnetRecvUshort(EGsocket_t * const skt, unsigned*const n){return EGnetRecvUshortE(skt,n,0);}$/;"	f
EGnetRecvUshortE	src/eg_net.c	/^int EGnetRecvUshortE (EGsocket_t * const skt, unsigned *const n,int*const syserrnop)$/;"	f
EGnetSConf	src/eg_net.c	390;"	d	file:
EGnetSConf	src/eg_net.c	393;"	d	file:
EGnetSend	src/eg_net.c	399;"	d	file:
EGnetSendChar	src/eg_net.c	/^int EGnetSendChar(EGsocket_t * const skt, const int c){return EGnetSendCharE(skt,c,0);}$/;"	f
EGnetSendCharE	src/eg_net.c	/^int EGnetSendCharE(EGsocket_t * const skt, const int c,int*const syserrnop)$/;"	f
EGnetSendDouble	src/eg_net.c	/^int EGnetSendDouble(EGsocket_t * const skt, const double exd){return EGnetSendDoubleE(skt,exd,0);}$/;"	f
EGnetSendDoubleE	src/eg_net.c	/^int EGnetSendDoubleE(EGsocket_t * const skt, const double exd,int*const syserrnop)$/;"	f
EGnetSendInt	src/eg_net.h	279;"	d
EGnetSendShort	src/eg_net.h	254;"	d
EGnetSendShortE	src/eg_net.h	255;"	d
EGnetSendString	src/eg_net.c	/^int EGnetSendString (EGsocket_t * const skt, const char *const const exstr){return EGnetSendStringE(skt,exstr,0);}$/;"	f
EGnetSendStringE	src/eg_net.c	/^int EGnetSendStringE (EGsocket_t * const skt, const char *const const exstr,int*const syserrnop)$/;"	f
EGnetSendUint	src/eg_net.c	/^int EGnetSendUint (EGsocket_t * const skt, unsigned int n){return EGnetSendUintE(skt,n,0);}$/;"	f
EGnetSendUintE	src/eg_net.c	/^int EGnetSendUintE($/;"	f
EGnetSendUshort	src/eg_net.c	/^int EGnetSendUshort (EGsocket_t * const skt,const unsigned n){return EGnetSendUshortE(skt,n,0);}$/;"	f
EGnetSendUshortE	src/eg_net.c	/^int EGnetSendUshortE (EGsocket_t * const skt, const unsigned n,int*const syserrnop)$/;"	f
EGnetStartRead	src/eg_net.c	/^int EGnetStartRead(EGsocket_t * const skt){return EGnetStartReadEE(skt,0,0);}$/;"	f
EGnetStartReadE	src/eg_net.c	/^int EGnetStartReadE(EGsocket_t * const skt,int*const syserrnop){return EGnetStartReadEE(skt,0,syserrnop);}$/;"	f
EGnetStartReadEE	src/eg_net.c	/^static int EGnetStartReadEE(EGsocket_t*const skt,const int nb,int*const syserrnop)$/;"	f	file:
EGnetStartReadNB	src/eg_net.c	/^int EGnetStartReadNB(EGsocket_t*const skt){return EGnetStartReadEE(skt,1,0);}$/;"	f
EGnetStartReadNBE	src/eg_net.c	/^int EGnetStartReadNBE(EGsocket_t * const skt,int*const syserrnop){return EGnetStartReadEE(skt,1,syserrnop);}$/;"	f
EGnetStopRead	src/eg_net.c	/^int EGnetStopRead(EGsocket_t * const skt){return EGnetStopReadE(skt,0);}$/;"	f
EGnetStopReadE	src/eg_net.c	/^int EGnetStopReadE(EGsocket_t * const skt,int*const syserrnop)$/;"	f
EGnetSynchronizeE	src/eg_net.c	/^static int EGnetSynchronizeE (EGsocket_t * const skt,$/;"	f	file:
EGnetSynchronizeE	src/eg_net.c	381;"	d	file:
EGnullDisplay	src/eg_io.h	81;"	d
EGoffsetOf	src/eg_macros.h	128;"	d
EGosGetData	src/eg_macros.h	392;"	d
EGosSetData	src/eg_macros.h	397;"	d
EGpermItClear	src/eg_perm_it.h	90;"	d
EGpermItGetChange	src/eg_perm_it.h	115;"	d
EGpermItGetSize	src/eg_perm_it.h	102;"	d
EGpermItGetTuple	src/eg_perm_it.h	108;"	d
EGpermItInit	src/eg_perm_it.h	77;"	d
EGpermItNext	src/eg_perm_it.c	/^int EGpermItNext(EGpermIt_t*const prit)$/;"	f
EGpermItNext	src/eg_perm_it.h	129;"	d
EGpermItReset	src/eg_perm_it.h	63;"	d
EGpermIt_t	src/eg_perm_it.h	/^EGpermIt_t;$/;"	t	typeref:struct:EGpermIt_t
EGpermIt_t	src/eg_perm_it.h	/^typedef struct EGpermIt_t$/;"	s
EGptCompare	src/eg_compare.c	/^int EGptCompare (const void *str1,$/;"	f
EGrand	src/eg_random.c	/^uint32_t EGrand(EGrandState_t*const g)$/;"	f
EGrandAdvanceState	src/eg_random.c	/^void EGrandAdvanceState (EGrandState_t*const g,const long e,const long c)$/;"	f
EGrandExp	src/eg_random.c	/^double EGrandExp(EGrandState_t*const g,const double lambda)$/;"	f
EGrandGetState	src/eg_random.c	/^void EGrandGetState (EGrandState_t*const g, unsigned long* seed)$/;"	f
EGrandInit	src/eg_random.c	/^int EGrandInit(EGrandState_t*const state)$/;"	f
EGrandInt	src/eg_random.c	/^int EGrandInt(EGrandState_t*const g,const int i,const int j)$/;"	f
EGrandNormal	src/eg_random.c	/^double EGrandNormal(EGrandState_t*const g,const double mu, const double sigma)$/;"	f
EGrandReset	src/eg_random.c	/^void EGrandReset (EGrandState_t*const g)$/;"	f
EGrandSetGlobalSeed	src/eg_random.c	/^int EGrandSetGlobalSeed(const unsigned long* seed)$/;"	f
EGrandSetSeed	src/eg_random.c	/^int EGrandSetSeed (EGrandState_t*const g, const unsigned long* seed)$/;"	f
EGrandStateZero	src/eg_random.h	53;"	d
EGrandState_t	src/eg_random.h	/^} EGrandState_t;$/;"	t	typeref:struct:__anon86
EGrandU01	src/eg_random.c	/^double EGrandU01 (EGrandState_t* g)$/;"	f
EGrandUab	src/eg_random.h	84;"	d
EGrealloc	src/eg_mem.h	159;"	d
EGrsetAdd	src/eg_raset.h	143;"	d
EGrsetCheck	src/eg_raset.h	179;"	d
EGrsetClear	src/eg_raset.h	118;"	d
EGrsetDel	src/eg_raset.h	155;"	d
EGrsetDisplay	src/eg_raset.h	72;"	d
EGrsetEmpty	src/eg_raset.h	94;"	d
EGrsetFill	src/eg_raset.h	99;"	d
EGrsetInit	src/eg_raset.h	107;"	d
EGrsetNull	src/eg_raset.h	69;"	d
EGrsetPeek	src/eg_raset.h	167;"	d
EGrsetSetgrnd	src/eg_raset.c	/^void EGrsetSetgrnd($/;"	f
EGrset_t	src/eg_raset.h	/^EGrset_t;$/;"	t	typeref:struct:__anon100
EGsMalloc	src/eg_mem.h	151;"	d
EGsetLimits	src/eg_macros.c	/^void EGsetLimits(double max_rtime, unsigned long memlimit)$/;"	f
EGsfopen	src/eg_io.h	64;"	d
EGsigSet	src/eg_macros.h	488;"	d
EGsighandler	src/eg_macros.c	/^void EGsighandler(int s)$/;"	f
EGsim	src/eg_simula.c	/^int EGsim(EGsim_t*const sim)$/;"	f
EGsimAgent_t	src/eg_simula.h	/^} EGsimAgent_t;$/;"	t	typeref:struct:__anon109
EGsimClear	src/eg_simula.h	284;"	d
EGsimDisplayAgent	src/eg_simula.c	107;"	d	file:
EGsimDisplayAgent	src/eg_simula.c	115;"	d	file:
EGsimDisplayNode	src/eg_simula.c	110;"	d	file:
EGsimDisplayNode	src/eg_simula.c	114;"	d	file:
EGsimDist_f	src/eg_simula.h	/^typedef double (*EGsimDist_f) (const double,void*const);$/;"	t
EGsimEdgeClear	src/eg_simula.h	320;"	d
EGsimEdgeInit	src/eg_simula.h	314;"	d
EGsimEdge_t	src/eg_simula.h	/^} EGsimEdge_t;$/;"	t	typeref:struct:__anon103
EGsimExp	src/eg_simula.c	/^double EGsimExp(const double t, void*const data)$/;"	f
EGsimG	src/eg_simula.h	/^	EGsimG, \/**< @brief Type of generator nodes *\/$/;"	e	enum:__anon104
EGsimInit	src/eg_simula.h	300;"	d
EGsimLoadFile	src/eg_simula.c	/^int EGsimLoadFile(EGsim_t*const sim,$/;"	f
EGsimN	src/eg_simula.h	/^	EGsimN  \/**< @brief Type of normal nodes *\/$/;"	e	enum:__anon104
EGsimNewEvent	src/eg_simula.c	/^static inline int EGsimNewEvent(EGsim_t*const sim,EGsimNode_t*const gen)$/;"	f	file:
EGsimNextToken	src/eg_simula.c	92;"	d	file:
EGsimNodeClear	src/eg_simula.h	340;"	d
EGsimNodeInit	src/eg_simula.h	326;"	d
EGsimNodeType_t	src/eg_simula.h	/^} EGsimNodeType_t;$/;"	t	typeref:enum:__anon104
EGsimNode_t	src/eg_simula.h	/^} EGsimNode_t;$/;"	t	typeref:struct:__anon108
EGsimNormal	src/eg_simula.c	/^double EGsimNormal(const double t, void*const data)$/;"	f
EGsimRDClear	src/eg_simula.h	169;"	d
EGsimRDInit	src/eg_simula.h	153;"	d
EGsimRDStats	src/eg_simula.h	160;"	d
EGsimRDStats	src/eg_simula.h	165;"	d
EGsimRData_t	src/eg_simula.h	/^} EGsimRData_t;$/;"	t	typeref:struct:__anon107
EGsimRV_2param	src/eg_simula.h	/^	EGsimRV_2param,	\/**< @brief 2-parameter random variables *\/$/;"	e	enum:__anon105
EGsimRV_VRP	src/eg_simula.h	/^	EGsimRV_VRP			\/**< @brief variable rate poisson process *\/$/;"	e	enum:__anon105
EGsimRV_novar	src/eg_simula.h	/^	EGsimRV_novar=0,\/**< @brief no random variable *\/$/;"	e	enum:__anon105
EGsimRandomType_t	src/eg_simula.h	/^} EGsimRandomType_t;$/;"	t	typeref:enum:__anon105
EGsimSetAgent	src/eg_simula.h	274;"	d
EGsimT	src/eg_simula.h	/^	EGsimT, \/**< @brief Type of sink nodes *\/$/;"	e	enum:__anon104
EGsimUniform	src/eg_simula.c	/^double EGsimUniform(const double t, void*const data)$/;"	f
EGsimVRPClear	src/eg_simula.h	125;"	d
EGsimVRPInit	src/eg_simula.h	103;"	d
EGsimVRPLoadFile	src/eg_simula.c	/^int EGsimVRPLoadFile(EGsimVRPoisson_t*const data,FILE*input)$/;"	f
EGsimVRPStats	src/eg_simula.h	110;"	d
EGsimVRPStats	src/eg_simula.h	121;"	d
EGsimVRPoisson	src/eg_simula.c	/^double EGsimVRPoisson(const double t, void*const data)$/;"	f
EGsimVRPoisson_t	src/eg_simula.h	/^} EGsimVRPoisson_t;$/;"	t	typeref:struct:__anon106
EGsim_t	src/eg_simula.h	/^} EGsim_t;$/;"	t	typeref:struct:__anon110
EGslk2opt	src/eg_slk.c	/^int EGslk2opt(EGslkData_t*const data,EGflipper_t*const flip)$/;"	f
EGslkDataClear	src/eg_slk.c	/^void EGslkDataClear(EGslkData_t*const data)$/;"	f
EGslkDataInit	src/eg_slk.h	100;"	d
EGslkDataLoadTSPLIB95	src/eg_slk.c	/^int EGslkDataLoadTSPLIB95(EGslkData_t*const data,EGioFile_t*input)$/;"	f
EGslkData_t	src/eg_slk.h	/^typedef struct EGslkData_t$/;"	s
EGslkData_t	src/eg_slk.h	/^} EGslkData_t;$/;"	t	typeref:struct:EGslkData_t
EGslkEdgeCost	src/eg_slk.c	/^int EGslkEdgeCost(EGslkData_t*const data,const int a,const int b)$/;"	f
EGslkFlip	src/eg_slk.c	/^int EGslkFlip(EGflipper_t*const flip,int a, int b)$/;"	f
EGslkGetLength	src/eg_slk.c	/^static int EGslkGetLength(EGflipper_t*const flip, int a, int b)$/;"	f	file:
EGslkGetNext	src/eg_slk.c	/^int EGslkGetNext(EGflipper_t*const flip,const int node)$/;"	f
EGslkGetPrev	src/eg_slk.c	/^int EGslkGetPrev(EGflipper_t*const flip,const int node)$/;"	f
EGslkKick	src/eg_slk.c	/^int EGslkKick(EGflipper_t*const flip)$/;"	f
EGslkTourValue	src/eg_slk.c	/^int EGslkTourValue(EGslkData_t*const data,const int*const tour,const size_t sz)$/;"	f
EGsocket_t	src/eg_net.h	/^EGsocket_t;$/;"	t	typeref:struct:__anon85
EGstringCompare	src/eg_compare.c	/^int EGstringCompare (const void *str1,$/;"	f
EGstrtoIdx	src/eg_idx.h	81;"	d
EGswap	src/eg_nummacros.h	48;"	d
EGsymtabAdd	src/eg_symtab.c	/^int EGsymtabAdd(EGsymtab_t*const symtab,const char*const symbol)$/;"	f
EGsymtabClear	src/eg_symtab.h	61;"	d
EGsymtabInit	src/eg_symtab.h	56;"	d
EGsymtabLookUp	src/eg_symtab.c	/^int EGsymtabLookUp( EGsymtab_t*const symtab,$/;"	f
EGsymtabSort	src/eg_symtab.c	/^void EGsymtabSort(EGsymtab_t*const symtab)$/;"	f
EGsymtabSymbol	src/eg_symtab.h	75;"	d
EGsymtab_t	src/eg_symtab.h	/^typedef struct EGsymtab_t$/;"	s
EGsymtab_t	src/eg_symtab.h	/^} EGsymtab_t;$/;"	t	typeref:struct:EGsymtab_t
EGtimerReset	src/eg_timer.h	118;"	d
EGtimerStart	src/eg_timer.h	109;"	d
EGtimerStop	src/eg_timer.h	114;"	d
EGtimerZero	src/eg_timer.h	97;"	d
EGtimer_t	src/eg_timer.h	/^EGtimer_t;$/;"	t	typeref:struct:__anon87
EGualloc_f	src/eg_mem.h	/^typedef void*(*EGualloc_f)(void*udata,size_t psz);$/;"	t
EGudCompare	src/eg_compare.c	/^int EGudCompare (const void *str1,$/;"	f
EGufree_f	src/eg_mem.h	/^typedef void (*EGufree_f)(void*udata,void*ptr);$/;"	t
EGwallClockTimerReset	src/eg_timer.h	133;"	d
EGwallClockTimerStart	src/eg_timer.h	123;"	d
EGwallClockTimerStop	src/eg_timer.h	128;"	d
EGwallClockTimer_t	src/eg_timer.h	103;"	d
ENABLE_LONG_DOUBLE	config.h	32;"	d
EXIT	src/eg_macros.h	338;"	d
EXITL	src/eg_macros.h	172;"	d
EXITL	src/eg_macros.h	285;"	d
EXITRVAL	src/eg_macros.h	329;"	d
FLOAT128	SoftFloat/softfloat.h	45;"	d
FLOAT128_TYPE	src/eg_lpnum.h	179;"	d
FLOATX80	SoftFloat/softfloat.h	44;"	d
FLT_TYPE	src/eg_lpnum.h	153;"	d
FP10_TYPE	src/eg_lpnum.h	158;"	d
FP20_TYPE	src/eg_lpnum.h	161;"	d
FP25_TYPE	src/eg_lpnum.h	167;"	d
FP28_TYPE	src/eg_lpnum.h	164;"	d
FTEST	src/eg_macros.h	300;"	d
FTESTG	src/eg_macros.h	310;"	d
G	TEmplate/dbl_eg_min_cut.h	/^	dbl_EGsrkGraph_t G;						\/**< Actual shrinking graph used *\/$/;"	m	struct:dbl_EGalgMCgraph_t
G	TEmplate/dbl_eg_push_relabel.h	/^	EGeDgraph_t G;				\/**< EGeDgraph structure holding the graph $/;"	m	struct:dbl_EGalgPRgraph_t
G	TEmplate/dbl_eg_shrink_graph.h	/^	EGeUgraph_t G;					\/**< Actual graph structure. *\/$/;"	m	struct:dbl_EGsrkGraph_t
G	TEmplate/fp20_eg_min_cut.h	/^	fp20_EGsrkGraph_t G;						\/**< Actual shrinking graph used *\/$/;"	m	struct:fp20_EGalgMCgraph_t
G	TEmplate/fp20_eg_push_relabel.h	/^	EGeDgraph_t G;				\/**< EGeDgraph structure holding the graph $/;"	m	struct:fp20_EGalgPRgraph_t
G	TEmplate/fp20_eg_shrink_graph.h	/^	EGeUgraph_t G;					\/**< Actual graph structure. *\/$/;"	m	struct:fp20_EGsrkGraph_t
G	TEmplate/int32_eg_min_cut.h	/^	int32_EGsrkGraph_t G;						\/**< Actual shrinking graph used *\/$/;"	m	struct:int32_EGalgMCgraph_t
G	TEmplate/int32_eg_push_relabel.h	/^	EGeDgraph_t G;				\/**< EGeDgraph structure holding the graph $/;"	m	struct:int32_EGalgPRgraph_t
G	TEmplate/int32_eg_shrink_graph.h	/^	EGeUgraph_t G;					\/**< Actual graph structure. *\/$/;"	m	struct:int32_EGsrkGraph_t
G	TEmplate/int_eg_min_cut.h	/^	int_EGsrkGraph_t G;						\/**< Actual shrinking graph used *\/$/;"	m	struct:int_EGalgMCgraph_t
G	TEmplate/int_eg_push_relabel.h	/^	EGeDgraph_t G;				\/**< EGeDgraph structure holding the graph $/;"	m	struct:int_EGalgPRgraph_t
G	TEmplate/int_eg_shrink_graph.h	/^	EGeUgraph_t G;					\/**< Actual graph structure. *\/$/;"	m	struct:int_EGsrkGraph_t
G	TEmplate/ldbl_eg_min_cut.h	/^	ldbl_EGsrkGraph_t G;						\/**< Actual shrinking graph used *\/$/;"	m	struct:ldbl_EGalgMCgraph_t
G	TEmplate/ldbl_eg_push_relabel.h	/^	EGeDgraph_t G;				\/**< EGeDgraph structure holding the graph $/;"	m	struct:ldbl_EGalgPRgraph_t
G	TEmplate/ldbl_eg_shrink_graph.h	/^	EGeUgraph_t G;					\/**< Actual graph structure. *\/$/;"	m	struct:ldbl_EGsrkGraph_t
G	TEmplate/mpf_eg_min_cut.h	/^	mpf_EGsrkGraph_t G;						\/**< Actual shrinking graph used *\/$/;"	m	struct:mpf_EGalgMCgraph_t
G	TEmplate/mpf_eg_push_relabel.h	/^	EGeDgraph_t G;				\/**< EGeDgraph structure holding the graph $/;"	m	struct:mpf_EGalgPRgraph_t
G	TEmplate/mpf_eg_shrink_graph.h	/^	EGeUgraph_t G;					\/**< Actual graph structure. *\/$/;"	m	struct:mpf_EGsrkGraph_t
G	TEmplate/mpq_eg_min_cut.h	/^	mpq_EGsrkGraph_t G;						\/**< Actual shrinking graph used *\/$/;"	m	struct:mpq_EGalgMCgraph_t
G	TEmplate/mpq_eg_push_relabel.h	/^	EGeDgraph_t G;				\/**< EGeDgraph structure holding the graph $/;"	m	struct:mpq_EGalgPRgraph_t
G	TEmplate/mpq_eg_shrink_graph.h	/^	EGeUgraph_t G;					\/**< Actual graph structure. *\/$/;"	m	struct:mpq_EGsrkGraph_t
G	src/eg_adgraph.ex.c	/^	EGaDG_t G;$/;"	m	struct:my_adgraph_t	file:
G	src/eg_edgraph.ex.c	/^	EGeDgraph_t G;$/;"	m	struct:my_dgraph_t	file:
G	src/eg_eugraph.ex.c	/^	EGeUgraph_t G;$/;"	m	struct:my_ugraph_t	file:
G	src/eg_simula.h	/^	EGeDgraph_t G;		\/**< Actual network being simulated *\/$/;"	m	struct:__anon110
GM	TEmplate/dbl_eg_dbasis_red.h	/^	dbl_EGdMatrix_t GM;		\/**< @brief Here we store and compute the Gram-Schmidt $/;"	m	struct:dbl_EGdBsRed_t
GM	TEmplate/fp20_eg_dbasis_red.h	/^	fp20_EGdMatrix_t GM;		\/**< @brief Here we store and compute the Gram-Schmidt $/;"	m	struct:fp20_EGdBsRed_t
GM	TEmplate/int32_eg_dbasis_red.h	/^	int32_EGdMatrix_t GM;		\/**< @brief Here we store and compute the Gram-Schmidt $/;"	m	struct:int32_EGdBsRed_t
GM	TEmplate/int_eg_dbasis_red.h	/^	int_EGdMatrix_t GM;		\/**< @brief Here we store and compute the Gram-Schmidt $/;"	m	struct:int_EGdBsRed_t
GM	TEmplate/ldbl_eg_dbasis_red.h	/^	ldbl_EGdMatrix_t GM;		\/**< @brief Here we store and compute the Gram-Schmidt $/;"	m	struct:ldbl_EGdBsRed_t
GM	TEmplate/mpf_eg_dbasis_red.h	/^	mpf_EGdMatrix_t GM;		\/**< @brief Here we store and compute the Gram-Schmidt $/;"	m	struct:mpf_EGdBsRed_t
GM	TEmplate/mpq_eg_dbasis_red.h	/^	mpq_EGdMatrix_t GM;		\/**< @brief Here we store and compute the Gram-Schmidt $/;"	m	struct:mpq_EGdBsRed_t
GNU_MP_F	src/eg_lpnum.h	173;"	d
GNU_MP_Q	src/eg_lpnum.h	171;"	d
GNU_MP_Z	src/eg_lpnum.h	169;"	d
HASH_MAXFACTOR	src/eg_a32hash.ex.c	32;"	d	file:
HASH_MAXFACTOR	src/eg_ahash.ex.c	32;"	d	file:
HASH_MAXFACTOR	src/eg_ehash.ex.c	32;"	d	file:
HASH_MAXSIZE	src/eg_a32hash.ex.c	31;"	d	file:
HASH_MAXSIZE	src/eg_ahash.ex.c	31;"	d	file:
HASH_MAXSIZE	src/eg_ehash.ex.c	31;"	d	file:
HASH_SIZE	src/eg_a32hash.ex.c	30;"	d	file:
HASH_SIZE	src/eg_ahash.ex.c	30;"	d	file:
HASH_SIZE	src/eg_ehash.ex.c	30;"	d	file:
HAVE_ASSERT_H	config.h	37;"	d
HAVE_BZFILEP	config.h	42;"	d
HAVE_BZLIB_H	config.h	47;"	d
HAVE_CLOCK	config.h	52;"	d
HAVE_CPLEX	src/eg_config.h	145;"	d
HAVE_CPLEX	src/eg_config.h	148;"	d
HAVE_CPLEX	src/eg_config.h	151;"	d
HAVE_CPLEX_H	config.h	440;"	d
HAVE_DECL_BZ2_BZCLOSE	config.h	58;"	d
HAVE_DECL_BZ2_BZERROR	config.h	64;"	d
HAVE_DECL_BZ2_BZOPEN	config.h	70;"	d
HAVE_DECL_BZ2_BZREAD	config.h	76;"	d
HAVE_DECL_BZ2_BZWRITE	config.h	82;"	d
HAVE_DECL_GZCLOSE	config.h	88;"	d
HAVE_DECL_GZEOF	config.h	94;"	d
HAVE_DECL_GZERROR	config.h	100;"	d
HAVE_DECL_GZGETS	config.h	106;"	d
HAVE_DECL_GZOPEN	config.h	112;"	d
HAVE_DECL_GZWRITE	config.h	118;"	d
HAVE_EG_THREAD	src/eg_config.h	230;"	d
HAVE_EG_THREAD	src/eg_config.h	232;"	d
HAVE_ERRNO_H	config.h	128;"	d
HAVE_FCNTL_H	config.h	133;"	d
HAVE_FLOAT_H	config.h	138;"	d
HAVE_FLOOR	config.h	143;"	d
HAVE_GETHOSTBYNAME	config.h	148;"	d
HAVE_GETRUSAGE	config.h	153;"	d
HAVE_GMP_H	config.h	158;"	d
HAVE_GZFILE	config.h	163;"	d
HAVE_INTTYPES_H	config.h	168;"	d
HAVE_LIBBZ2	config.h	173;"	d
HAVE_LIBCPLEX	config.h	208;"	d
HAVE_LIBGMP	config.h	178;"	d
HAVE_LIBM	config.h	183;"	d
HAVE_LIBPTHREAD	config.h	193;"	d
HAVE_LIBRESOLV	config.h	198;"	d
HAVE_LIBZ	config.h	203;"	d
HAVE_LIMITS_H	config.h	213;"	d
HAVE_LONG_DOUBLE	config.h	218;"	d
HAVE_MALLOC	config.h	224;"	d
HAVE_MALLOC_H	config.h	229;"	d
HAVE_MATH_H	config.h	234;"	d
HAVE_MEMORY_H	config.h	239;"	d
HAVE_MEMSET	config.h	244;"	d
HAVE_NETDB_H	config.h	249;"	d
HAVE_NETINET_IN_H	config.h	254;"	d
HAVE_POSIX_MEMALIGN	config.h	259;"	d
HAVE_POW	config.h	264;"	d
HAVE_PTHREAD_H	config.h	410;"	d
HAVE_REALLOC	config.h	270;"	d
HAVE_SETJMP_H	config.h	275;"	d
HAVE_SIGACTION	config.h	280;"	d
HAVE_SIGNAL	config.h	285;"	d
HAVE_SIGNAL_H	config.h	290;"	d
HAVE_SLEEP	config.h	295;"	d
HAVE_SOCKET	config.h	300;"	d
HAVE_SQRT	config.h	310;"	d
HAVE_STDARG_H	config.h	315;"	d
HAVE_STDDEF_H	config.h	320;"	d
HAVE_STDINT_H	config.h	325;"	d
HAVE_STDIO_H	config.h	330;"	d
HAVE_STDLIB_H	config.h	335;"	d
HAVE_STRDUP	config.h	340;"	d
HAVE_STRERROR	config.h	345;"	d
HAVE_STRINGS_H	config.h	350;"	d
HAVE_STRING_H	config.h	355;"	d
HAVE_SYS_PARAM_H	config.h	360;"	d
HAVE_SYS_RESOURCE_H	config.h	365;"	d
HAVE_SYS_SOCKET_H	config.h	370;"	d
HAVE_SYS_STAT_H	config.h	375;"	d
HAVE_SYS_TIMES_H	config.h	380;"	d
HAVE_SYS_TIME_H	config.h	385;"	d
HAVE_SYS_TYPES_H	config.h	390;"	d
HAVE_SYS_UTSNAME_H	config.h	395;"	d
HAVE_TIMES	config.h	400;"	d
HAVE_TIME_H	config.h	405;"	d
HAVE_TYPEOF	config.h	415;"	d
HAVE_UNAME	config.h	420;"	d
HAVE_UNISTD_H	config.h	425;"	d
HAVE_VPRINTF	config.h	430;"	d
HAVE_ZLIB_H	config.h	435;"	d
IFMESSAGE	src/eg_macros.h	156;"	d
INT32_TYPE	src/eg_lpnum.h	181;"	d
INT_TYPE	src/eg_lpnum.h	155;"	d
Ig	src/eg_random.h	/^	 double Ig[6];	\/**< Initial state of the stream *\/$/;"	m	struct:__anon86
InvA1	src/eg_random.c	/^static double InvA1[3][3] = {          \/* Inverse of A1p0 *\/$/;"	v	file:
InvA2	src/eg_random.c	/^static double InvA2[3][3] = {          \/* Inverse of A2p0 *\/$/;"	v	file:
KILL	src/eg_net.ex.c	41;"	d	file:
LDBL_TYPE	src/eg_lpnum.h	175;"	d
LLINT_TYPE	src/eg_lpnum.h	177;"	d
LVL_list	TEmplate/dbl_eg_push_relabel.h	/^	EGeList_t LVL_list;		\/**< Used to store the BFS list used for the first $/;"	m	struct:dbl_EGalgPRnode_t
LVL_list	TEmplate/fp20_eg_push_relabel.h	/^	EGeList_t LVL_list;		\/**< Used to store the BFS list used for the first $/;"	m	struct:fp20_EGalgPRnode_t
LVL_list	TEmplate/int32_eg_push_relabel.h	/^	EGeList_t LVL_list;		\/**< Used to store the BFS list used for the first $/;"	m	struct:int32_EGalgPRnode_t
LVL_list	TEmplate/int_eg_push_relabel.h	/^	EGeList_t LVL_list;		\/**< Used to store the BFS list used for the first $/;"	m	struct:int_EGalgPRnode_t
LVL_list	TEmplate/ldbl_eg_push_relabel.h	/^	EGeList_t LVL_list;		\/**< Used to store the BFS list used for the first $/;"	m	struct:ldbl_EGalgPRnode_t
LVL_list	TEmplate/mpf_eg_push_relabel.h	/^	EGeList_t LVL_list;		\/**< Used to store the BFS list used for the first $/;"	m	struct:mpf_EGalgPRnode_t
LVL_list	TEmplate/mpq_eg_push_relabel.h	/^	EGeList_t LVL_list;		\/**< Used to store the BFS list used for the first $/;"	m	struct:mpq_EGalgPRnode_t
MACHINE_FREQ	src/eg_timer.h	70;"	d
MACHINE_FREQ	src/eg_timer.h	72;"	d
MESSAGE	src/eg_macros.h	256;"	d
MESSAGE	src/eg_macros.h	289;"	d
MESSAGEF	src/eg_macros.h	247;"	d
MESSAGEF	src/eg_macros.h	290;"	d
MPQ_VERBOSE_CNT_FRAC	src/eg_lpnum.c	513;"	d	file:
MatMatModM	src/eg_random.c	/^static void MatMatModM ($/;"	f	file:
MatPowModM	src/eg_random.c	/^static void MatPowModM (double A[3][3], double B[3][3], double m, long n)$/;"	f	file:
MatTwoPowModM	src/eg_random.c	/^static void MatTwoPowModM ($/;"	f	file:
MatVecModM	src/eg_random.c	/^static void MatVecModM ($/;"	f	file:
MaxEGidx	src/eg_idx.h	70;"	d
MaxLpNum	src/eg_lpnum.h	291;"	d
MinLpNum	src/eg_lpnum.h	292;"	d
MultModM	src/eg_random.c	/^static double MultModM ($/;"	f	file:
OUTPUT	src/eg_macros.h	265;"	d
OUTPUT	src/eg_macros.h	269;"	d
PACKAGE_BUGREPORT	config.h	445;"	d
PACKAGE_NAME	config.h	450;"	d
PACKAGE_STRING	config.h	455;"	d
PACKAGE_TARNAME	config.h	460;"	d
PACKAGE_VERSION	config.h	465;"	d
PRIuidxArg	src/eg_idx.h	156;"	d
PRIuidxFmt	src/eg_idx.h	155;"	d
PTRTEST	src/eg_macros.h	194;"	d
PTRTEST	src/eg_macros.h	293;"	d
RETSIGTYPE	config.h	470;"	d
STDC_HEADERS	config.h	475;"	d
SlkHcn_t	src/eg_slk.ex.c	/^typedef struct SlkHcn_t{$/;"	s	file:
SlkHcn_t	src/eg_slk.ex.c	/^} SlkHcn_t;$/;"	t	typeref:struct:SlkHcn_t	file:
TEST	src/eg_macros.h	237;"	d
TEST	src/eg_macros.h	286;"	d
TESTERRNOIF	src/eg_macros.h	378;"	d
TESTG	src/eg_macros.h	220;"	d
TESTG	src/eg_macros.h	287;"	d
TESTGD	src/eg_macros.h	228;"	d
TESTGL	src/eg_macros.h	202;"	d
TESTGL	src/eg_macros.h	288;"	d
TESTL	src/eg_macros.h	184;"	d
TESTL	src/eg_macros.h	284;"	d
TIME_WITH_SYS_TIME	config.h	480;"	d
TRY	src/eg_a32hash.ex.c	33;"	d	file:
TRY	src/eg_ahash.ex.c	33;"	d	file:
TRY	src/eg_ehash.ex.c	33;"	d	file:
T_cut	TEmplate/dbl_eg_push_relabel.h	/^	EGeList_t T_cut;			\/**< Used to speed-up the 'hole' heuristic, it is seted$/;"	m	struct:dbl_EGalgPRnode_t
T_cut	TEmplate/fp20_eg_push_relabel.h	/^	EGeList_t T_cut;			\/**< Used to speed-up the 'hole' heuristic, it is seted$/;"	m	struct:fp20_EGalgPRnode_t
T_cut	TEmplate/int32_eg_push_relabel.h	/^	EGeList_t T_cut;			\/**< Used to speed-up the 'hole' heuristic, it is seted$/;"	m	struct:int32_EGalgPRnode_t
T_cut	TEmplate/int_eg_push_relabel.h	/^	EGeList_t T_cut;			\/**< Used to speed-up the 'hole' heuristic, it is seted$/;"	m	struct:int_EGalgPRnode_t
T_cut	TEmplate/ldbl_eg_push_relabel.h	/^	EGeList_t T_cut;			\/**< Used to speed-up the 'hole' heuristic, it is seted$/;"	m	struct:ldbl_EGalgPRnode_t
T_cut	TEmplate/mpf_eg_push_relabel.h	/^	EGeList_t T_cut;			\/**< Used to speed-up the 'hole' heuristic, it is seted$/;"	m	struct:mpf_EGalgPRnode_t
T_cut	TEmplate/mpq_eg_push_relabel.h	/^	EGeList_t T_cut;			\/**< Used to speed-up the 'hole' heuristic, it is seted$/;"	m	struct:mpq_EGalgPRnode_t
U01	src/eg_random.c	/^static double U01 (EGrandState_t*const g)$/;"	f	file:
VERBOSE_LEVEL	config.h	485;"	d
VERBOSE_LEVEL	src/eg_config.h	257;"	d
WARNIF	src/eg_macros.h	163;"	d
WARNING	src/eg_macros.h	319;"	d
WARNINGL	src/eg_macros.h	277;"	d
WARNINGL	src/eg_macros.h	291;"	d
_AACC	src/eg_lpnum.c	130;"	d	file:
_AACC	src/eg_lpnum.c	138;"	d	file:
_ALL_SOURCE	config.h	492;"	d
_EG_A_DGRAPH_H	src/eg_adgraph.h	44;"	d
_EG_A_UGRAPH_H	src/eg_augraph.h	46;"	d
_EG_E_DGRAPH_H	src/eg_edgraph.h	46;"	d
_EG_E_UGRAPH	src/eg_eugraph.h	46;"	d
_EGgmpPlSz	src/eg_lpnum.c	/^static const size_t _EGgmpPlSz[5] = {16,32,64,128,256};$/;"	v	file:
_EGgmpPlTable	src/eg_lpnum.c	/^static const uint8_t _EGgmpPlTable[257] = \\$/;"	v	file:
_GNU_SOURCE	config.h	497;"	d
_POSIX_PTHREAD_SEMANTICS	config.h	552;"	d
_RACC	src/eg_lpnum.c	167;"	d	file:
_RACC	src/eg_lpnum.c	175;"	d	file:
_TACC	src/eg_lpnum.c	122;"	d	file:
_TACC	src/eg_lpnum.c	126;"	d	file:
_TANDEM_SOURCE	config.h	555;"	d
_XOPEN_SOURCE	config.h	539;"	d
__ASTACK_DEBUG__	src/eg_astack.h	47;"	d
__EGBIT_DEBUG_LEVEL__	src/eg_bit.h	60;"	d
__EGBIT_MASK__	src/eg_bit.h	68;"	d
__EGBIT_SHIFT__	src/eg_bit.h	67;"	d
__EGBIT_WORD_SIZE__	src/eg_bit.h	66;"	d
__EGFP_ABS__	src/eg_fp.h	119;"	d
__EGFP_CHECK_OVERFLOW__	src/eg_fp.h	39;"	d
__EGFP_CHECK_VERBOSE__	src/eg_fp.h	45;"	d
__EGFP_SGN__	src/eg_fp.h	120;"	d
__EGFP_SGN__	src/eg_fp.h	137;"	d
__EGNET_C__	src/eg_net.c	26;"	d	file:
__EGNET_H__	src/eg_net.h	21;"	d
__EGRNGSTREAM_H__	src/eg_random.h	41;"	d
__EG_A16LIST_H__	src/eg_a16list.h	55;"	d
__EG_A32HASH_H__	src/eg_a32hash.h	25;"	d
__EG_A32LIST_H__	src/eg_a32list.h	55;"	d
__EG_AHASH_H__	src/eg_ahash.h	25;"	d
__EG_ALIST_H__	src/eg_alist.h	55;"	d
__EG_ASTACK_H__	src/eg_astack.h	40;"	d
__EG_BIT_H__	src/eg_bit.h	44;"	d
__EG_COMPARE_H__	src/eg_compare.h	21;"	d
__EG_CONFIG_H__	src/eg_config.h	37;"	d
__EG_CPLEX_H__	src/eg_cplex.h	40;"	d
__EG_EBTREE_H__	src/eg_ebtree.h	41;"	d
__EG_EHASH_H__	src/eg_ehash.h	25;"	d
__EG_ELINK_H__	src/eg_elink.h	21;"	d
__EG_ELIST_H__	src/eg_elist.h	53;"	d
__EG_ESET_H__	src/eg_eset.h	40;"	d
__EG_FP_H__	src/eg_fp.h	29;"	d
__EG_GCIT__	src/eg_gcit.h	35;"	d
__EG_GRAPH_UTIL__	src/eg_graph_util.h	29;"	d
__EG_IDXNUM_H__	src/eg_idx.h	21;"	d
__EG_IO_H__	src/eg_io.h	53;"	d
__EG_KEYTAB_H__	src/eg_keytab.h	23;"	d
__EG_LPNUM_DBL__	src/eg_lpnum.dbl.h	21;"	d
__EG_LPNUM_FLOAT128__	src/eg_lpnum.float128.h	21;"	d
__EG_LPNUM_FP20__	src/eg_lpnum.fp20.h	21;"	d
__EG_LPNUM_H__	src/eg_lpnum.h	21;"	d
__EG_LPNUM_INT32__	src/eg_lpnum.int32.h	21;"	d
__EG_LPNUM_INT__	src/eg_lpnum.int.h	21;"	d
__EG_LPNUM_LDBL__	src/eg_lpnum.ldbl.h	21;"	d
__EG_LPNUM_LINT__	src/eg_lpnum.llint.h	21;"	d
__EG_LPNUM_MPF__	src/eg_lpnum.mpf.h	21;"	d
__EG_LPNUM_MPQ__	src/eg_lpnum.mpq.h	21;"	d
__EG_LPNUM_MPZ__	src/eg_lpnum.mpz.h	21;"	d
__EG_MACROS_H__	src/eg_macros.h	118;"	d
__EG_MAXCLOSURE_H__	src/eg_maxclosure.h	36;"	d
__EG_MEM_FREE_CHECK__	config.h	544;"	d
__EG_MEM_FREE_CHECK__	src/eg_mem.h	168;"	d
__EG_MEM_H__	src/eg_mem.h	53;"	d
__EG_MEM_SLAB_H__	src/eg_memslab.h	64;"	d
__EG_NUMMACROS_H__	src/eg_nummacros.h	21;"	d
__EG_OCTREE_H__	src/eg_octree.h	38;"	d
__EG_PERMIT__	src/eg_perm_it.h	37;"	d
__EG_PRINTLOC2F__	src/eg_macros.h	150;"	d
__EG_PRINTLOC2__	src/eg_macros.h	151;"	d
__EG_PRINTLOCF__	src/eg_macros.h	148;"	d
__EG_PRINTLOC__	src/eg_macros.h	149;"	d
__EG_RASET__	src/eg_raset.h	43;"	d
__EG_SIMULA_H__	src/eg_simula.h	53;"	d
__EG_SLK_H__	src/eg_slk.h	45;"	d
__EG_SYMTAB_H__	src/eg_symtab.h	24;"	d
__EG_TIMER_H__	src/eg_timer.h	49;"	d
__EGa16ListAdd	src/eg_a16list.h	104;"	d
__EGa16ListLink	src/eg_a16list.h	160;"	d
__EGa32ListAdd	src/eg_a32list.h	104;"	d
__EGa32ListLink	src/eg_a32list.h	160;"	d
__EGaListAdd	src/eg_alist.h	104;"	d
__EGaListLink	src/eg_alist.h	160;"	d
__EGaStackResize	src/eg_astack.h	72;"	d
__EGcpx_errbuf__	src/eg_cplex.c	/^char __EGcpx_errbuf__[4096];$/;"	v
__EGeListAdd	src/eg_elist.h	96;"	d
__EGeListLink	src/eg_elist.h	131;"	d
__EGeListSplice	src/eg_elist.h	213;"	d
__EGfpIntDiv10__	src/eg_fp.h	270;"	d
__EGfpIntDiv20__	src/eg_fp.h	271;"	d
__EGfpIntDiv25__	src/eg_fp.h	272;"	d
__EGfpIntDiv28__	src/eg_fp.h	273;"	d
__EGfpIntMul10__	src/eg_fp.h	237;"	d
__EGfpIntMul20__	src/eg_fp.h	238;"	d
__EGfpIntMul25__	src/eg_fp.h	239;"	d
__EGfpIntMul28__	src/eg_fp.h	240;"	d
__EGgmp_free	src/eg_lpnum.c	/^static void __EGgmp_free(void*ptr,size_t sz)$/;"	f	file:
__EGgmp_malloc	src/eg_lpnum.c	/^static void* __EGgmp_malloc(size_t sz)$/;"	f	file:
__EGgmp_realloc	src/eg_lpnum.c	/^static void* __EGgmp_realloc(void*ptr,size_t osz,size_t nsz)$/;"	f	file:
__EGljmp	src/eg_macros.c	/^jmp_buf __EGljmp;$/;"	v
__EGlpNumAllocArray	src/eg_lpnum.h	231;"	d
__EGlpNumArraySize	src/eg_lpnum.h	242;"	d
__EGlpNumFreeArray	src/eg_lpnum.h	254;"	d
__EGlpNum_setup	src/eg_lpnum.c	/^static int __EGlpNum_setup=0;$/;"	v	file:
__EGmemSlabInit	src/eg_memslab.c	/^void __EGmemSlabInit( EGmemSlab_t*const slab,$/;"	f
__EGmemSlabPoolInit	src/eg_memslab.c	/^void __EGmemSlabPoolInit( EGmemSlabPool_t*const pool,$/;"	f
__EGmsbUPD1	src/eg_memslab.h	333;"	d
__EGmsbUPD1	src/eg_memslab.h	339;"	d
__EGmsbUPD2	src/eg_memslab.h	337;"	d
__EGmsbUPD2	src/eg_memslab.h	340;"	d
__EGmspLock	src/eg_memslab.h	187;"	d
__EGmspLock	src/eg_memslab.h	190;"	d
__EGmspUnlock	src/eg_memslab.h	188;"	d
__EGmspUnlock	src/eg_memslab.h	191;"	d
__EGnetRecv	src/eg_net.c	302;"	d	file:
__EGnetSend	src/eg_net.c	321;"	d	file:
__EGrsetSwap	src/eg_raset.h	131;"	d
__EGsigSetSignal	src/eg_macros.c	/^void __EGsigSetSignal(void)$/;"	f
__EGzeit	src/eg_timer.h	60;"	d
__EGzeit	src/eg_timer.h	74;"	d
__EL_DEBUG_	src/eg_elist.h	59;"	d
__EXTENSIONS__	config.h	549;"	d
__GMP_MEM_MAX__	src/eg_lpnum.c	86;"	d	file:
__GMP_MEM_NPOOL__	src/eg_lpnum.c	105;"	d	file:
__GMP_MEM_STATS__	src/eg_lpnum.c	85;"	d	file:
__GMP_MEM_VERBOSE	src/eg_lpnum.c	84;"	d	file:
__HI_EXP	src/eg_lpnum.c	543;"	d	file:
__HI_EXP	src/eg_lpnum.c	557;"	d	file:
__HI_EXP	src/eg_net.c	557;"	d	file:
__HI_EXP	src/eg_net.c	565;"	d	file:
__HI_EXP	src/eg_net.c	637;"	d	file:
__HI_EXP	src/eg_net.c	645;"	d	file:
__LO_EXP	src/eg_lpnum.c	561;"	d	file:
__LO_EXP	src/eg_lpnum.c	573;"	d	file:
__LO_EXP	src/eg_net.c	571;"	d	file:
__LO_EXP	src/eg_net.c	579;"	d	file:
__LO_EXP	src/eg_net.c	649;"	d	file:
__LO_EXP	src/eg_net.c	657;"	d	file:
__MaxLpNum_float128__	src/eg_lpnum.c	/^const float128 __MaxLpNum_float128__ = {.high = 0x43feffffffffffffLL,.low=0xf000000000000000LL};$/;"	v
__MaxLpNum_mpf__	src/eg_lpnum.c	/^mpf_t __MaxLpNum_mpf__;$/;"	v
__MaxLpNum_mpq__	src/eg_lpnum.c	/^mpq_t __MaxLpNum_mpq__;$/;"	v
__MaxLpNum_mpz__	src/eg_lpnum.c	/^mpz_t __MaxLpNum_mpz__;$/;"	v
__MinLpNum_float128__	src/eg_lpnum.c	/^const float128 __MinLpNum_float128__ = {.high = 0xc3feffffffffffffLL,.low=0xf000000000000000LL};$/;"	v
__MinLpNum_mpf__	src/eg_lpnum.c	/^mpf_t __MinLpNum_mpf__;$/;"	v
__MinLpNum_mpq__	src/eg_lpnum.c	/^mpq_t __MinLpNum_mpq__;$/;"	v
__MinLpNum_mpz__	src/eg_lpnum.c	/^mpz_t __MinLpNum_mpz__;$/;"	v
__PERM_IT_NO_INLINE__	src/eg_perm_it.h	119;"	d
__SOFT_FLOAT_H__	SoftFloat/softfloat.h	35;"	d
__alloc_sz	src/eg_lpnum.c	/^static size_t __alloc_sz[__GMP_MEM_NPOOL__] = {0,0,0,0,0};$/;"	v	file:
__laaverage	src/eg_lpnum.c	/^static size_t __laaverage=0;$/;"	v	file:
__lraverage	src/eg_lpnum.c	/^static size_t __lraverage=0;$/;"	v	file:
__maxmem	src/eg_lpnum.c	/^static size_t __maxmem = 0;$/;"	v	file:
__nalarge	src/eg_lpnum.c	/^static size_t __nalarge = 0;$/;"	v	file:
__nallocs	src/eg_lpnum.c	/^static size_t __nallocs = 0;$/;"	v	file:
__nrlarge	src/eg_lpnum.c	/^static size_t __nrlarge = 0;$/;"	v	file:
__nrllocs	src/eg_lpnum.c	/^static size_t __nrllocs = 0;$/;"	v	file:
__oneLpNum_float128__	src/eg_lpnum.c	/^const float128 __oneLpNum_float128__ = {.high = 0x3fff000000000000LL,.low = 0 };$/;"	v
__oneLpNum_mpf__	src/eg_lpnum.c	/^mpf_t __oneLpNum_mpf__;$/;"	v
__oneLpNum_mpq__	src/eg_lpnum.c	/^mpq_t __oneLpNum_mpq__;$/;"	v
__oneLpNum_mpz__	src/eg_lpnum.c	/^mpz_t __oneLpNum_mpz__;$/;"	v
__rlloc_sz	src/eg_lpnum.c	/^static size_t __rlloc_sz[__GMP_MEM_NPOOL__] = {0,0,0,0,0};$/;"	v	file:
__totmem	src/eg_lpnum.c	/^static size_t __totmem = 0;$/;"	v	file:
__zeroLpNum_float128__	src/eg_lpnum.c	/^const float128 __zeroLpNum_float128__ = { 0, 0 };$/;"	v
__zeroLpNum_mpf__	src/eg_lpnum.c	/^mpf_t __zeroLpNum_mpf__;$/;"	v
__zeroLpNum_mpq__	src/eg_lpnum.c	/^mpq_t __zeroLpNum_mpq__;$/;"	v
__zeroLpNum_mpz__	src/eg_lpnum.c	/^mpz_t __zeroLpNum_mpz__;$/;"	v
a	src/eg_simula.h	/^	double a;					\/**< @brief first parameter *\/$/;"	m	struct:__anon107
a12	src/eg_random.c	29;"	d	file:
a13n	src/eg_random.c	30;"	d	file:
a21	src/eg_random.c	31;"	d	file:
a23n	src/eg_random.c	32;"	d	file:
adata	src/eg_octree.h	/^	void*adata;						\/**<@brief user allocator data *\/$/;"	m	struct:__anon91
adedge_t	src/eg_adgraph.ex.c	/^adedge_t;$/;"	t	typeref:struct:my_adedge_t	file:
adgraph_t	src/eg_adgraph.ex.c	/^adgraph_t;$/;"	t	typeref:struct:my_adgraph_t	file:
adnode_t	src/eg_adgraph.ex.c	/^adnode_t;$/;"	t	typeref:struct:my_adnode_t	file:
agent_sz	src/eg_simula.h	/^	unsigned agent_sz;\/**< Number of agents (currently) traversing the network *\/$/;"	m	struct:__anon110
agent_tot	src/eg_simula.h	/^	unsigned agent_tot;\/**< Agents that traversed the network *\/$/;"	m	struct:__anon110
algo	src/eg_maxclosure.ex.c	/^static int algo = EG_ALG_MAXCLOSURE_DEFAULT;$/;"	v	file:
all_edge	src/eg_augraph.h	/^	uint32_t*all_edge;	\/**< @brief array storing all edges touching every $/;"	m	struct:__anon3
all_edges	TEmplate/dbl_eg_min_cut.h	/^	dbl_EGalgMCedge_t *all_edges;	\/**< Array containing all edges of the graph. *\/$/;"	m	struct:dbl_EGalgMCgraph_t
all_edges	TEmplate/fp20_eg_min_cut.h	/^	fp20_EGalgMCedge_t *all_edges;	\/**< Array containing all edges of the graph. *\/$/;"	m	struct:fp20_EGalgMCgraph_t
all_edges	TEmplate/int32_eg_min_cut.h	/^	int32_EGalgMCedge_t *all_edges;	\/**< Array containing all edges of the graph. *\/$/;"	m	struct:int32_EGalgMCgraph_t
all_edges	TEmplate/int_eg_min_cut.h	/^	int_EGalgMCedge_t *all_edges;	\/**< Array containing all edges of the graph. *\/$/;"	m	struct:int_EGalgMCgraph_t
all_edges	TEmplate/ldbl_eg_min_cut.h	/^	ldbl_EGalgMCedge_t *all_edges;	\/**< Array containing all edges of the graph. *\/$/;"	m	struct:ldbl_EGalgMCgraph_t
all_edges	TEmplate/mpf_eg_min_cut.h	/^	mpf_EGalgMCedge_t *all_edges;	\/**< Array containing all edges of the graph. *\/$/;"	m	struct:mpf_EGalgMCgraph_t
all_edges	TEmplate/mpq_eg_min_cut.h	/^	mpq_EGalgMCedge_t *all_edges;	\/**< Array containing all edges of the graph. *\/$/;"	m	struct:mpq_EGalgMCgraph_t
all_edges	src/eg_adgraph.h	/^	char*all_edges;		\/**< @brief memory containing all edges in the graph *\/$/;"	m	struct:__anon94
all_edges	src/eg_simula.h	/^	EGsimEdge_t*all_edges;\/**< array containing all edges in the network *\/$/;"	m	struct:__anon110
all_in	src/eg_adgraph.h	/^	uint32_t*all_in;	\/**< @brief array of length n_edges containing the index$/;"	m	struct:__anon94
all_neigh	src/eg_augraph.h	/^	uint32_t*all_neigh;	\/**< @brief array storing all neighbours for every $/;"	m	struct:__anon3
all_nodes	TEmplate/dbl_eg_min_cut.h	/^	dbl_EGalgMCnode_t *all_nodes;	\/**< Array containing all nodes of the graph. *\/$/;"	m	struct:dbl_EGalgMCgraph_t
all_nodes	TEmplate/fp20_eg_min_cut.h	/^	fp20_EGalgMCnode_t *all_nodes;	\/**< Array containing all nodes of the graph. *\/$/;"	m	struct:fp20_EGalgMCgraph_t
all_nodes	TEmplate/int32_eg_min_cut.h	/^	int32_EGalgMCnode_t *all_nodes;	\/**< Array containing all nodes of the graph. *\/$/;"	m	struct:int32_EGalgMCgraph_t
all_nodes	TEmplate/int_eg_min_cut.h	/^	int_EGalgMCnode_t *all_nodes;	\/**< Array containing all nodes of the graph. *\/$/;"	m	struct:int_EGalgMCgraph_t
all_nodes	TEmplate/ldbl_eg_min_cut.h	/^	ldbl_EGalgMCnode_t *all_nodes;	\/**< Array containing all nodes of the graph. *\/$/;"	m	struct:ldbl_EGalgMCgraph_t
all_nodes	TEmplate/mpf_eg_min_cut.h	/^	mpf_EGalgMCnode_t *all_nodes;	\/**< Array containing all nodes of the graph. *\/$/;"	m	struct:mpf_EGalgMCgraph_t
all_nodes	TEmplate/mpq_eg_min_cut.h	/^	mpq_EGalgMCnode_t *all_nodes;	\/**< Array containing all nodes of the graph. *\/$/;"	m	struct:mpq_EGalgMCgraph_t
all_nodes	src/eg_adgraph.h	/^	char*all_nodes;		\/**< @brief memory containing all nodes in the graph *\/$/;"	m	struct:__anon94
all_nodes	src/eg_simula.h	/^	EGsimNode_t*all_nodes;\/**< array containing all nodes in the network *\/$/;"	m	struct:__anon110
all_out	src/eg_adgraph.h	/^	uint32_t*all_out;	\/**< @brief array of length n_edges containing the index$/;"	m	struct:__anon94
all_sym	src/eg_symtab.h	/^	char*all_sym;				\/**< @brief array of all strings *\/$/;"	m	struct:EGsymtab_t
all_sz	src/eg_symtab.h	/^	size_t all_sz;			\/**< @brief length of all_sym *\/$/;"	m	struct:EGsymtab_t
asz	src/eg_raset.h	/^	int32_t asz;	\/**< @brief actual length of EGrset_t::set and EGrset_t::inv *\/$/;"	m	struct:__anon100
ava_serv	src/eg_simula.h	/^	unsigned ava_serv;		\/**< @brief Total available servers in current time *\/$/;"	m	struct:__anon108
avg_cycle	src/eg_simula.h	/^	double avg_cycle;			\/**< @brief Average cycle time of served agents *\/$/;"	m	struct:__anon108
avg_q5	src/eg_simula.h	/^	double avg_q5;				\/**< @brief Average time of queue with 5 or more clients*\/$/;"	m	struct:__anon108
avg_queue	src/eg_simula.h	/^	double avg_queue;			\/**< @brief Average queue length (up to last update time, $/;"	m	struct:__anon108
avg_usage	src/eg_simula.h	/^	double avg_usage;			\/**< @brief Average percentage of used time *\/$/;"	m	struct:__anon108
avg_wtime	src/eg_simula.h	/^	double avg_wtime;			\/**< @brief Average waiting time on queue *\/$/;"	m	struct:__anon108
b	src/eg_simula.h	/^	double b;					\/**< @brief second parameter *\/$/;"	m	struct:__anon107
base	src/eg_memslab.h	/^	char*base;								\/**< @brief Where the data-payload start *\/$/;"	m	struct:__anon101
basis	TEmplate/dbl_eg_dbasis_red.h	/^	double **basis;\/**< @brief array of pointers to arrays containing the $/;"	m	struct:dbl_EGdBsRed_t
basis	TEmplate/fp20_eg_dbasis_red.h	/^	EGfp20_t **basis;\/**< @brief array of pointers to arrays containing the $/;"	m	struct:fp20_EGdBsRed_t
basis	TEmplate/int32_eg_dbasis_red.h	/^	int32_t **basis;\/**< @brief array of pointers to arrays containing the $/;"	m	struct:int32_EGdBsRed_t
basis	TEmplate/int_eg_dbasis_red.h	/^	int **basis;\/**< @brief array of pointers to arrays containing the $/;"	m	struct:int_EGdBsRed_t
basis	TEmplate/ldbl_eg_dbasis_red.h	/^	long double **basis;\/**< @brief array of pointers to arrays containing the $/;"	m	struct:ldbl_EGdBsRed_t
basis	TEmplate/mpf_eg_dbasis_red.h	/^	mpf_t **basis;\/**< @brief array of pointers to arrays containing the $/;"	m	struct:mpf_EGdBsRed_t
basis	TEmplate/mpq_eg_dbasis_red.h	/^	mpq_t **basis;\/**< @brief array of pointers to arrays containing the $/;"	m	struct:mpq_EGdBsRed_t
basis_sz	TEmplate/dbl_eg_dbasis_red.h	/^	size_t basis_sz;	\/**< @brief Actual length of the #dbl_EGdBsRed_t::basis $/;"	m	struct:dbl_EGdBsRed_t
basis_sz	TEmplate/fp20_eg_dbasis_red.h	/^	size_t basis_sz;	\/**< @brief Actual length of the #fp20_EGdBsRed_t::basis $/;"	m	struct:fp20_EGdBsRed_t
basis_sz	TEmplate/int32_eg_dbasis_red.h	/^	size_t basis_sz;	\/**< @brief Actual length of the #int32_EGdBsRed_t::basis $/;"	m	struct:int32_EGdBsRed_t
basis_sz	TEmplate/int_eg_dbasis_red.h	/^	size_t basis_sz;	\/**< @brief Actual length of the #int_EGdBsRed_t::basis $/;"	m	struct:int_EGdBsRed_t
basis_sz	TEmplate/ldbl_eg_dbasis_red.h	/^	size_t basis_sz;	\/**< @brief Actual length of the #ldbl_EGdBsRed_t::basis $/;"	m	struct:ldbl_EGdBsRed_t
basis_sz	TEmplate/mpf_eg_dbasis_red.h	/^	size_t basis_sz;	\/**< @brief Actual length of the #mpf_EGdBsRed_t::basis $/;"	m	struct:mpf_EGdBsRed_t
basis_sz	TEmplate/mpq_eg_dbasis_red.h	/^	size_t basis_sz;	\/**< @brief Actual length of the #mpq_EGdBsRed_t::basis $/;"	m	struct:mpq_EGdBsRed_t
beg	src/eg_augraph.h	/^	uint32_t beg;	\/**< @brief where all neighbours begin, both for edges and for actual node neighbours *\/$/;"	m	struct:__anon1
best_tour	src/eg_slk.h	/^	int *best_tour;	\/**< best tour seen so-far *\/$/;"	m	struct:EGslkData_t
best_val	src/eg_slk.h	/^	int best_val;		\/**< value of the best tour *\/$/;"	m	struct:EGslkData_t
bit_int_t	src/eg_bit.h	87;"	d
bw	TEmplate/dbl_eg_push_relabel.h	/^	dbl_EGalgPRse_t bw;		\/**< backward edge, we assume that bw.type = 1 *\/$/;"	m	struct:dbl_EGalgPRedge_t
bw	TEmplate/fp20_eg_push_relabel.h	/^	fp20_EGalgPRse_t bw;		\/**< backward edge, we assume that bw.type = 1 *\/$/;"	m	struct:fp20_EGalgPRedge_t
bw	TEmplate/int32_eg_push_relabel.h	/^	int32_EGalgPRse_t bw;		\/**< backward edge, we assume that bw.type = 1 *\/$/;"	m	struct:int32_EGalgPRedge_t
bw	TEmplate/int_eg_push_relabel.h	/^	int_EGalgPRse_t bw;		\/**< backward edge, we assume that bw.type = 1 *\/$/;"	m	struct:int_EGalgPRedge_t
bw	TEmplate/ldbl_eg_push_relabel.h	/^	ldbl_EGalgPRse_t bw;		\/**< backward edge, we assume that bw.type = 1 *\/$/;"	m	struct:ldbl_EGalgPRedge_t
bw	TEmplate/mpf_eg_push_relabel.h	/^	mpf_EGalgPRse_t bw;		\/**< backward edge, we assume that bw.type = 1 *\/$/;"	m	struct:mpf_EGalgPRedge_t
bw	TEmplate/mpq_eg_push_relabel.h	/^	mpq_EGalgPRse_t bw;		\/**< backward edge, we assume that bw.type = 1 *\/$/;"	m	struct:mpq_EGalgPRedge_t
c_color	src/eg_memslab.h	/^	uint8_t c_color;				\/**< Last used color while creating slabs. *\/$/;"	m	struct:EGmemSlabPool_t
c_focus	src/eg_perm_it.h	/^	int*c_focus;		\/**< @brief Internal information *\/$/;"	m	struct:EGpermIt_t
capacity	src/eg_slk.h	/^	int capacity;		\/**< Capacity of the trucks *\/$/;"	m	struct:EGslkData_t
changed_pos	src/eg_gcit.h	/^	int changed_pos;\/**< @brief position of the last bit changed *\/$/;"	m	struct:EGgcIt_t
changed_pos	src/eg_perm_it.h	/^	int changed_pos;\/**< @brief position of the last bit changed *\/$/;"	m	struct:EGpermIt_t
cn	TEmplate/dbl_eg_abheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon7
cn	TEmplate/dbl_eg_abkheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon5
cn	TEmplate/dbl_eg_aheap.h	/^	unsigned*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon9
cn	TEmplate/dbl_eg_eheap.h	/^	dbl_EGeHeapCn_t **cn;$/;"	m	struct:__anon11
cn	TEmplate/dbl_eg_ekheap.h	/^	dbl_EGeKHeapCn_t **cn;$/;"	m	struct:__anon13
cn	TEmplate/fp20_eg_abheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon17
cn	TEmplate/fp20_eg_abkheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon15
cn	TEmplate/fp20_eg_aheap.h	/^	unsigned*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon19
cn	TEmplate/fp20_eg_eheap.h	/^	fp20_EGeHeapCn_t **cn;$/;"	m	struct:__anon21
cn	TEmplate/fp20_eg_ekheap.h	/^	fp20_EGeKHeapCn_t **cn;$/;"	m	struct:__anon23
cn	TEmplate/int32_eg_abheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon37
cn	TEmplate/int32_eg_abkheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon35
cn	TEmplate/int32_eg_aheap.h	/^	unsigned*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon39
cn	TEmplate/int32_eg_eheap.h	/^	int32_EGeHeapCn_t **cn;$/;"	m	struct:__anon41
cn	TEmplate/int32_eg_ekheap.h	/^	int32_EGeKHeapCn_t **cn;$/;"	m	struct:__anon43
cn	TEmplate/int_eg_abheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon27
cn	TEmplate/int_eg_abkheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon25
cn	TEmplate/int_eg_aheap.h	/^	unsigned*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon29
cn	TEmplate/int_eg_eheap.h	/^	int_EGeHeapCn_t **cn;$/;"	m	struct:__anon31
cn	TEmplate/int_eg_ekheap.h	/^	int_EGeKHeapCn_t **cn;$/;"	m	struct:__anon33
cn	TEmplate/ldbl_eg_abheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon47
cn	TEmplate/ldbl_eg_abkheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon45
cn	TEmplate/ldbl_eg_aheap.h	/^	unsigned*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon49
cn	TEmplate/ldbl_eg_eheap.h	/^	ldbl_EGeHeapCn_t **cn;$/;"	m	struct:__anon51
cn	TEmplate/ldbl_eg_ekheap.h	/^	ldbl_EGeKHeapCn_t **cn;$/;"	m	struct:__anon53
cn	TEmplate/mpf_eg_abheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon67
cn	TEmplate/mpf_eg_abkheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon65
cn	TEmplate/mpf_eg_aheap.h	/^	unsigned*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon69
cn	TEmplate/mpf_eg_eheap.h	/^	mpf_EGeHeapCn_t **cn;$/;"	m	struct:__anon71
cn	TEmplate/mpf_eg_ekheap.h	/^	mpf_EGeKHeapCn_t **cn;$/;"	m	struct:__anon73
cn	TEmplate/mpq_eg_abheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon57
cn	TEmplate/mpq_eg_abkheap.h	/^	uint32_t*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon55
cn	TEmplate/mpq_eg_aheap.h	/^	unsigned*cn;							\/**<@brief position in the base array of the connector *\/$/;"	m	struct:__anon59
cn	TEmplate/mpq_eg_eheap.h	/^	mpq_EGeHeapCn_t **cn;$/;"	m	struct:__anon61
cn	TEmplate/mpq_eg_ekheap.h	/^	mpq_EGeKHeapCn_t **cn;$/;"	m	struct:__anon63
cn	TEmplate/uint16_eg_idxlist.ex.c	/^	uint16_EGidxLst_t cn;	\/**< structure to put this together in a list *\/$/;"	m	struct:__anon79	file:
cn	TEmplate/uint32_eg_idxlist.ex.c	/^	uint32_EGidxLst_t cn;	\/**< structure to put this together in a list *\/$/;"	m	struct:__anon80	file:
cn	TEmplate/uint64_eg_idxlist.ex.c	/^	uint64_EGidxLst_t cn;	\/**< structure to put this together in a list *\/$/;"	m	struct:__anon81	file:
cn	TEmplate/uint8_eg_idxlist.ex.c	/^	uint8_EGidxLst_t cn;	\/**< structure to put this together in a list *\/$/;"	m	struct:__anon78	file:
cn	src/eg_a16list.ex.c	/^	EGa16List_t cn;	\/**< structure to put this together in a list *\/$/;"	m	struct:__anon75	file:
cn	src/eg_a32hash.h	/^	EGa32List_t cn;	\/**< @brief connector in the list where this element lives. *\/$/;"	m	struct:EGa32HashInfo_t
cn	src/eg_a32list.ex.c	/^	EGa32List_t cn;	\/**< structure to put this together in a list *\/$/;"	m	struct:__anon74	file:
cn	src/eg_ahash.h	/^	EGaList_t cn;	\/**< @brief connector in the list where this element lives. *\/$/;"	m	struct:EGaHashInfo_t
cn	src/eg_alist.ex.c	/^	EGaList_t cn;	\/**< structure to put this together in a list *\/$/;"	m	struct:__anon76	file:
cn	src/eg_ebtree.h	/^	struct EGeBTree_t *cn[3];	\/**< This array contains three pointers, in $/;"	m	struct:EGeBTree_t	typeref:struct:EGeBTree_t::EGeBTree_t
cn	src/eg_ehash.h	/^	EGeList_t cn;	\/**< @brief connector in the list where this element lives. *\/$/;"	m	struct:EGeHashInfo_t
cn	src/eg_elist.ex.c	/^	EGeList_t cn;	\/**< structure to put this together in a list *\/$/;"	m	struct:__anon77	file:
cn	src/eg_eugraph.h	/^	EGeList_t cn;					\/**< List member of the edge list in the $/;"	m	struct:EGeUgraphEP_t
cn	src/eg_slk.ex.c	/^	dbl_EGeHeapCn_t cn;$/;"	m	struct:SlkHcn_t	file:
col_ord	TEmplate/dbl_eg_dmatrix.h	/^	int *col_ord;			\/**< @brief Array of size at least #dbl_EGdMatrix_t::col_sz $/;"	m	struct:dbl_EGdMatrix_t
col_ord	TEmplate/fp20_eg_dmatrix.h	/^	int *col_ord;			\/**< @brief Array of size at least #fp20_EGdMatrix_t::col_sz $/;"	m	struct:fp20_EGdMatrix_t
col_ord	TEmplate/int32_eg_dmatrix.h	/^	int *col_ord;			\/**< @brief Array of size at least #int32_EGdMatrix_t::col_sz $/;"	m	struct:int32_EGdMatrix_t
col_ord	TEmplate/int_eg_dmatrix.h	/^	int *col_ord;			\/**< @brief Array of size at least #int_EGdMatrix_t::col_sz $/;"	m	struct:int_EGdMatrix_t
col_ord	TEmplate/ldbl_eg_dmatrix.h	/^	int *col_ord;			\/**< @brief Array of size at least #ldbl_EGdMatrix_t::col_sz $/;"	m	struct:ldbl_EGdMatrix_t
col_ord	TEmplate/mpf_eg_dmatrix.h	/^	int *col_ord;			\/**< @brief Array of size at least #mpf_EGdMatrix_t::col_sz $/;"	m	struct:mpf_EGdMatrix_t
col_ord	TEmplate/mpq_eg_dmatrix.h	/^	int *col_ord;			\/**< @brief Array of size at least #mpq_EGdMatrix_t::col_sz $/;"	m	struct:mpq_EGdMatrix_t
col_sz	TEmplate/dbl_eg_dmatrix.h	/^	size_t col_sz;		\/**< @brief Number of columns in the matrix. *\/$/;"	m	struct:dbl_EGdMatrix_t
col_sz	TEmplate/fp20_eg_dmatrix.h	/^	size_t col_sz;		\/**< @brief Number of columns in the matrix. *\/$/;"	m	struct:fp20_EGdMatrix_t
col_sz	TEmplate/int32_eg_dmatrix.h	/^	size_t col_sz;		\/**< @brief Number of columns in the matrix. *\/$/;"	m	struct:int32_EGdMatrix_t
col_sz	TEmplate/int_eg_dmatrix.h	/^	size_t col_sz;		\/**< @brief Number of columns in the matrix. *\/$/;"	m	struct:int_EGdMatrix_t
col_sz	TEmplate/ldbl_eg_dmatrix.h	/^	size_t col_sz;		\/**< @brief Number of columns in the matrix. *\/$/;"	m	struct:ldbl_EGdMatrix_t
col_sz	TEmplate/mpf_eg_dmatrix.h	/^	size_t col_sz;		\/**< @brief Number of columns in the matrix. *\/$/;"	m	struct:mpf_EGdMatrix_t
col_sz	TEmplate/mpq_eg_dmatrix.h	/^	size_t col_sz;		\/**< @brief Number of columns in the matrix. *\/$/;"	m	struct:mpq_EGdMatrix_t
constr	src/eg_memslab.h	/^	EGconstructor_f constr;	\/**< Constructor for the local elements *\/$/;"	m	struct:EGmemSlabPool_t
control	src/eg_memslab.h	/^	EGmsbControl_t control;	\/**< @brief comon base structure for slabs *\/$/;"	m	struct:__anon102
cost	src/eg_slk.h	/^	int **cost;			\/**< double array containing costs of all edges. *\/$/;"	m	struct:EGslkData_t
cur_time	src/eg_simula.h	/^	double cur_time;	\/**< Current time on the system *\/$/;"	m	struct:__anon110
curr_tour	src/eg_slk.h	/^	int *curr_tour;	\/**< Tour that we are using to work *\/$/;"	m	struct:EGslkData_t
cut	TEmplate/dbl_eg_min_cut.ex.c	/^	unsigned int **cut;$/;"	m	struct:dbl_mc_all_cuts_t	file:
cut	TEmplate/dbl_eg_min_cut.h	/^	unsigned int *cut;				\/**< Array  storing the current cut, the size of $/;"	m	struct:dbl_EGalgMCgraph_t
cut	TEmplate/fp20_eg_min_cut.ex.c	/^	unsigned int **cut;$/;"	m	struct:fp20_mc_all_cuts_t	file:
cut	TEmplate/fp20_eg_min_cut.h	/^	unsigned int *cut;				\/**< Array  storing the current cut, the size of $/;"	m	struct:fp20_EGalgMCgraph_t
cut	TEmplate/int32_eg_min_cut.ex.c	/^	unsigned int **cut;$/;"	m	struct:int32_mc_all_cuts_t	file:
cut	TEmplate/int32_eg_min_cut.h	/^	unsigned int *cut;				\/**< Array  storing the current cut, the size of $/;"	m	struct:int32_EGalgMCgraph_t
cut	TEmplate/int_eg_min_cut.ex.c	/^	unsigned int **cut;$/;"	m	struct:int_mc_all_cuts_t	file:
cut	TEmplate/int_eg_min_cut.h	/^	unsigned int *cut;				\/**< Array  storing the current cut, the size of $/;"	m	struct:int_EGalgMCgraph_t
cut	TEmplate/ldbl_eg_min_cut.ex.c	/^	unsigned int **cut;$/;"	m	struct:ldbl_mc_all_cuts_t	file:
cut	TEmplate/ldbl_eg_min_cut.h	/^	unsigned int *cut;				\/**< Array  storing the current cut, the size of $/;"	m	struct:ldbl_EGalgMCgraph_t
cut	TEmplate/mpf_eg_min_cut.ex.c	/^	unsigned int **cut;$/;"	m	struct:mpf_mc_all_cuts_t	file:
cut	TEmplate/mpf_eg_min_cut.h	/^	unsigned int *cut;				\/**< Array  storing the current cut, the size of $/;"	m	struct:mpf_EGalgMCgraph_t
cut	TEmplate/mpq_eg_min_cut.ex.c	/^	unsigned int **cut;$/;"	m	struct:mpq_mc_all_cuts_t	file:
cut	TEmplate/mpq_eg_min_cut.h	/^	unsigned int *cut;				\/**< Array  storing the current cut, the size of $/;"	m	struct:mpq_EGalgMCgraph_t
cut_sz	TEmplate/dbl_eg_min_cut.ex.c	/^	unsigned int *cut_sz;$/;"	m	struct:dbl_mc_all_cuts_t	file:
cut_sz	TEmplate/dbl_eg_min_cut.h	/^	unsigned int cut_sz;			\/**< number of nodes in the current best cut, if $/;"	m	struct:dbl_EGalgMCgraph_t
cut_sz	TEmplate/fp20_eg_min_cut.ex.c	/^	unsigned int *cut_sz;$/;"	m	struct:fp20_mc_all_cuts_t	file:
cut_sz	TEmplate/fp20_eg_min_cut.h	/^	unsigned int cut_sz;			\/**< number of nodes in the current best cut, if $/;"	m	struct:fp20_EGalgMCgraph_t
cut_sz	TEmplate/int32_eg_min_cut.ex.c	/^	unsigned int *cut_sz;$/;"	m	struct:int32_mc_all_cuts_t	file:
cut_sz	TEmplate/int32_eg_min_cut.h	/^	unsigned int cut_sz;			\/**< number of nodes in the current best cut, if $/;"	m	struct:int32_EGalgMCgraph_t
cut_sz	TEmplate/int_eg_min_cut.ex.c	/^	unsigned int *cut_sz;$/;"	m	struct:int_mc_all_cuts_t	file:
cut_sz	TEmplate/int_eg_min_cut.h	/^	unsigned int cut_sz;			\/**< number of nodes in the current best cut, if $/;"	m	struct:int_EGalgMCgraph_t
cut_sz	TEmplate/ldbl_eg_min_cut.ex.c	/^	unsigned int *cut_sz;$/;"	m	struct:ldbl_mc_all_cuts_t	file:
cut_sz	TEmplate/ldbl_eg_min_cut.h	/^	unsigned int cut_sz;			\/**< number of nodes in the current best cut, if $/;"	m	struct:ldbl_EGalgMCgraph_t
cut_sz	TEmplate/mpf_eg_min_cut.ex.c	/^	unsigned int *cut_sz;$/;"	m	struct:mpf_mc_all_cuts_t	file:
cut_sz	TEmplate/mpf_eg_min_cut.h	/^	unsigned int cut_sz;			\/**< number of nodes in the current best cut, if $/;"	m	struct:mpf_EGalgMCgraph_t
cut_sz	TEmplate/mpq_eg_min_cut.ex.c	/^	unsigned int *cut_sz;$/;"	m	struct:mpq_mc_all_cuts_t	file:
cut_sz	TEmplate/mpq_eg_min_cut.h	/^	unsigned int cut_sz;			\/**< number of nodes in the current best cut, if $/;"	m	struct:mpq_EGalgMCgraph_t
cut_val	TEmplate/dbl_eg_min_cut.ex.c	/^	double *cut_val;$/;"	m	struct:dbl_mc_all_cuts_t	file:
cut_val	TEmplate/dbl_eg_min_cut.h	/^	double cut_val;				\/**< if #dbl_EGalgMCgraph_t::cut_sz is not zero, then $/;"	m	struct:dbl_EGalgMCgraph_t
cut_val	TEmplate/fp20_eg_min_cut.ex.c	/^	EGfp20_t *cut_val;$/;"	m	struct:fp20_mc_all_cuts_t	file:
cut_val	TEmplate/fp20_eg_min_cut.h	/^	EGfp20_t cut_val;				\/**< if #fp20_EGalgMCgraph_t::cut_sz is not zero, then $/;"	m	struct:fp20_EGalgMCgraph_t
cut_val	TEmplate/int32_eg_min_cut.ex.c	/^	int32_t *cut_val;$/;"	m	struct:int32_mc_all_cuts_t	file:
cut_val	TEmplate/int32_eg_min_cut.h	/^	int32_t cut_val;				\/**< if #int32_EGalgMCgraph_t::cut_sz is not zero, then $/;"	m	struct:int32_EGalgMCgraph_t
cut_val	TEmplate/int_eg_min_cut.ex.c	/^	int *cut_val;$/;"	m	struct:int_mc_all_cuts_t	file:
cut_val	TEmplate/int_eg_min_cut.h	/^	int cut_val;				\/**< if #int_EGalgMCgraph_t::cut_sz is not zero, then $/;"	m	struct:int_EGalgMCgraph_t
cut_val	TEmplate/ldbl_eg_min_cut.ex.c	/^	long double *cut_val;$/;"	m	struct:ldbl_mc_all_cuts_t	file:
cut_val	TEmplate/ldbl_eg_min_cut.h	/^	long double cut_val;				\/**< if #ldbl_EGalgMCgraph_t::cut_sz is not zero, then $/;"	m	struct:ldbl_EGalgMCgraph_t
cut_val	TEmplate/mpf_eg_min_cut.ex.c	/^	mpf_t *cut_val;$/;"	m	struct:mpf_mc_all_cuts_t	file:
cut_val	TEmplate/mpf_eg_min_cut.h	/^	mpf_t cut_val;				\/**< if #mpf_EGalgMCgraph_t::cut_sz is not zero, then $/;"	m	struct:mpf_EGalgMCgraph_t
cut_val	TEmplate/mpq_eg_min_cut.ex.c	/^	mpq_t *cut_val;$/;"	m	struct:mpq_mc_all_cuts_t	file:
cut_val	TEmplate/mpq_eg_min_cut.h	/^	mpq_t cut_val;				\/**< if #mpq_EGalgMCgraph_t::cut_sz is not zero, then $/;"	m	struct:mpq_EGalgMCgraph_t
cutoff	TEmplate/dbl_eg_min_cut.h	/^	double cutoff;	\/**< maximum value for the newly found minimum cut, for $/;"	m	struct:dbl_EGalgMCcbk_t
cutoff	TEmplate/fp20_eg_min_cut.h	/^	EGfp20_t cutoff;	\/**< maximum value for the newly found minimum cut, for $/;"	m	struct:fp20_EGalgMCcbk_t
cutoff	TEmplate/int32_eg_min_cut.h	/^	int32_t cutoff;	\/**< maximum value for the newly found minimum cut, for $/;"	m	struct:int32_EGalgMCcbk_t
cutoff	TEmplate/int_eg_min_cut.h	/^	int cutoff;	\/**< maximum value for the newly found minimum cut, for $/;"	m	struct:int_EGalgMCcbk_t
cutoff	TEmplate/ldbl_eg_min_cut.h	/^	long double cutoff;	\/**< maximum value for the newly found minimum cut, for $/;"	m	struct:ldbl_EGalgMCcbk_t
cutoff	TEmplate/mpf_eg_min_cut.h	/^	mpf_t cutoff;	\/**< maximum value for the newly found minimum cut, for $/;"	m	struct:mpf_EGalgMCcbk_t
cutoff	TEmplate/mpq_eg_min_cut.h	/^	mpq_t cutoff;	\/**< maximum value for the newly found minimum cut, for $/;"	m	struct:mpq_EGalgMCcbk_t
d	TEmplate/dbl_eg_aheap.h	/^	unsigned d;$/;"	m	struct:__anon9
d	TEmplate/dbl_eg_eheap.h	/^	unsigned int d;$/;"	m	struct:__anon11
d	TEmplate/dbl_eg_ekheap.h	/^	unsigned int d;$/;"	m	struct:__anon13
d	TEmplate/dbl_eg_push_relabel.h	/^	unsigned int d;				\/**< Exact label distance for this node. Note that $/;"	m	struct:dbl_EGalgPRnode_t
d	TEmplate/fp20_eg_aheap.h	/^	unsigned d;$/;"	m	struct:__anon19
d	TEmplate/fp20_eg_eheap.h	/^	unsigned int d;$/;"	m	struct:__anon21
d	TEmplate/fp20_eg_ekheap.h	/^	unsigned int d;$/;"	m	struct:__anon23
d	TEmplate/fp20_eg_push_relabel.h	/^	unsigned int d;				\/**< Exact label distance for this node. Note that $/;"	m	struct:fp20_EGalgPRnode_t
d	TEmplate/int32_eg_aheap.h	/^	unsigned d;$/;"	m	struct:__anon39
d	TEmplate/int32_eg_eheap.h	/^	unsigned int d;$/;"	m	struct:__anon41
d	TEmplate/int32_eg_ekheap.h	/^	unsigned int d;$/;"	m	struct:__anon43
d	TEmplate/int32_eg_push_relabel.h	/^	unsigned int d;				\/**< Exact label distance for this node. Note that $/;"	m	struct:int32_EGalgPRnode_t
d	TEmplate/int_eg_aheap.h	/^	unsigned d;$/;"	m	struct:__anon29
d	TEmplate/int_eg_eheap.h	/^	unsigned int d;$/;"	m	struct:__anon31
d	TEmplate/int_eg_ekheap.h	/^	unsigned int d;$/;"	m	struct:__anon33
d	TEmplate/int_eg_push_relabel.h	/^	unsigned int d;				\/**< Exact label distance for this node. Note that $/;"	m	struct:int_EGalgPRnode_t
d	TEmplate/ldbl_eg_aheap.h	/^	unsigned d;$/;"	m	struct:__anon49
d	TEmplate/ldbl_eg_eheap.h	/^	unsigned int d;$/;"	m	struct:__anon51
d	TEmplate/ldbl_eg_ekheap.h	/^	unsigned int d;$/;"	m	struct:__anon53
d	TEmplate/ldbl_eg_push_relabel.h	/^	unsigned int d;				\/**< Exact label distance for this node. Note that $/;"	m	struct:ldbl_EGalgPRnode_t
d	TEmplate/mpf_eg_aheap.h	/^	unsigned d;$/;"	m	struct:__anon69
d	TEmplate/mpf_eg_eheap.h	/^	unsigned int d;$/;"	m	struct:__anon71
d	TEmplate/mpf_eg_ekheap.h	/^	unsigned int d;$/;"	m	struct:__anon73
d	TEmplate/mpf_eg_push_relabel.h	/^	unsigned int d;				\/**< Exact label distance for this node. Note that $/;"	m	struct:mpf_EGalgPRnode_t
d	TEmplate/mpq_eg_aheap.h	/^	unsigned d;$/;"	m	struct:__anon59
d	TEmplate/mpq_eg_eheap.h	/^	unsigned int d;$/;"	m	struct:__anon61
d	TEmplate/mpq_eg_ekheap.h	/^	unsigned int d;$/;"	m	struct:__anon63
d	TEmplate/mpq_eg_push_relabel.h	/^	unsigned int d;				\/**< Exact label distance for this node. Note that $/;"	m	struct:mpq_EGalgPRnode_t
data	src/eg_octree.h	/^	EGeOctdata_t data;	\/** @brief Note that both leafs and branches have the $/;"	m	struct:__anon90
data	src/eg_simula.h	/^	void*data;						\/**< @brief asociated data for generator *\/$/;"	m	struct:__anon108
dbl	src/eg_lpnum.float128.h	/^	double dbl;$/;"	m	union:__anon83
dbl_DJK_DEBUG_	TEmplate/dbl_eg_dijkstra.h	44;"	d
dbl_DJK_VRBLVL_	TEmplate/dbl_eg_dijkstra.h	40;"	d
dbl_EG_ABHEAP_DEBUG	TEmplate/dbl_eg_abheap.h	53;"	d
dbl_EG_ABHEAP_POISON	TEmplate/dbl_eg_abheap.h	81;"	d
dbl_EG_ABKHEAP_DEBUG	TEmplate/dbl_eg_abkheap.h	53;"	d
dbl_EG_ABKHEAP_ENTRY	TEmplate/dbl_eg_abkheap.h	70;"	d
dbl_EG_ABKHEAP_POISON	TEmplate/dbl_eg_abkheap.h	85;"	d
dbl_EG_AHEAP_DEBUG	TEmplate/dbl_eg_aheap.h	52;"	d
dbl_EG_AHEAP_POISON	TEmplate/dbl_eg_aheap.h	80;"	d
dbl_EG_BSRED_CALLS	TEmplate/dbl_eg_dbasis_red.h	62;"	d
dbl_EG_BSRED_INTR	TEmplate/dbl_eg_dbasis_red.h	72;"	d
dbl_EG_BSRED_ITT	TEmplate/dbl_eg_dbasis_red.h	77;"	d
dbl_EG_BSRED_SZRED	TEmplate/dbl_eg_dbasis_red.h	67;"	d
dbl_EG_DBSRED_ALPHA	TEmplate/dbl_eg_dbasis_red.h	97;"	d
dbl_EG_DBSRED_VERBOSE	TEmplate/dbl_eg_dbasis_red.h	50;"	d
dbl_EG_EHEAP_DEBUG	TEmplate/dbl_eg_eheap.h	66;"	d
dbl_EG_EHEAP_POISON	TEmplate/dbl_eg_eheap.h	94;"	d
dbl_EG_EKHEAP_DEBUG	TEmplate/dbl_eg_ekheap.h	60;"	d
dbl_EG_EKHEAP_ENTRY	TEmplate/dbl_eg_ekheap.h	77;"	d
dbl_EG_EKHEAP_POISON	TEmplate/dbl_eg_ekheap.h	93;"	d
dbl_EG_PR_RELABEL	TEmplate/dbl_eg_push_relabel.h	114;"	d
dbl_EG_PR_RELABEL_FREC	TEmplate/dbl_eg_push_relabel.h	120;"	d
dbl_EG_SRK_DEBUG	TEmplate/dbl_eg_shrink_graph.h	57;"	d
dbl_EGaBKheapAdd	TEmplate/dbl_eg_abkheap.h	240;"	d
dbl_EGaBKheapCHECK_CN	TEmplate/dbl_eg_abkheap.h	60;"	d
dbl_EGaBKheapCHECK_CN	TEmplate/dbl_eg_abkheap.h	63;"	d
dbl_EGaBKheapCHECK_NF	TEmplate/dbl_eg_abkheap.h	61;"	d
dbl_EGaBKheapCHECK_NF	TEmplate/dbl_eg_abkheap.h	64;"	d
dbl_EGaBKheapChangeVal	TEmplate/dbl_eg_abkheap.h	318;"	d
dbl_EGaBKheapClear	TEmplate/dbl_eg_abkheap.h	170;"	d
dbl_EGaBKheapCnClear	TEmplate/dbl_eg_abkheap.h	127;"	d
dbl_EGaBKheapCnInit	TEmplate/dbl_eg_abkheap.h	110;"	d
dbl_EGaBKheapCnReset	TEmplate/dbl_eg_abkheap.h	121;"	d
dbl_EGaBKheapCn_t	TEmplate/dbl_eg_abkheap.h	/^dbl_EGaBKheapCn_t;$/;"	t	typeref:struct:__anon4
dbl_EGaBKheapCopyVal	TEmplate/dbl_eg_abkheap.h	305;"	d
dbl_EGaBKheapDel	TEmplate/dbl_eg_abkheap.h	339;"	d
dbl_EGaBKheapEmpty	TEmplate/dbl_eg_abkheap.h	150;"	d
dbl_EGaBKheapFatherId	TEmplate/dbl_eg_abkheap.h	199;"	d
dbl_EGaBKheapFirstChildId	TEmplate/dbl_eg_abkheap.h	254;"	d
dbl_EGaBKheapGetMin	TEmplate/dbl_eg_abkheap.h	178;"	d
dbl_EGaBKheapInit	TEmplate/dbl_eg_abkheap.h	156;"	d
dbl_EGaBKheapIsFull	TEmplate/dbl_eg_abkheap.h	144;"	d
dbl_EGaBKheapIsLess	TEmplate/dbl_eg_abkheap.h	92;"	d
dbl_EGaBKheapReset	TEmplate/dbl_eg_abkheap.h	163;"	d
dbl_EGaBKheapResize	TEmplate/dbl_eg_abkheap.h	189;"	d
dbl_EGaBKheap_t	TEmplate/dbl_eg_abkheap.h	/^dbl_EGaBKheap_t;$/;"	t	typeref:struct:__anon5
dbl_EGaBheapAdd	TEmplate/dbl_eg_abheap.h	215;"	d
dbl_EGaBheapCHECK_CN	TEmplate/dbl_eg_abheap.h	60;"	d
dbl_EGaBheapCHECK_CN	TEmplate/dbl_eg_abheap.h	63;"	d
dbl_EGaBheapCHECK_NF	TEmplate/dbl_eg_abheap.h	61;"	d
dbl_EGaBheapCHECK_NF	TEmplate/dbl_eg_abheap.h	64;"	d
dbl_EGaBheapChangeVal	TEmplate/dbl_eg_abheap.h	283;"	d
dbl_EGaBheapClear	TEmplate/dbl_eg_abheap.h	145;"	d
dbl_EGaBheapCnClear	TEmplate/dbl_eg_abheap.h	103;"	d
dbl_EGaBheapCnInit	TEmplate/dbl_eg_abheap.h	89;"	d
dbl_EGaBheapCnReset	TEmplate/dbl_eg_abheap.h	96;"	d
dbl_EGaBheapCn_t	TEmplate/dbl_eg_abheap.h	/^dbl_EGaBheapCn_t;$/;"	t	typeref:struct:__anon6
dbl_EGaBheapDel	TEmplate/dbl_eg_abheap.h	306;"	d
dbl_EGaBheapEmpty	TEmplate/dbl_eg_abheap.h	125;"	d
dbl_EGaBheapFatherId	TEmplate/dbl_eg_abheap.h	174;"	d
dbl_EGaBheapFirstChildId	TEmplate/dbl_eg_abheap.h	229;"	d
dbl_EGaBheapGetMin	TEmplate/dbl_eg_abheap.h	153;"	d
dbl_EGaBheapInit	TEmplate/dbl_eg_abheap.h	131;"	d
dbl_EGaBheapIsFull	TEmplate/dbl_eg_abheap.h	119;"	d
dbl_EGaBheapReset	TEmplate/dbl_eg_abheap.h	138;"	d
dbl_EGaBheapResize	TEmplate/dbl_eg_abheap.h	164;"	d
dbl_EGaBheap_t	TEmplate/dbl_eg_abheap.h	/^dbl_EGaBheap_t;$/;"	t	typeref:struct:__anon7
dbl_EGaHeapAdd	TEmplate/dbl_eg_aheap.h	227;"	d
dbl_EGaHeapCHECK_CN	TEmplate/dbl_eg_aheap.h	59;"	d
dbl_EGaHeapCHECK_CN	TEmplate/dbl_eg_aheap.h	62;"	d
dbl_EGaHeapCHECK_NF	TEmplate/dbl_eg_aheap.h	60;"	d
dbl_EGaHeapCHECK_NF	TEmplate/dbl_eg_aheap.h	63;"	d
dbl_EGaHeapChangeVal	TEmplate/dbl_eg_aheap.h	296;"	d
dbl_EGaHeapClear	TEmplate/dbl_eg_aheap.h	146;"	d
dbl_EGaHeapCnClear	TEmplate/dbl_eg_aheap.h	102;"	d
dbl_EGaHeapCnInit	TEmplate/dbl_eg_aheap.h	88;"	d
dbl_EGaHeapCnReset	TEmplate/dbl_eg_aheap.h	95;"	d
dbl_EGaHeapCn_t	TEmplate/dbl_eg_aheap.h	/^dbl_EGaHeapCn_t;$/;"	t	typeref:struct:__anon8
dbl_EGaHeapDel	TEmplate/dbl_eg_aheap.h	319;"	d
dbl_EGaHeapEmpty	TEmplate/dbl_eg_aheap.h	125;"	d
dbl_EGaHeapFatherId	TEmplate/dbl_eg_aheap.h	186;"	d
dbl_EGaHeapFirstChildId	TEmplate/dbl_eg_aheap.h	241;"	d
dbl_EGaHeapGetMin	TEmplate/dbl_eg_aheap.h	164;"	d
dbl_EGaHeapGetMinVal	TEmplate/dbl_eg_aheap.h	154;"	d
dbl_EGaHeapInit	TEmplate/dbl_eg_aheap.h	132;"	d
dbl_EGaHeapIsFull	TEmplate/dbl_eg_aheap.h	119;"	d
dbl_EGaHeapReset	TEmplate/dbl_eg_aheap.h	139;"	d
dbl_EGaHeapResize	TEmplate/dbl_eg_aheap.h	175;"	d
dbl_EGaHeap_t	TEmplate/dbl_eg_aheap.h	/^dbl_EGaHeap_t;$/;"	t	typeref:struct:__anon9
dbl_EGalgDJK	TEmplate/dbl_eg_dijkstra.c	/^int dbl_EGalgDJK ($/;"	f
dbl_EGalgMC	TEmplate/dbl_eg_min_cut.c	/^int dbl_EGalgMC (dbl_EGalgMCgraph_t * const G,$/;"	f
dbl_EGalgMCbuildPRgraph	TEmplate/dbl_eg_min_cut.c	/^static inline int dbl_EGalgMCbuildPRgraph (dbl_EGalgMCgraph_t * const mcG,$/;"	f	file:
dbl_EGalgMCcbkClear	TEmplate/dbl_eg_min_cut.h	132;"	d
dbl_EGalgMCcbkInit	TEmplate/dbl_eg_min_cut.h	122;"	d
dbl_EGalgMCcbk_t	TEmplate/dbl_eg_min_cut.h	/^dbl_EGalgMCcbk_t;$/;"	t	typeref:struct:dbl_EGalgMCcbk_t
dbl_EGalgMCcbk_t	TEmplate/dbl_eg_min_cut.h	/^typedef struct dbl_EGalgMCcbk_t$/;"	s
dbl_EGalgMCcomputeT	TEmplate/dbl_eg_min_cut.c	/^static inline int dbl_EGalgMCcomputeT (dbl_EGalgPRgraph_t * const prG,$/;"	f	file:
dbl_EGalgMCdo_f	TEmplate/dbl_eg_min_cut.h	/^typedef int (*dbl_EGalgMCdo_f) (double,$/;"	t
dbl_EGalgMCedgeClear	TEmplate/dbl_eg_min_cut.h	186;"	d
dbl_EGalgMCedgeInit	TEmplate/dbl_eg_min_cut.h	177;"	d
dbl_EGalgMCedge_t	TEmplate/dbl_eg_min_cut.h	/^dbl_EGalgMCedge_t;$/;"	t	typeref:struct:dbl_EGalgMCedge_t
dbl_EGalgMCedge_t	TEmplate/dbl_eg_min_cut.h	/^typedef struct dbl_EGalgMCedge_t$/;"	s
dbl_EGalgMCexpandNode	TEmplate/dbl_eg_min_cut.c	/^static inline int dbl_EGalgMCexpandNode (unsigned int *const cut,$/;"	f	file:
dbl_EGalgMCgraphClear	TEmplate/dbl_eg_min_cut.h	246;"	d
dbl_EGalgMCgraphInit	TEmplate/dbl_eg_min_cut.h	225;"	d
dbl_EGalgMCgraph_t	TEmplate/dbl_eg_min_cut.h	/^dbl_EGalgMCgraph_t;$/;"	t	typeref:struct:dbl_EGalgMCgraph_t
dbl_EGalgMCgraph_t	TEmplate/dbl_eg_min_cut.h	/^typedef struct dbl_EGalgMCgraph_t$/;"	s
dbl_EGalgMCidentifyNodes	TEmplate/dbl_eg_min_cut.h	256;"	d
dbl_EGalgMCidentifyPRedges	TEmplate/dbl_eg_min_cut.c	/^int dbl_EGalgMCidentifyPRedges (dbl_EGalgMCgraph_t * const G,$/;"	f
dbl_EGalgMCnodeClear	TEmplate/dbl_eg_min_cut.h	163;"	d
dbl_EGalgMCnodeInit	TEmplate/dbl_eg_min_cut.h	150;"	d
dbl_EGalgMCnode_t	TEmplate/dbl_eg_min_cut.h	/^dbl_EGalgMCnode_t;$/;"	t	typeref:struct:dbl_EGalgMCnode_t
dbl_EGalgMCnode_t	TEmplate/dbl_eg_min_cut.h	/^typedef struct dbl_EGalgMCnode_t$/;"	s
dbl_EGalgMCprofile	TEmplate/dbl_eg_min_cut.c	/^void dbl_EGalgMCprofile(void)$/;"	f
dbl_EGalgMCtestNode	TEmplate/dbl_eg_min_cut.c	/^static inline int dbl_EGalgMCtestNode (dbl_EGalgMCgraph_t * const G,$/;"	f	file:
dbl_EGalgPRcomputeLabels	TEmplate/dbl_eg_push_relabel.c	/^static inline int dbl_EGalgPRcomputeLabels (dbl_EGalgPRgraph_t * const G,$/;"	f	file:
dbl_EGalgPRedgeClear	TEmplate/dbl_eg_push_relabel.h	236;"	d
dbl_EGalgPRedgeInit	TEmplate/dbl_eg_push_relabel.h	208;"	d
dbl_EGalgPRedgeReset	TEmplate/dbl_eg_push_relabel.h	225;"	d
dbl_EGalgPRedge_t	TEmplate/dbl_eg_push_relabel.h	/^dbl_EGalgPRedge_t;$/;"	t	typeref:struct:dbl_EGalgPRedge_t
dbl_EGalgPRedge_t	TEmplate/dbl_eg_push_relabel.h	/^typedef struct dbl_EGalgPRedge_t$/;"	s
dbl_EGalgPRglobalRelabel	TEmplate/dbl_eg_push_relabel.c	/^static inline int dbl_EGalgPRglobalRelabel (dbl_EGalgPRgraph_t * const G,$/;"	f	file:
dbl_EGalgPRgraphClear	TEmplate/dbl_eg_push_relabel.h	269;"	d
dbl_EGalgPRgraphInit	TEmplate/dbl_eg_push_relabel.h	256;"	d
dbl_EGalgPRgraphReset	TEmplate/dbl_eg_push_relabel.h	264;"	d
dbl_EGalgPRgraph_t	TEmplate/dbl_eg_push_relabel.h	/^dbl_EGalgPRgraph_t;$/;"	t	typeref:struct:dbl_EGalgPRgraph_t
dbl_EGalgPRgraph_t	TEmplate/dbl_eg_push_relabel.h	/^typedef struct dbl_EGalgPRgraph_t$/;"	s
dbl_EGalgPRmaxSTflow	TEmplate/dbl_eg_push_relabel.c	/^int dbl_EGalgPRmaxSTflow (dbl_EGalgPRgraph_t * const G,$/;"	f
dbl_EGalgPRminSTcut	TEmplate/dbl_eg_push_relabel.c	/^int dbl_EGalgPRminSTcut (dbl_EGalgPRgraph_t * const G,$/;"	f
dbl_EGalgPRnodeClear	TEmplate/dbl_eg_push_relabel.h	169;"	d
dbl_EGalgPRnodeInit	TEmplate/dbl_eg_push_relabel.h	153;"	d
dbl_EGalgPRnodeReset	TEmplate/dbl_eg_push_relabel.h	164;"	d
dbl_EGalgPRnode_t	TEmplate/dbl_eg_push_relabel.h	/^dbl_EGalgPRnode_t;$/;"	t	typeref:struct:dbl_EGalgPRnode_t
dbl_EGalgPRnode_t	TEmplate/dbl_eg_push_relabel.h	/^typedef struct dbl_EGalgPRnode_t$/;"	s
dbl_EGalgPRnumb	TEmplate/dbl_eg_push_relabel.c	/^static inline int dbl_EGalgPRnumb (const unsigned int hole,$/;"	f	file:
dbl_EGalgPRoptimalityTest	TEmplate/dbl_eg_push_relabel.c	/^int dbl_EGalgPRoptimalityTest (dbl_EGalgPRgraph_t * const G,$/;"	f
dbl_EGalgPRpreprocess	TEmplate/dbl_eg_push_relabel.c	/^static inline int dbl_EGalgPRpreprocess (dbl_EGalgPRgraph_t * const G,$/;"	f	file:
dbl_EGalgPRprofile	TEmplate/dbl_eg_push_relabel.c	/^void dbl_EGalgPRprofile(void)$/;"	f
dbl_EGalgPRpush	TEmplate/dbl_eg_push_relabel.c	/^static inline int dbl_EGalgPRpush (dbl_EGalgPRse_t * const edge_pt,$/;"	f	file:
dbl_EGalgPRpushRelabel	TEmplate/dbl_eg_push_relabel.c	/^static int dbl_EGalgPRpushRelabel (dbl_EGalgPRnode_t * const node_pt,$/;"	f	file:
dbl_EGalgPRse_t	TEmplate/dbl_eg_push_relabel.h	/^dbl_EGalgPRse_t;$/;"	t	typeref:struct:dbl_EGalgPRse_t
dbl_EGalgPRse_t	TEmplate/dbl_eg_push_relabel.h	/^typedef struct dbl_EGalgPRse_t$/;"	s
dbl_EGdBsRed	TEmplate/dbl_eg_dbasis_red.c	/^int dbl_EGdBsRed (dbl_EGdBsRed_t * const bsred,$/;"	f
dbl_EGdBsRedAddElement	TEmplate/dbl_eg_dbasis_red.h	159;"	d
dbl_EGdBsRedBuildGM	TEmplate/dbl_eg_dbasis_red.c	/^static void dbl_EGdBsRedBuildGM (dbl_EGdMatrix_t * const GM,$/;"	f	file:
dbl_EGdBsRedClear	TEmplate/dbl_eg_dbasis_red.h	133;"	d
dbl_EGdBsRedInit	TEmplate/dbl_eg_dbasis_red.h	124;"	d
dbl_EGdBsRedProfile	TEmplate/dbl_eg_dbasis_red.h	83;"	d
dbl_EGdBsRedReset	TEmplate/dbl_eg_dbasis_red.h	144;"	d
dbl_EGdBsRedSetLength	TEmplate/dbl_eg_dbasis_red.h	152;"	d
dbl_EGdBsRedStats	TEmplate/dbl_eg_dbasis_red.c	/^uintmax_t dbl_EGdBsRedStats[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
dbl_EGdBsRed_t	TEmplate/dbl_eg_dbasis_red.h	/^dbl_EGdBsRed_t;$/;"	t	typeref:struct:dbl_EGdBsRed_t
dbl_EGdBsRed_t	TEmplate/dbl_eg_dbasis_red.h	/^typedef struct dbl_EGdBsRed_t$/;"	s
dbl_EGdMatrixAddColMultiple	TEmplate/dbl_eg_dmatrix.h	238;"	d
dbl_EGdMatrixAddRowMultiple	TEmplate/dbl_eg_dmatrix.h	165;"	d
dbl_EGdMatrixClear	TEmplate/dbl_eg_dmatrix.h	82;"	d
dbl_EGdMatrixDisplay	TEmplate/dbl_eg_dmatrix.h	124;"	d
dbl_EGdMatrixGaussianElimination	TEmplate/dbl_eg_dmatrix.c	/^int dbl_EGdMatrixGaussianElimination (dbl_EGdMatrix_t * const dmatrix,$/;"	f
dbl_EGdMatrixInit	TEmplate/dbl_eg_dmatrix.h	74;"	d
dbl_EGdMatrixMultiplyCol	TEmplate/dbl_eg_dmatrix.h	287;"	d
dbl_EGdMatrixMultiplyRow	TEmplate/dbl_eg_dmatrix.h	213;"	d
dbl_EGdMatrixSetDimension	TEmplate/dbl_eg_dmatrix.h	98;"	d
dbl_EGdMatrixSubColMultiple	TEmplate/dbl_eg_dmatrix.h	266;"	d
dbl_EGdMatrixSubRowMultiple	TEmplate/dbl_eg_dmatrix.h	193;"	d
dbl_EGdMatrix_t	TEmplate/dbl_eg_dmatrix.h	/^dbl_EGdMatrix_t;$/;"	t	typeref:struct:dbl_EGdMatrix_t
dbl_EGdMatrix_t	TEmplate/dbl_eg_dmatrix.h	/^typedef struct dbl_EGdMatrix_t$/;"	s
dbl_EGeHeapAdd	TEmplate/dbl_eg_eheap.h	233;"	d
dbl_EGeHeapCHECK_CN	TEmplate/dbl_eg_eheap.h	73;"	d
dbl_EGeHeapCHECK_CN	TEmplate/dbl_eg_eheap.h	76;"	d
dbl_EGeHeapCHECK_NF	TEmplate/dbl_eg_eheap.h	74;"	d
dbl_EGeHeapCHECK_NF	TEmplate/dbl_eg_eheap.h	77;"	d
dbl_EGeHeapChangeD	TEmplate/dbl_eg_eheap.h	353;"	d
dbl_EGeHeapChangeVal	TEmplate/dbl_eg_eheap.h	298;"	d
dbl_EGeHeapCheck	TEmplate/dbl_eg_eheap.h	327;"	d
dbl_EGeHeapCheck	TEmplate/dbl_eg_eheap.h	343;"	d
dbl_EGeHeapClear	TEmplate/dbl_eg_eheap.h	159;"	d
dbl_EGeHeapCnClear	TEmplate/dbl_eg_eheap.h	116;"	d
dbl_EGeHeapCnInit	TEmplate/dbl_eg_eheap.h	102;"	d
dbl_EGeHeapCnReset	TEmplate/dbl_eg_eheap.h	109;"	d
dbl_EGeHeapCn_t	TEmplate/dbl_eg_eheap.h	/^dbl_EGeHeapCn_t;$/;"	t	typeref:struct:__anon10
dbl_EGeHeapDel	TEmplate/dbl_eg_eheap.h	308;"	d
dbl_EGeHeapEmpty	TEmplate/dbl_eg_eheap.h	139;"	d
dbl_EGeHeapFatherId	TEmplate/dbl_eg_eheap.h	199;"	d
dbl_EGeHeapFirstChildId	TEmplate/dbl_eg_eheap.h	246;"	d
dbl_EGeHeapGetMin	TEmplate/dbl_eg_eheap.h	177;"	d
dbl_EGeHeapGetMinVal	TEmplate/dbl_eg_eheap.h	167;"	d
dbl_EGeHeapInit	TEmplate/dbl_eg_eheap.h	145;"	d
dbl_EGeHeapIsFull	TEmplate/dbl_eg_eheap.h	133;"	d
dbl_EGeHeapResize	TEmplate/dbl_eg_eheap.h	188;"	d
dbl_EGeHeapSiftDown	TEmplate/dbl_eg_eheap.h	256;"	d
dbl_EGeHeapSiftUp	TEmplate/dbl_eg_eheap.h	207;"	d
dbl_EGeHeap_t	TEmplate/dbl_eg_eheap.h	/^dbl_EGeHeap_t;$/;"	t	typeref:struct:__anon11
dbl_EGeHepReset	TEmplate/dbl_eg_eheap.h	152;"	d
dbl_EGeKHeapAdd	TEmplate/dbl_eg_ekheap.h	285;"	d
dbl_EGeKHeapCHECK_CN	TEmplate/dbl_eg_ekheap.h	67;"	d
dbl_EGeKHeapCHECK_CN	TEmplate/dbl_eg_ekheap.h	70;"	d
dbl_EGeKHeapCHECK_NF	TEmplate/dbl_eg_ekheap.h	68;"	d
dbl_EGeKHeapCHECK_NF	TEmplate/dbl_eg_ekheap.h	71;"	d
dbl_EGeKHeapChangeD	TEmplate/dbl_eg_ekheap.h	408;"	d
dbl_EGeKHeapChangeVal	TEmplate/dbl_eg_ekheap.h	351;"	d
dbl_EGeKHeapCheck	TEmplate/dbl_eg_ekheap.h	381;"	d
dbl_EGeKHeapCheck	TEmplate/dbl_eg_ekheap.h	398;"	d
dbl_EGeKHeapClear	TEmplate/dbl_eg_ekheap.h	166;"	d
dbl_EGeKHeapCnClear	TEmplate/dbl_eg_ekheap.h	120;"	d
dbl_EGeKHeapCnInit	TEmplate/dbl_eg_ekheap.h	101;"	d
dbl_EGeKHeapCnReset	TEmplate/dbl_eg_ekheap.h	113;"	d
dbl_EGeKHeapCn_t	TEmplate/dbl_eg_ekheap.h	/^dbl_EGeKHeapCn_t;$/;"	t	typeref:struct:__anon12
dbl_EGeKHeapCopyVal	TEmplate/dbl_eg_ekheap.c	/^void dbl_EGeKHeapCopyVal(double*const dst, const double*const src)$/;"	f
dbl_EGeKHeapDel	TEmplate/dbl_eg_ekheap.h	362;"	d
dbl_EGeKHeapEmpty	TEmplate/dbl_eg_ekheap.h	146;"	d
dbl_EGeKHeapFatherId	TEmplate/dbl_eg_ekheap.h	223;"	d
dbl_EGeKHeapFirstChildId	TEmplate/dbl_eg_ekheap.h	298;"	d
dbl_EGeKHeapGetMin	TEmplate/dbl_eg_ekheap.h	201;"	d
dbl_EGeKHeapGetMinKVal	TEmplate/dbl_eg_ekheap.h	188;"	d
dbl_EGeKHeapGetMinVal	TEmplate/dbl_eg_ekheap.h	177;"	d
dbl_EGeKHeapInit	TEmplate/dbl_eg_ekheap.h	152;"	d
dbl_EGeKHeapIsFull	TEmplate/dbl_eg_ekheap.h	140;"	d
dbl_EGeKHeapIsLess	TEmplate/dbl_eg_ekheap.h	231;"	d
dbl_EGeKHeapResize	TEmplate/dbl_eg_ekheap.h	212;"	d
dbl_EGeKHeapSiftDown	TEmplate/dbl_eg_ekheap.h	308;"	d
dbl_EGeKHeapSiftUp	TEmplate/dbl_eg_ekheap.h	259;"	d
dbl_EGeKHeap_t	TEmplate/dbl_eg_ekheap.h	/^dbl_EGeKHeap_t;$/;"	t	typeref:struct:__anon13
dbl_EGeKHepReset	TEmplate/dbl_eg_ekheap.h	159;"	d
dbl_EGguReadXgraph	TEmplate/dbl_eg_dijkstra.c	/^int dbl_EGguReadXgraph($/;"	f
dbl_EGlpNumAddInnProdTo	src/eg_lpnum.dbl.h	352;"	d
dbl_EGlpNumAddTo	src/eg_lpnum.dbl.h	382;"	d
dbl_EGlpNumAddUiTo	src/eg_lpnum.dbl.h	372;"	d
dbl_EGlpNumAllocArray	src/eg_lpnum.dbl.h	80;"	d
dbl_EGlpNumCeil	src/eg_lpnum.dbl.h	99;"	d
dbl_EGlpNumClearVar	src/eg_lpnum.dbl.h	478;"	d
dbl_EGlpNumCopy	src/eg_lpnum.dbl.h	256;"	d
dbl_EGlpNumCopyAbs	src/eg_lpnum.dbl.h	292;"	d
dbl_EGlpNumCopyArray	src/eg_lpnum.dbl.h	330;"	d
dbl_EGlpNumCopyDiff	src/eg_lpnum.dbl.h	238;"	d
dbl_EGlpNumCopyDiffRatio	src/eg_lpnum.dbl.h	229;"	d
dbl_EGlpNumCopyFrac	src/eg_lpnum.dbl.h	314;"	d
dbl_EGlpNumCopyNeg	src/eg_lpnum.dbl.h	304;"	d
dbl_EGlpNumCopySqrOver	src/eg_lpnum.dbl.h	280;"	d
dbl_EGlpNumCopySum	src/eg_lpnum.dbl.h	247;"	d
dbl_EGlpNumDivTo	src/eg_lpnum.dbl.h	415;"	d
dbl_EGlpNumDivUiTo	src/eg_lpnum.dbl.h	426;"	d
dbl_EGlpNumFloor	src/eg_lpnum.dbl.h	104;"	d
dbl_EGlpNumFreeArray	src/eg_lpnum.dbl.h	57;"	d
dbl_EGlpNumGetStr	src/eg_lpnum.dbl.h	47;"	d
dbl_EGlpNumInitVar	src/eg_lpnum.dbl.h	474;"	d
dbl_EGlpNumInnProd	TEmplate/dbl_eg_numutil.h	54;"	d
dbl_EGlpNumInv	src/eg_lpnum.dbl.h	110;"	d
dbl_EGlpNumIsDiffLess	src/eg_lpnum.dbl.h	186;"	d
dbl_EGlpNumIsEqqual	src/eg_lpnum.dbl.h	120;"	d
dbl_EGlpNumIsEqual	src/eg_lpnum.dbl.h	133;"	d
dbl_EGlpNumIsGreaDbl	src/eg_lpnum.dbl.h	208;"	d
dbl_EGlpNumIsGreatZero	src/eg_lpnum.dbl.h	144;"	d
dbl_EGlpNumIsLeq	src/eg_lpnum.dbl.h	219;"	d
dbl_EGlpNumIsLess	src/eg_lpnum.dbl.h	162;"	d
dbl_EGlpNumIsLessDbl	src/eg_lpnum.dbl.h	197;"	d
dbl_EGlpNumIsLessZero	src/eg_lpnum.dbl.h	151;"	d
dbl_EGlpNumIsNeq	src/eg_lpnum.dbl.h	134;"	d
dbl_EGlpNumIsNeqZero	src/eg_lpnum.dbl.h	136;"	d
dbl_EGlpNumIsNeqq	src/eg_lpnum.dbl.h	135;"	d
dbl_EGlpNumIsNeqqZero	src/eg_lpnum.dbl.h	137;"	d
dbl_EGlpNumIsSumLess	src/eg_lpnum.dbl.h	174;"	d
dbl_EGlpNumMultTo	src/eg_lpnum.dbl.h	404;"	d
dbl_EGlpNumMultUiTo	src/eg_lpnum.dbl.h	437;"	d
dbl_EGlpNumOne	src/eg_lpnum.dbl.h	453;"	d
dbl_EGlpNumReadStr	src/eg_lpnum.dbl.h	39;"	d
dbl_EGlpNumReallocArray	src/eg_lpnum.dbl.h	62;"	d
dbl_EGlpNumSet	src/eg_lpnum.dbl.h	94;"	d
dbl_EGlpNumSetToMaxAbs	src/eg_lpnum.dbl.h	266;"	d
dbl_EGlpNumSetToMinAbs	src/eg_lpnum.dbl.h	268;"	d
dbl_EGlpNumSign	src/eg_lpnum.dbl.h	461;"	d
dbl_EGlpNumSubInnProdTo	src/eg_lpnum.dbl.h	341;"	d
dbl_EGlpNumSubTo	src/eg_lpnum.dbl.h	393;"	d
dbl_EGlpNumSubUiTo	src/eg_lpnum.dbl.h	362;"	d
dbl_EGlpNumToLf	src/eg_lpnum.dbl.h	470;"	d
dbl_EGlpNumZero	src/eg_lpnum.dbl.h	445;"	d
dbl_EGsrkAddEdge	TEmplate/dbl_eg_shrink_graph.h	177;"	d
dbl_EGsrkAddNode	TEmplate/dbl_eg_shrink_graph.h	165;"	d
dbl_EGsrkEdgeClear	TEmplate/dbl_eg_shrink_graph.h	120;"	d
dbl_EGsrkEdgeInit	TEmplate/dbl_eg_shrink_graph.h	108;"	d
dbl_EGsrkEdge_t	TEmplate/dbl_eg_shrink_graph.h	/^dbl_EGsrkEdge_t;$/;"	t	typeref:struct:dbl_EGsrkEdge_t
dbl_EGsrkEdge_t	TEmplate/dbl_eg_shrink_graph.h	/^typedef struct dbl_EGsrkEdge_t$/;"	s
dbl_EGsrkGraphClear	TEmplate/dbl_eg_shrink_graph.h	136;"	d
dbl_EGsrkGraphInit	TEmplate/dbl_eg_shrink_graph.h	127;"	d
dbl_EGsrkGraph_t	TEmplate/dbl_eg_shrink_graph.h	/^dbl_EGsrkGraph_t;$/;"	t	typeref:struct:dbl_EGsrkGraph_t
dbl_EGsrkGraph_t	TEmplate/dbl_eg_shrink_graph.h	/^typedef struct dbl_EGsrkGraph_t$/;"	s
dbl_EGsrkIdentifyNodes	TEmplate/dbl_eg_shrink_graph.c	/^dbl_EGsrkNode_t *dbl_EGsrkIdentifyNodes (dbl_EGsrkGraph_t * const G,$/;"	f
dbl_EGsrkNodeClear	TEmplate/dbl_eg_shrink_graph.h	155;"	d
dbl_EGsrkNodeInit	TEmplate/dbl_eg_shrink_graph.h	141;"	d
dbl_EGsrkNode_t	TEmplate/dbl_eg_shrink_graph.h	/^dbl_EGsrkNode_t;$/;"	t	typeref:struct:dbl_EGsrkNode_t
dbl_EGsrkNode_t	TEmplate/dbl_eg_shrink_graph.h	/^typedef struct dbl_EGsrkNode_t$/;"	s
dbl_EGutilPermSort	TEmplate/dbl_eg_numutil.c	/^void dbl_EGutilPermSort (const size_t sz,$/;"	f
dbl_EGutilPermSort2	TEmplate/dbl_eg_numutil.c	/^void dbl_EGutilPermSort2 (const size_t sz,$/;"	f
dbl_HILBERT_TABLE_SIZE	TEmplate/dbl_eg_dmatrix.ex.c	45;"	d	file:
dbl_MaxLpNum	src/eg_lpnum.dbl.h	33;"	d
dbl_MinLpNum	src/eg_lpnum.dbl.h	34;"	d
dbl_UPDATE	TEmplate/dbl_eg_min_cut.c	50;"	d	file:
dbl_UPDATE	TEmplate/dbl_eg_min_cut.c	52;"	d	file:
dbl_UPDATE	TEmplate/dbl_eg_push_relabel.c	51;"	d	file:
dbl_UPDATE	TEmplate/dbl_eg_push_relabel.c	53;"	d	file:
dbl__EG_MIN_CUT_H	TEmplate/dbl_eg_min_cut.h	62;"	d
dbl__EGalgMChitNeighbours	TEmplate/dbl_eg_min_cut.c	135;"	d	file:
dbl__EGalgMCunhitNeighbours	TEmplate/dbl_eg_min_cut.c	154;"	d	file:
dbl__EGshrinkGraph_h__	TEmplate/dbl_eg_shrink_graph.h	48;"	d
dbl___EG_ABHEAP__	TEmplate/dbl_eg_abheap.h	46;"	d
dbl___EG_ABKHEAP__	TEmplate/dbl_eg_abkheap.h	46;"	d
dbl___EG_AHEAP__	TEmplate/dbl_eg_aheap.h	45;"	d
dbl___EG_DBASIS_REDUCTION__	TEmplate/dbl_eg_dbasis_red.h	21;"	d
dbl___EG_DIJKSTRA_H	TEmplate/dbl_eg_dijkstra.h	31;"	d
dbl___EG_DMATRIX_H__	TEmplate/dbl_eg_dmatrix.h	21;"	d
dbl___EG_EHEAP__	TEmplate/dbl_eg_eheap.h	59;"	d
dbl___EG_EKHEAP__	TEmplate/dbl_eg_ekheap.h	53;"	d
dbl___EG_NUMUTIL_H__	TEmplate/dbl_eg_numutil.h	21;"	d
dbl___EG_PUSH_RELABEL_H__	TEmplate/dbl_eg_push_relabel.h	76;"	d
dbl___EGaBKheapSiftDown	TEmplate/dbl_eg_abkheap.h	266;"	d
dbl___EGaBKheapSiftUp	TEmplate/dbl_eg_abkheap.h	211;"	d
dbl___EGaBheapSiftDown	TEmplate/dbl_eg_abheap.h	241;"	d
dbl___EGaBheapSiftUp	TEmplate/dbl_eg_abheap.h	186;"	d
dbl___EGaHeapSiftDown	TEmplate/dbl_eg_aheap.h	253;"	d
dbl___EGaHeapSiftUp	TEmplate/dbl_eg_aheap.h	198;"	d
dbl___EGlpNumInnProd	TEmplate/dbl_eg_numutil.c	/^void dbl___EGlpNumInnProd(double*rop,$/;"	f
dbl___MC_DEBUG_	TEmplate/dbl_eg_min_cut.h	78;"	d
dbl___MC_PROFILE_	TEmplate/dbl_eg_min_cut.h	82;"	d
dbl___MC_VRBLVL_	TEmplate/dbl_eg_min_cut.h	74;"	d
dbl___MC_profile_lvl	TEmplate/dbl_eg_min_cut.c	/^static unsigned long long dbl___MC_profile_lvl[5] = { 0, 0, 0, 0, 0 };$/;"	v	file:
dbl___MC_profile_tn	TEmplate/dbl_eg_min_cut.c	/^static unsigned long long dbl___MC_profile_tn = 0;\/**<Number of calls to #dbl_EGalgMCtestNode*\/$/;"	v	file:
dbl___MC_profile_up	TEmplate/dbl_eg_min_cut.c	/^static unsigned long long dbl___MC_profile_up = 0;\/**< Number of improving cuts found *\/$/;"	v	file:
dbl___PR_DEBUGL__	TEmplate/dbl_eg_push_relabel.h	86;"	d
dbl___PR_PROFILE__	TEmplate/dbl_eg_push_relabel.h	98;"	d
dbl___PR_TEST_VERBOSE__	TEmplate/dbl_eg_push_relabel.h	90;"	d
dbl___PR_VERBOSE__	TEmplate/dbl_eg_push_relabel.h	94;"	d
dbl___PR_profile_lvel	TEmplate/dbl_eg_push_relabel.c	/^static unsigned long long dbl___PR_profile_lvel = 0;$/;"	v	file:
dbl___PR_profile_move	TEmplate/dbl_eg_push_relabel.c	/^static unsigned long long dbl___PR_profile_move = 0;$/;"	v	file:
dbl___PR_profile_numb	TEmplate/dbl_eg_push_relabel.c	/^static unsigned long long dbl___PR_profile_numb = 0;$/;"	v	file:
dbl___PR_profile_push	TEmplate/dbl_eg_push_relabel.c	/^static unsigned long long dbl___PR_profile_push = 0;$/;"	v	file:
dbl___PR_profile_rela	TEmplate/dbl_eg_push_relabel.c	/^static unsigned long long dbl___PR_profile_rela = 0;$/;"	v	file:
dbl___last_global	TEmplate/dbl_eg_push_relabel.c	/^static unsigned long long dbl___last_global = 0;$/;"	v	file:
dbl_aheap_parseargs	TEmplate/dbl_eg_abheap.ex.c	/^int dbl_aheap_parseargs (int argc,$/;"	f
dbl_aheap_parseargs	TEmplate/dbl_eg_abkheap.ex.c	/^int dbl_aheap_parseargs (int argc,$/;"	f
dbl_aheap_parseargs	TEmplate/dbl_eg_aheap.ex.c	/^int dbl_aheap_parseargs (int argc,$/;"	f
dbl_aheap_usage	TEmplate/dbl_eg_abheap.ex.c	/^void dbl_aheap_usage (char *program)$/;"	f
dbl_aheap_usage	TEmplate/dbl_eg_abkheap.ex.c	/^void dbl_aheap_usage (char *program)$/;"	f
dbl_aheap_usage	TEmplate/dbl_eg_aheap.ex.c	/^void dbl_aheap_usage (char *program)$/;"	f
dbl_display_srkG	TEmplate/dbl_eg_shrink_graph.ex.c	/^static inline void dbl_display_srkG (dbl_EGsrkGraph_t * G,$/;"	f	file:
dbl_djk_parseargs	TEmplate/dbl_eg_dijkstra.ex.c	/^static inline void dbl_djk_parseargs(int argc,char**argv)$/;"	f	file:
dbl_djk_usage	TEmplate/dbl_eg_dijkstra.ex.c	/^static inline void dbl_djk_usage(const char*const progname)$/;"	f	file:
dbl_dmatrix_hilbert_eigenvalues	TEmplate/dbl_eg_dmatrix.ex.c	/^static unsigned dbl_dmatrix_hilbert_eigenvalues[dbl_HILBERT_TABLE_SIZE] = {$/;"	v	file:
dbl_dmatrix_parseargs	TEmplate/dbl_eg_dmatrix.ex.c	/^int dbl_dmatrix_parseargs (int argc,$/;"	f
dbl_dmatrix_usage	TEmplate/dbl_eg_dmatrix.ex.c	/^void dbl_dmatrix_usage (char *program)$/;"	f
dbl_eheap_parseargs	TEmplate/dbl_eg_eheap.ex.c	/^int dbl_eheap_parseargs (int argc,$/;"	f
dbl_eheap_usage	TEmplate/dbl_eg_eheap.ex.c	/^void dbl_eheap_usage (char *program)$/;"	f
dbl_ekheap_parseargs	TEmplate/dbl_eg_ekheap.ex.c	/^int dbl_ekheap_parseargs (int argc,$/;"	f
dbl_ekheap_usage	TEmplate/dbl_eg_ekheap.ex.c	/^void dbl_ekheap_usage (char *program)$/;"	f
dbl_epsLpNum	src/eg_lpnum.dbl.h	32;"	d
dbl_file_name	TEmplate/dbl_eg_min_cut.ex.c	/^static char *dbl_file_name = 0;$/;"	v	file:
dbl_fname	TEmplate/dbl_eg_dijkstra.ex.c	/^static char dbl_fname[1024];$/;"	v	file:
dbl_lvl	TEmplate/dbl_eg_min_cut.ex.c	/^static unsigned int dbl_lvl = 5;$/;"	v	file:
dbl_lvl	TEmplate/dbl_eg_min_cut.h	/^	unsigned int dbl_lvl;		\/**< Current node level test to be performed *\/$/;"	m	struct:dbl_EGalgMCnode_t
dbl_mc_all_cuts_t	TEmplate/dbl_eg_min_cut.ex.c	/^dbl_mc_all_cuts_t;$/;"	t	typeref:struct:dbl_mc_all_cuts_t	file:
dbl_mc_all_cuts_t	TEmplate/dbl_eg_min_cut.ex.c	/^typedef struct dbl_mc_all_cuts_t$/;"	s	file:
dbl_mc_parseargs	TEmplate/dbl_eg_min_cut.ex.c	/^static inline int dbl_mc_parseargs (int argc,$/;"	f	file:
dbl_mc_store_cuts	TEmplate/dbl_eg_min_cut.ex.c	/^int dbl_mc_store_cuts (double value,$/;"	f
dbl_mc_usage	TEmplate/dbl_eg_min_cut.ex.c	/^static void dbl_mc_usage (char **argv)$/;"	f	file:
dbl_my_constr	TEmplate/dbl_eg_memslab.ex.c	/^static void dbl_my_constr (void *ptr)$/;"	f	file:
dbl_my_dest	TEmplate/dbl_eg_memslab.ex.c	/^static void dbl_my_dest (void *ptr)$/;"	f	file:
dbl_oneLpNum	src/eg_lpnum.dbl.h	31;"	d
dbl_pr_usage	TEmplate/dbl_eg_push_relabel.ex.c	/^static inline void dbl_pr_usage (char **argv)$/;"	f	file:
dbl_source	TEmplate/dbl_eg_dijkstra.ex.c	/^static int32_t dbl_source=0;$/;"	v	file:
dbl_srk_usage	TEmplate/dbl_eg_shrink_graph.ex.c	/^static inline void dbl_srk_usage (char **argv)$/;"	f	file:
dbl_verbose	TEmplate/dbl_eg_dijkstra.ex.c	/^static int dbl_verbose=1;$/;"	v	file:
dbl_zeroLpNum	src/eg_lpnum.dbl.h	30;"	d
deg	src/eg_augraph.h	/^	uint32_t deg;	\/**< @brief degree of the node *\/$/;"	m	struct:__anon1
degree	src/eg_eugraph.h	/^	unsigned degree;		\/**< Degree for the node, note that a loop edge is counted$/;"	m	struct:EGeUgraphNode_t
demand	src/eg_slk.h	/^	int *demand;		\/**< Demand on each node *\/$/;"	m	struct:EGslkData_t
depot	src/eg_slk.h	/^	int depot;			\/**< Depot for the problem *\/$/;"	m	struct:EGslkData_t
depth	src/eg_octree.h	/^	uint16_t depth:4; \/** @brief depth of the node (0-15) 0 means a leaf *\/$/;"	m	struct:EGeOctdata_st
dest	src/eg_memslab.h	/^	EGdestructor_f dest;		\/**< Destructor for the local elements *\/$/;"	m	struct:EGmemSlabPool_t
dim	TEmplate/dbl_eg_dbasis_red.h	/^	size_t dim;				\/**< @brief Number of elements in the basis *\/$/;"	m	struct:dbl_EGdBsRed_t
dim	TEmplate/fp20_eg_dbasis_red.h	/^	size_t dim;				\/**< @brief Number of elements in the basis *\/$/;"	m	struct:fp20_EGdBsRed_t
dim	TEmplate/int32_eg_dbasis_red.h	/^	size_t dim;				\/**< @brief Number of elements in the basis *\/$/;"	m	struct:int32_EGdBsRed_t
dim	TEmplate/int_eg_dbasis_red.h	/^	size_t dim;				\/**< @brief Number of elements in the basis *\/$/;"	m	struct:int_EGdBsRed_t
dim	TEmplate/ldbl_eg_dbasis_red.h	/^	size_t dim;				\/**< @brief Number of elements in the basis *\/$/;"	m	struct:ldbl_EGdBsRed_t
dim	TEmplate/mpf_eg_dbasis_red.h	/^	size_t dim;				\/**< @brief Number of elements in the basis *\/$/;"	m	struct:mpf_EGdBsRed_t
dim	TEmplate/mpq_eg_dbasis_red.h	/^	size_t dim;				\/**< @brief Number of elements in the basis *\/$/;"	m	struct:mpq_EGdBsRed_t
dim	src/eg_slk.h	/^	size_t dim; 		\/**< Number of cities in the problem *\/$/;"	m	struct:EGslkData_t
display_ADG	src/eg_adgraph.ex.c	/^static inline void display_ADG (const adgraph_t *const myG)$/;"	f	file:
display_DG	src/eg_edgraph.ex.c	/^static inline void display_DG (my_dgraph_t * myG)$/;"	f	file:
display_UG	src/eg_eugraph.ex.c	/^static inline void display_UG (my_ugraph_t * myG)$/;"	f	file:
do_fn	TEmplate/dbl_eg_min_cut.h	/^	dbl_EGalgMCdo_f do_fn;\/**< actual function to be called if the cut-off condition $/;"	m	struct:dbl_EGalgMCcbk_t
do_fn	TEmplate/fp20_eg_min_cut.h	/^	fp20_EGalgMCdo_f do_fn;\/**< actual function to be called if the cut-off condition $/;"	m	struct:fp20_EGalgMCcbk_t
do_fn	TEmplate/int32_eg_min_cut.h	/^	int32_EGalgMCdo_f do_fn;\/**< actual function to be called if the cut-off condition $/;"	m	struct:int32_EGalgMCcbk_t
do_fn	TEmplate/int_eg_min_cut.h	/^	int_EGalgMCdo_f do_fn;\/**< actual function to be called if the cut-off condition $/;"	m	struct:int_EGalgMCcbk_t
do_fn	TEmplate/ldbl_eg_min_cut.h	/^	ldbl_EGalgMCdo_f do_fn;\/**< actual function to be called if the cut-off condition $/;"	m	struct:ldbl_EGalgMCcbk_t
do_fn	TEmplate/mpf_eg_min_cut.h	/^	mpf_EGalgMCdo_f do_fn;\/**< actual function to be called if the cut-off condition $/;"	m	struct:mpf_EGalgMCcbk_t
do_fn	TEmplate/mpq_eg_min_cut.h	/^	mpq_EGalgMCdo_f do_fn;\/**< actual function to be called if the cut-off condition $/;"	m	struct:mpq_EGalgMCcbk_t
e	TEmplate/dbl_eg_push_relabel.h	/^	EGeDgraphEdge_t e;	\/**< actual edge information. *\/$/;"	m	struct:dbl_EGalgPRse_t
e	TEmplate/dbl_eg_push_relabel.h	/^	double e;					\/**< Exess flow in the node. Note that in particular $/;"	m	struct:dbl_EGalgPRnode_t
e	TEmplate/fp20_eg_push_relabel.h	/^	EGeDgraphEdge_t e;	\/**< actual edge information. *\/$/;"	m	struct:fp20_EGalgPRse_t
e	TEmplate/fp20_eg_push_relabel.h	/^	EGfp20_t e;					\/**< Exess flow in the node. Note that in particular $/;"	m	struct:fp20_EGalgPRnode_t
e	TEmplate/int32_eg_push_relabel.h	/^	EGeDgraphEdge_t e;	\/**< actual edge information. *\/$/;"	m	struct:int32_EGalgPRse_t
e	TEmplate/int32_eg_push_relabel.h	/^	int32_t e;					\/**< Exess flow in the node. Note that in particular $/;"	m	struct:int32_EGalgPRnode_t
e	TEmplate/int_eg_push_relabel.h	/^	EGeDgraphEdge_t e;	\/**< actual edge information. *\/$/;"	m	struct:int_EGalgPRse_t
e	TEmplate/int_eg_push_relabel.h	/^	int e;					\/**< Exess flow in the node. Note that in particular $/;"	m	struct:int_EGalgPRnode_t
e	TEmplate/ldbl_eg_push_relabel.h	/^	EGeDgraphEdge_t e;	\/**< actual edge information. *\/$/;"	m	struct:ldbl_EGalgPRse_t
e	TEmplate/ldbl_eg_push_relabel.h	/^	long double e;					\/**< Exess flow in the node. Note that in particular $/;"	m	struct:ldbl_EGalgPRnode_t
e	TEmplate/mpf_eg_push_relabel.h	/^	EGeDgraphEdge_t e;	\/**< actual edge information. *\/$/;"	m	struct:mpf_EGalgPRse_t
e	TEmplate/mpf_eg_push_relabel.h	/^	mpf_t e;					\/**< Exess flow in the node. Note that in particular $/;"	m	struct:mpf_EGalgPRnode_t
e	TEmplate/mpq_eg_push_relabel.h	/^	EGeDgraphEdge_t e;	\/**< actual edge information. *\/$/;"	m	struct:mpq_EGalgPRse_t
e	TEmplate/mpq_eg_push_relabel.h	/^	mpq_t e;					\/**< Exess flow in the node. Note that in particular $/;"	m	struct:mpq_EGalgPRnode_t
e	src/eg_adgraph.ex.c	/^	EGaDE_t e;$/;"	m	struct:my_adedge_t	file:
e	src/eg_edgraph.ex.c	/^	EGeDgraphEdge_t e;$/;"	m	struct:my_dedge_t	file:
e	src/eg_eugraph.ex.c	/^	EGeUgraphEdge_t e;$/;"	m	struct:my_uedge_t	file:
ebt_display	src/eg_ebtree.ex.c	/^static int ebt_display (EGioFile_t* out_f,$/;"	f	file:
ebt_parseargs	src/eg_ebtree.ex.c	/^static int ebt_parseargs (int argc,$/;"	f	file:
ebt_usage	src/eg_ebtree.ex.c	/^static void ebt_usage (char const *const program)$/;"	f	file:
edge	TEmplate/dbl_eg_min_cut.h	/^	dbl_EGsrkEdge_t edge;	\/**< Actual shrinkable edge *\/$/;"	m	struct:dbl_EGalgMCedge_t
edge	TEmplate/dbl_eg_shrink_graph.h	/^	EGeUgraphEdge_t edge;	\/**< Actual edge structure for the graph *\/$/;"	m	struct:dbl_EGsrkEdge_t
edge	TEmplate/fp20_eg_min_cut.h	/^	fp20_EGsrkEdge_t edge;	\/**< Actual shrinkable edge *\/$/;"	m	struct:fp20_EGalgMCedge_t
edge	TEmplate/fp20_eg_shrink_graph.h	/^	EGeUgraphEdge_t edge;	\/**< Actual edge structure for the graph *\/$/;"	m	struct:fp20_EGsrkEdge_t
edge	TEmplate/int32_eg_min_cut.h	/^	int32_EGsrkEdge_t edge;	\/**< Actual shrinkable edge *\/$/;"	m	struct:int32_EGalgMCedge_t
edge	TEmplate/int32_eg_shrink_graph.h	/^	EGeUgraphEdge_t edge;	\/**< Actual edge structure for the graph *\/$/;"	m	struct:int32_EGsrkEdge_t
edge	TEmplate/int_eg_min_cut.h	/^	int_EGsrkEdge_t edge;	\/**< Actual shrinkable edge *\/$/;"	m	struct:int_EGalgMCedge_t
edge	TEmplate/int_eg_shrink_graph.h	/^	EGeUgraphEdge_t edge;	\/**< Actual edge structure for the graph *\/$/;"	m	struct:int_EGsrkEdge_t
edge	TEmplate/ldbl_eg_min_cut.h	/^	ldbl_EGsrkEdge_t edge;	\/**< Actual shrinkable edge *\/$/;"	m	struct:ldbl_EGalgMCedge_t
edge	TEmplate/ldbl_eg_shrink_graph.h	/^	EGeUgraphEdge_t edge;	\/**< Actual edge structure for the graph *\/$/;"	m	struct:ldbl_EGsrkEdge_t
edge	TEmplate/mpf_eg_min_cut.h	/^	mpf_EGsrkEdge_t edge;	\/**< Actual shrinkable edge *\/$/;"	m	struct:mpf_EGalgMCedge_t
edge	TEmplate/mpf_eg_shrink_graph.h	/^	EGeUgraphEdge_t edge;	\/**< Actual edge structure for the graph *\/$/;"	m	struct:mpf_EGsrkEdge_t
edge	TEmplate/mpq_eg_min_cut.h	/^	mpq_EGsrkEdge_t edge;	\/**< Actual shrinkable edge *\/$/;"	m	struct:mpq_EGalgMCedge_t
edge	TEmplate/mpq_eg_shrink_graph.h	/^	EGeUgraphEdge_t edge;	\/**< Actual edge structure for the graph *\/$/;"	m	struct:mpq_EGsrkEdge_t
edge	src/eg_simula.h	/^	EGeDgraphEdge_t edge;	\/**< @brief Actual underlying edge *\/$/;"	m	struct:__anon103
edges	src/eg_eugraph.h	/^	EGeList_t edges;		\/**< List of all edges with an endpoint in this node, if $/;"	m	struct:EGeUgraphNode_t
egrm	src/eg_random.c	/^pthread_mutex_t egrm = PTHREAD_MUTEX_INITIALIZER;$/;"	v
elem_sz	src/eg_memslab.h	/^	size_t elem_sz;						\/**< @brief byte-size of each element *\/$/;"	m	struct:__anon101
elem_sz	src/eg_memslab.h	/^	uint16_t elem_sz;				\/**< Size of the elements in the slab, including $/;"	m	struct:EGmemSlabPool_t
empty	src/eg_memslab.h	/^	EGeList_t empty;				\/**< Head of the list for non used slabs *\/$/;"	m	struct:EGmemSlabPool_t
ep	src/eg_eugraph.h	/^	EGeUgraphEP_t ep[2];	\/**< endpoints of the edge, by convention end point $/;"	m	struct:EGeUgraphEdge_t
epsLpNum	src/eg_lpnum.h	290;"	d
epsilon	TEmplate/dbl_eg_min_cut.h	/^	double epsilon;				\/**< error tolerance used for equality testing *\/$/;"	m	struct:dbl_EGalgMCgraph_t
epsilon	TEmplate/fp20_eg_min_cut.h	/^	EGfp20_t epsilon;				\/**< error tolerance used for equality testing *\/$/;"	m	struct:fp20_EGalgMCgraph_t
epsilon	TEmplate/int32_eg_min_cut.h	/^	int32_t epsilon;				\/**< error tolerance used for equality testing *\/$/;"	m	struct:int32_EGalgMCgraph_t
epsilon	TEmplate/int_eg_min_cut.h	/^	int epsilon;				\/**< error tolerance used for equality testing *\/$/;"	m	struct:int_EGalgMCgraph_t
epsilon	TEmplate/ldbl_eg_min_cut.h	/^	long double epsilon;				\/**< error tolerance used for equality testing *\/$/;"	m	struct:ldbl_EGalgMCgraph_t
epsilon	TEmplate/mpf_eg_min_cut.h	/^	mpf_t epsilon;				\/**< error tolerance used for equality testing *\/$/;"	m	struct:mpf_EGalgMCgraph_t
epsilon	TEmplate/mpq_eg_min_cut.h	/^	mpq_t epsilon;				\/**< error tolerance used for equality testing *\/$/;"	m	struct:mpq_EGalgMCgraph_t
ex_id	src/eg_adgraph.ex.c	/^	int ex_id;$/;"	m	struct:my_adedge_t	file:
ex_id	src/eg_adgraph.ex.c	/^	int ex_id;$/;"	m	struct:my_adgraph_t	file:
ex_id	src/eg_adgraph.ex.c	/^	int ex_id;$/;"	m	struct:my_adnode_t	file:
f64dbl_t	src/eg_lpnum.float128.h	/^f64dbl_t;$/;"	t	typeref:union:__anon83
f_fd	src/eg_net.h	/^	int f_fd;						\/**< store the file descriptor used to read\/write, note $/;"	m	struct:__anon85
fact	src/eg_random.c	35;"	d	file:
father	src/eg_eset.h	/^	struct EGes_t *father;\/**> pointer to the representing element on the $/;"	m	struct:EGes_t	typeref:struct:EGes_t::EGes_t
file	src/eg_io.c	/^struct EGioFile_st {int type; void*file;};$/;"	m	struct:EGioFile_st	file:
file	src/eg_memslab.h	/^	char const *file;				\/**< File where the structure was initialized *\/$/;"	m	struct:EGmemSlabPool_t
file_name	src/eg_maxclosure.ex.c	/^static char *file_name = 0;$/;"	v	file:
file_name	src/eg_simula.ex.c	/^char const*file_name = 0; \/**< pointer to the file name to use *\/$/;"	v
file_name	src/eg_simula2.ex.c	/^char const*file_name = 0; \/**< pointer to the file name to use *\/$/;"	v
file_name	src/eg_slk.ex.c	/^char const*file_name = 0; \/**< pointer to the file name to use *\/$/;"	v
file_name	src/eg_symtab.ex.c	/^static char file_name[1024]=""; \/**< @brief where we store input file name *\/$/;"	v	file:
fl	src/eg_lpnum.float128.h	/^	float64 fl;$/;"	m	union:__anon83
float128	SoftFloat/softfloat.h	/^float128;$/;"	t	typeref:struct:__anon96
float128_EGlpNumAddInnProdTo	src/eg_lpnum.float128.h	465;"	d
float128_EGlpNumAddTo	src/eg_lpnum.float128.h	502;"	d
float128_EGlpNumAddUiTo	src/eg_lpnum.float128.h	490;"	d
float128_EGlpNumAllocArray	src/eg_lpnum.float128.h	143;"	d
float128_EGlpNumCeil	src/eg_lpnum.float128.h	164;"	d
float128_EGlpNumClearVar	src/eg_lpnum.float128.h	604;"	d
float128_EGlpNumCopy	src/eg_lpnum.float128.h	354;"	d
float128_EGlpNumCopyAbs	src/eg_lpnum.float128.h	398;"	d
float128_EGlpNumCopyArray	src/eg_lpnum.float128.h	440;"	d
float128_EGlpNumCopyDiff	src/eg_lpnum.float128.h	336;"	d
float128_EGlpNumCopyDiffRatio	src/eg_lpnum.float128.h	324;"	d
float128_EGlpNumCopyFrac	src/eg_lpnum.float128.h	424;"	d
float128_EGlpNumCopyNeg	src/eg_lpnum.float128.h	412;"	d
float128_EGlpNumCopySqrOver	src/eg_lpnum.float128.h	383;"	d
float128_EGlpNumCopySum	src/eg_lpnum.float128.h	345;"	d
float128_EGlpNumDivTo	src/eg_lpnum.float128.h	535;"	d
float128_EGlpNumDivUiTo	src/eg_lpnum.float128.h	546;"	d
float128_EGlpNumEpow	src/eg_lpnum.float128.h	64;"	d
float128_EGlpNumFloor	src/eg_lpnum.float128.h	171;"	d
float128_EGlpNumFreeArray	src/eg_lpnum.float128.h	109;"	d
float128_EGlpNumGetStr	src/eg_lpnum.float128.h	98;"	d
float128_EGlpNumInitVar	src/eg_lpnum.float128.h	600;"	d
float128_EGlpNumInv	src/eg_lpnum.float128.h	179;"	d
float128_EGlpNumIsDiffLess	src/eg_lpnum.float128.h	272;"	d
float128_EGlpNumIsEqqual	src/eg_lpnum.float128.h	189;"	d
float128_EGlpNumIsEqual	src/eg_lpnum.float128.h	202;"	d
float128_EGlpNumIsGreaDbl	src/eg_lpnum.float128.h	300;"	d
float128_EGlpNumIsGreatZero	src/eg_lpnum.float128.h	238;"	d
float128_EGlpNumIsLeq	src/eg_lpnum.float128.h	314;"	d
float128_EGlpNumIsLess	src/eg_lpnum.float128.h	231;"	d
float128_EGlpNumIsLessDbl	src/eg_lpnum.float128.h	286;"	d
float128_EGlpNumIsLessZero	src/eg_lpnum.float128.h	245;"	d
float128_EGlpNumIsNeq	src/eg_lpnum.float128.h	208;"	d
float128_EGlpNumIsNeqZero	src/eg_lpnum.float128.h	213;"	d
float128_EGlpNumIsNeqq	src/eg_lpnum.float128.h	220;"	d
float128_EGlpNumIsNeqqZero	src/eg_lpnum.float128.h	219;"	d
float128_EGlpNumIsSumLess	src/eg_lpnum.float128.h	257;"	d
float128_EGlpNumMultTo	src/eg_lpnum.float128.h	524;"	d
float128_EGlpNumMultUiTo	src/eg_lpnum.float128.h	559;"	d
float128_EGlpNumOne	src/eg_lpnum.float128.h	577;"	d
float128_EGlpNumReadStr	src/eg_lpnum.float128.h	88;"	d
float128_EGlpNumReallocArray	src/eg_lpnum.float128.h	114;"	d
float128_EGlpNumSet	src/eg_lpnum.float128.h	157;"	d
float128_EGlpNumSetToMaxAbs	src/eg_lpnum.float128.h	364;"	d
float128_EGlpNumSetToMinAbs	src/eg_lpnum.float128.h	369;"	d
float128_EGlpNumSign	src/eg_lpnum.float128.h	585;"	d
float128_EGlpNumSubInnProdTo	src/eg_lpnum.float128.h	451;"	d
float128_EGlpNumSubTo	src/eg_lpnum.float128.h	513;"	d
float128_EGlpNumSubUiTo	src/eg_lpnum.float128.h	478;"	d
float128_EGlpNumToLf	src/eg_lpnum.float128.h	594;"	d
float128_EGlpNumZero	src/eg_lpnum.float128.h	569;"	d
float128_MaxLpNum	src/eg_lpnum.float128.h	55;"	d
float128_MinLpNum	src/eg_lpnum.float128.h	56;"	d
float128_eps	src/eg_lpnum.c	/^const float128 float128_eps = {.high = 0x3f8f800000000000LL,.low = 0 };$/;"	v
float128_epsLpNum	src/eg_lpnum.float128.h	54;"	d
float128_oneLpNum	src/eg_lpnum.float128.h	53;"	d
float128_zeroLpNum	src/eg_lpnum.float128.h	52;"	d
float32	SoftFloat/softfloat.h	/^typedef uint32_t float32;$/;"	t
float64	SoftFloat/softfloat.h	/^typedef uint64_t float64;$/;"	t
float_flag_divbyzero	SoftFloat/softfloat.h	/^{ float_flag_invalid = 1, float_flag_divbyzero = 4, float_flag_overflow =$/;"	e	enum:__anon99
float_flag_inexact	SoftFloat/softfloat.h	/^		8, float_flag_underflow = 16, float_flag_inexact = 32$/;"	e	enum:__anon99
float_flag_invalid	SoftFloat/softfloat.h	/^{ float_flag_invalid = 1, float_flag_divbyzero = 4, float_flag_overflow =$/;"	e	enum:__anon99
float_flag_overflow	SoftFloat/softfloat.h	/^{ float_flag_invalid = 1, float_flag_divbyzero = 4, float_flag_overflow =$/;"	e	enum:__anon99
float_flag_underflow	SoftFloat/softfloat.h	/^		8, float_flag_underflow = 16, float_flag_inexact = 32$/;"	e	enum:__anon99
float_round_down	SoftFloat/softfloat.h	/^{ float_round_nearest_even = 0, float_round_down = 1, float_round_up =$/;"	e	enum:__anon98
float_round_nearest_even	SoftFloat/softfloat.h	/^{ float_round_nearest_even = 0, float_round_down = 1, float_round_up =$/;"	e	enum:__anon98
float_round_to_zero	SoftFloat/softfloat.h	/^		2, float_round_to_zero = 3$/;"	e	enum:__anon98
float_round_up	SoftFloat/softfloat.h	/^{ float_round_nearest_even = 0, float_round_down = 1, float_round_up =$/;"	e	enum:__anon98
float_tininess_after_rounding	SoftFloat/softfloat.h	/^{ float_tininess_after_rounding = 0, float_tininess_before_rounding = 1$/;"	e	enum:__anon97
float_tininess_before_rounding	SoftFloat/softfloat.h	/^{ float_tininess_after_rounding = 0, float_tininess_before_rounding = 1$/;"	e	enum:__anon97
floatx80	SoftFloat/softfloat.h	/^floatx80;$/;"	t	typeref:struct:__anon95
focus	src/eg_gcit.h	/^	int*focus;			\/**< @brief Internal information *\/$/;"	m	struct:EGgcIt_t
fp20_DJK_DEBUG_	TEmplate/fp20_eg_dijkstra.h	44;"	d
fp20_DJK_VRBLVL_	TEmplate/fp20_eg_dijkstra.h	40;"	d
fp20_EG_ABHEAP_DEBUG	TEmplate/fp20_eg_abheap.h	53;"	d
fp20_EG_ABHEAP_POISON	TEmplate/fp20_eg_abheap.h	81;"	d
fp20_EG_ABKHEAP_DEBUG	TEmplate/fp20_eg_abkheap.h	53;"	d
fp20_EG_ABKHEAP_ENTRY	TEmplate/fp20_eg_abkheap.h	70;"	d
fp20_EG_ABKHEAP_POISON	TEmplate/fp20_eg_abkheap.h	85;"	d
fp20_EG_AHEAP_DEBUG	TEmplate/fp20_eg_aheap.h	52;"	d
fp20_EG_AHEAP_POISON	TEmplate/fp20_eg_aheap.h	80;"	d
fp20_EG_BSRED_CALLS	TEmplate/fp20_eg_dbasis_red.h	62;"	d
fp20_EG_BSRED_INTR	TEmplate/fp20_eg_dbasis_red.h	72;"	d
fp20_EG_BSRED_ITT	TEmplate/fp20_eg_dbasis_red.h	77;"	d
fp20_EG_BSRED_SZRED	TEmplate/fp20_eg_dbasis_red.h	67;"	d
fp20_EG_DBSRED_ALPHA	TEmplate/fp20_eg_dbasis_red.h	97;"	d
fp20_EG_DBSRED_VERBOSE	TEmplate/fp20_eg_dbasis_red.h	50;"	d
fp20_EG_EHEAP_DEBUG	TEmplate/fp20_eg_eheap.h	66;"	d
fp20_EG_EHEAP_POISON	TEmplate/fp20_eg_eheap.h	94;"	d
fp20_EG_EKHEAP_DEBUG	TEmplate/fp20_eg_ekheap.h	60;"	d
fp20_EG_EKHEAP_ENTRY	TEmplate/fp20_eg_ekheap.h	77;"	d
fp20_EG_EKHEAP_POISON	TEmplate/fp20_eg_ekheap.h	93;"	d
fp20_EG_PR_RELABEL	TEmplate/fp20_eg_push_relabel.h	114;"	d
fp20_EG_PR_RELABEL_FREC	TEmplate/fp20_eg_push_relabel.h	120;"	d
fp20_EG_SRK_DEBUG	TEmplate/fp20_eg_shrink_graph.h	57;"	d
fp20_EGaBKheapAdd	TEmplate/fp20_eg_abkheap.h	240;"	d
fp20_EGaBKheapCHECK_CN	TEmplate/fp20_eg_abkheap.h	60;"	d
fp20_EGaBKheapCHECK_CN	TEmplate/fp20_eg_abkheap.h	63;"	d
fp20_EGaBKheapCHECK_NF	TEmplate/fp20_eg_abkheap.h	61;"	d
fp20_EGaBKheapCHECK_NF	TEmplate/fp20_eg_abkheap.h	64;"	d
fp20_EGaBKheapChangeVal	TEmplate/fp20_eg_abkheap.h	318;"	d
fp20_EGaBKheapClear	TEmplate/fp20_eg_abkheap.h	170;"	d
fp20_EGaBKheapCnClear	TEmplate/fp20_eg_abkheap.h	127;"	d
fp20_EGaBKheapCnInit	TEmplate/fp20_eg_abkheap.h	110;"	d
fp20_EGaBKheapCnReset	TEmplate/fp20_eg_abkheap.h	121;"	d
fp20_EGaBKheapCn_t	TEmplate/fp20_eg_abkheap.h	/^fp20_EGaBKheapCn_t;$/;"	t	typeref:struct:__anon14
fp20_EGaBKheapCopyVal	TEmplate/fp20_eg_abkheap.h	305;"	d
fp20_EGaBKheapDel	TEmplate/fp20_eg_abkheap.h	339;"	d
fp20_EGaBKheapEmpty	TEmplate/fp20_eg_abkheap.h	150;"	d
fp20_EGaBKheapFatherId	TEmplate/fp20_eg_abkheap.h	199;"	d
fp20_EGaBKheapFirstChildId	TEmplate/fp20_eg_abkheap.h	254;"	d
fp20_EGaBKheapGetMin	TEmplate/fp20_eg_abkheap.h	178;"	d
fp20_EGaBKheapInit	TEmplate/fp20_eg_abkheap.h	156;"	d
fp20_EGaBKheapIsFull	TEmplate/fp20_eg_abkheap.h	144;"	d
fp20_EGaBKheapIsLess	TEmplate/fp20_eg_abkheap.h	92;"	d
fp20_EGaBKheapReset	TEmplate/fp20_eg_abkheap.h	163;"	d
fp20_EGaBKheapResize	TEmplate/fp20_eg_abkheap.h	189;"	d
fp20_EGaBKheap_t	TEmplate/fp20_eg_abkheap.h	/^fp20_EGaBKheap_t;$/;"	t	typeref:struct:__anon15
fp20_EGaBheapAdd	TEmplate/fp20_eg_abheap.h	215;"	d
fp20_EGaBheapCHECK_CN	TEmplate/fp20_eg_abheap.h	60;"	d
fp20_EGaBheapCHECK_CN	TEmplate/fp20_eg_abheap.h	63;"	d
fp20_EGaBheapCHECK_NF	TEmplate/fp20_eg_abheap.h	61;"	d
fp20_EGaBheapCHECK_NF	TEmplate/fp20_eg_abheap.h	64;"	d
fp20_EGaBheapChangeVal	TEmplate/fp20_eg_abheap.h	283;"	d
fp20_EGaBheapClear	TEmplate/fp20_eg_abheap.h	145;"	d
fp20_EGaBheapCnClear	TEmplate/fp20_eg_abheap.h	103;"	d
fp20_EGaBheapCnInit	TEmplate/fp20_eg_abheap.h	89;"	d
fp20_EGaBheapCnReset	TEmplate/fp20_eg_abheap.h	96;"	d
fp20_EGaBheapCn_t	TEmplate/fp20_eg_abheap.h	/^fp20_EGaBheapCn_t;$/;"	t	typeref:struct:__anon16
fp20_EGaBheapDel	TEmplate/fp20_eg_abheap.h	306;"	d
fp20_EGaBheapEmpty	TEmplate/fp20_eg_abheap.h	125;"	d
fp20_EGaBheapFatherId	TEmplate/fp20_eg_abheap.h	174;"	d
fp20_EGaBheapFirstChildId	TEmplate/fp20_eg_abheap.h	229;"	d
fp20_EGaBheapGetMin	TEmplate/fp20_eg_abheap.h	153;"	d
fp20_EGaBheapInit	TEmplate/fp20_eg_abheap.h	131;"	d
fp20_EGaBheapIsFull	TEmplate/fp20_eg_abheap.h	119;"	d
fp20_EGaBheapReset	TEmplate/fp20_eg_abheap.h	138;"	d
fp20_EGaBheapResize	TEmplate/fp20_eg_abheap.h	164;"	d
fp20_EGaBheap_t	TEmplate/fp20_eg_abheap.h	/^fp20_EGaBheap_t;$/;"	t	typeref:struct:__anon17
fp20_EGaHeapAdd	TEmplate/fp20_eg_aheap.h	227;"	d
fp20_EGaHeapCHECK_CN	TEmplate/fp20_eg_aheap.h	59;"	d
fp20_EGaHeapCHECK_CN	TEmplate/fp20_eg_aheap.h	62;"	d
fp20_EGaHeapCHECK_NF	TEmplate/fp20_eg_aheap.h	60;"	d
fp20_EGaHeapCHECK_NF	TEmplate/fp20_eg_aheap.h	63;"	d
fp20_EGaHeapChangeVal	TEmplate/fp20_eg_aheap.h	296;"	d
fp20_EGaHeapClear	TEmplate/fp20_eg_aheap.h	146;"	d
fp20_EGaHeapCnClear	TEmplate/fp20_eg_aheap.h	102;"	d
fp20_EGaHeapCnInit	TEmplate/fp20_eg_aheap.h	88;"	d
fp20_EGaHeapCnReset	TEmplate/fp20_eg_aheap.h	95;"	d
fp20_EGaHeapCn_t	TEmplate/fp20_eg_aheap.h	/^fp20_EGaHeapCn_t;$/;"	t	typeref:struct:__anon18
fp20_EGaHeapDel	TEmplate/fp20_eg_aheap.h	319;"	d
fp20_EGaHeapEmpty	TEmplate/fp20_eg_aheap.h	125;"	d
fp20_EGaHeapFatherId	TEmplate/fp20_eg_aheap.h	186;"	d
fp20_EGaHeapFirstChildId	TEmplate/fp20_eg_aheap.h	241;"	d
fp20_EGaHeapGetMin	TEmplate/fp20_eg_aheap.h	164;"	d
fp20_EGaHeapGetMinVal	TEmplate/fp20_eg_aheap.h	154;"	d
fp20_EGaHeapInit	TEmplate/fp20_eg_aheap.h	132;"	d
fp20_EGaHeapIsFull	TEmplate/fp20_eg_aheap.h	119;"	d
fp20_EGaHeapReset	TEmplate/fp20_eg_aheap.h	139;"	d
fp20_EGaHeapResize	TEmplate/fp20_eg_aheap.h	175;"	d
fp20_EGaHeap_t	TEmplate/fp20_eg_aheap.h	/^fp20_EGaHeap_t;$/;"	t	typeref:struct:__anon19
fp20_EGalgDJK	TEmplate/fp20_eg_dijkstra.c	/^int fp20_EGalgDJK ($/;"	f
fp20_EGalgMC	TEmplate/fp20_eg_min_cut.c	/^int fp20_EGalgMC (fp20_EGalgMCgraph_t * const G,$/;"	f
fp20_EGalgMCbuildPRgraph	TEmplate/fp20_eg_min_cut.c	/^static inline int fp20_EGalgMCbuildPRgraph (fp20_EGalgMCgraph_t * const mcG,$/;"	f	file:
fp20_EGalgMCcbkClear	TEmplate/fp20_eg_min_cut.h	132;"	d
fp20_EGalgMCcbkInit	TEmplate/fp20_eg_min_cut.h	122;"	d
fp20_EGalgMCcbk_t	TEmplate/fp20_eg_min_cut.h	/^fp20_EGalgMCcbk_t;$/;"	t	typeref:struct:fp20_EGalgMCcbk_t
fp20_EGalgMCcbk_t	TEmplate/fp20_eg_min_cut.h	/^typedef struct fp20_EGalgMCcbk_t$/;"	s
fp20_EGalgMCcomputeT	TEmplate/fp20_eg_min_cut.c	/^static inline int fp20_EGalgMCcomputeT (fp20_EGalgPRgraph_t * const prG,$/;"	f	file:
fp20_EGalgMCdo_f	TEmplate/fp20_eg_min_cut.h	/^typedef int (*fp20_EGalgMCdo_f) (EGfp20_t,$/;"	t
fp20_EGalgMCedgeClear	TEmplate/fp20_eg_min_cut.h	186;"	d
fp20_EGalgMCedgeInit	TEmplate/fp20_eg_min_cut.h	177;"	d
fp20_EGalgMCedge_t	TEmplate/fp20_eg_min_cut.h	/^fp20_EGalgMCedge_t;$/;"	t	typeref:struct:fp20_EGalgMCedge_t
fp20_EGalgMCedge_t	TEmplate/fp20_eg_min_cut.h	/^typedef struct fp20_EGalgMCedge_t$/;"	s
fp20_EGalgMCexpandNode	TEmplate/fp20_eg_min_cut.c	/^static inline int fp20_EGalgMCexpandNode (unsigned int *const cut,$/;"	f	file:
fp20_EGalgMCgraphClear	TEmplate/fp20_eg_min_cut.h	246;"	d
fp20_EGalgMCgraphInit	TEmplate/fp20_eg_min_cut.h	225;"	d
fp20_EGalgMCgraph_t	TEmplate/fp20_eg_min_cut.h	/^fp20_EGalgMCgraph_t;$/;"	t	typeref:struct:fp20_EGalgMCgraph_t
fp20_EGalgMCgraph_t	TEmplate/fp20_eg_min_cut.h	/^typedef struct fp20_EGalgMCgraph_t$/;"	s
fp20_EGalgMCidentifyNodes	TEmplate/fp20_eg_min_cut.h	256;"	d
fp20_EGalgMCidentifyPRedges	TEmplate/fp20_eg_min_cut.c	/^int fp20_EGalgMCidentifyPRedges (fp20_EGalgMCgraph_t * const G,$/;"	f
fp20_EGalgMCnodeClear	TEmplate/fp20_eg_min_cut.h	163;"	d
fp20_EGalgMCnodeInit	TEmplate/fp20_eg_min_cut.h	150;"	d
fp20_EGalgMCnode_t	TEmplate/fp20_eg_min_cut.h	/^fp20_EGalgMCnode_t;$/;"	t	typeref:struct:fp20_EGalgMCnode_t
fp20_EGalgMCnode_t	TEmplate/fp20_eg_min_cut.h	/^typedef struct fp20_EGalgMCnode_t$/;"	s
fp20_EGalgMCprofile	TEmplate/fp20_eg_min_cut.c	/^void fp20_EGalgMCprofile(void)$/;"	f
fp20_EGalgMCtestNode	TEmplate/fp20_eg_min_cut.c	/^static inline int fp20_EGalgMCtestNode (fp20_EGalgMCgraph_t * const G,$/;"	f	file:
fp20_EGalgPRcomputeLabels	TEmplate/fp20_eg_push_relabel.c	/^static inline int fp20_EGalgPRcomputeLabels (fp20_EGalgPRgraph_t * const G,$/;"	f	file:
fp20_EGalgPRedgeClear	TEmplate/fp20_eg_push_relabel.h	236;"	d
fp20_EGalgPRedgeInit	TEmplate/fp20_eg_push_relabel.h	208;"	d
fp20_EGalgPRedgeReset	TEmplate/fp20_eg_push_relabel.h	225;"	d
fp20_EGalgPRedge_t	TEmplate/fp20_eg_push_relabel.h	/^fp20_EGalgPRedge_t;$/;"	t	typeref:struct:fp20_EGalgPRedge_t
fp20_EGalgPRedge_t	TEmplate/fp20_eg_push_relabel.h	/^typedef struct fp20_EGalgPRedge_t$/;"	s
fp20_EGalgPRglobalRelabel	TEmplate/fp20_eg_push_relabel.c	/^static inline int fp20_EGalgPRglobalRelabel (fp20_EGalgPRgraph_t * const G,$/;"	f	file:
fp20_EGalgPRgraphClear	TEmplate/fp20_eg_push_relabel.h	269;"	d
fp20_EGalgPRgraphInit	TEmplate/fp20_eg_push_relabel.h	256;"	d
fp20_EGalgPRgraphReset	TEmplate/fp20_eg_push_relabel.h	264;"	d
fp20_EGalgPRgraph_t	TEmplate/fp20_eg_push_relabel.h	/^fp20_EGalgPRgraph_t;$/;"	t	typeref:struct:fp20_EGalgPRgraph_t
fp20_EGalgPRgraph_t	TEmplate/fp20_eg_push_relabel.h	/^typedef struct fp20_EGalgPRgraph_t$/;"	s
fp20_EGalgPRmaxSTflow	TEmplate/fp20_eg_push_relabel.c	/^int fp20_EGalgPRmaxSTflow (fp20_EGalgPRgraph_t * const G,$/;"	f
fp20_EGalgPRminSTcut	TEmplate/fp20_eg_push_relabel.c	/^int fp20_EGalgPRminSTcut (fp20_EGalgPRgraph_t * const G,$/;"	f
fp20_EGalgPRnodeClear	TEmplate/fp20_eg_push_relabel.h	169;"	d
fp20_EGalgPRnodeInit	TEmplate/fp20_eg_push_relabel.h	153;"	d
fp20_EGalgPRnodeReset	TEmplate/fp20_eg_push_relabel.h	164;"	d
fp20_EGalgPRnode_t	TEmplate/fp20_eg_push_relabel.h	/^fp20_EGalgPRnode_t;$/;"	t	typeref:struct:fp20_EGalgPRnode_t
fp20_EGalgPRnode_t	TEmplate/fp20_eg_push_relabel.h	/^typedef struct fp20_EGalgPRnode_t$/;"	s
fp20_EGalgPRnumb	TEmplate/fp20_eg_push_relabel.c	/^static inline int fp20_EGalgPRnumb (const unsigned int hole,$/;"	f	file:
fp20_EGalgPRoptimalityTest	TEmplate/fp20_eg_push_relabel.c	/^int fp20_EGalgPRoptimalityTest (fp20_EGalgPRgraph_t * const G,$/;"	f
fp20_EGalgPRpreprocess	TEmplate/fp20_eg_push_relabel.c	/^static inline int fp20_EGalgPRpreprocess (fp20_EGalgPRgraph_t * const G,$/;"	f	file:
fp20_EGalgPRprofile	TEmplate/fp20_eg_push_relabel.c	/^void fp20_EGalgPRprofile(void)$/;"	f
fp20_EGalgPRpush	TEmplate/fp20_eg_push_relabel.c	/^static inline int fp20_EGalgPRpush (fp20_EGalgPRse_t * const edge_pt,$/;"	f	file:
fp20_EGalgPRpushRelabel	TEmplate/fp20_eg_push_relabel.c	/^static int fp20_EGalgPRpushRelabel (fp20_EGalgPRnode_t * const node_pt,$/;"	f	file:
fp20_EGalgPRse_t	TEmplate/fp20_eg_push_relabel.h	/^fp20_EGalgPRse_t;$/;"	t	typeref:struct:fp20_EGalgPRse_t
fp20_EGalgPRse_t	TEmplate/fp20_eg_push_relabel.h	/^typedef struct fp20_EGalgPRse_t$/;"	s
fp20_EGdBsRed	TEmplate/fp20_eg_dbasis_red.c	/^int fp20_EGdBsRed (fp20_EGdBsRed_t * const bsred,$/;"	f
fp20_EGdBsRedAddElement	TEmplate/fp20_eg_dbasis_red.h	159;"	d
fp20_EGdBsRedBuildGM	TEmplate/fp20_eg_dbasis_red.c	/^static void fp20_EGdBsRedBuildGM (fp20_EGdMatrix_t * const GM,$/;"	f	file:
fp20_EGdBsRedClear	TEmplate/fp20_eg_dbasis_red.h	133;"	d
fp20_EGdBsRedInit	TEmplate/fp20_eg_dbasis_red.h	124;"	d
fp20_EGdBsRedProfile	TEmplate/fp20_eg_dbasis_red.h	83;"	d
fp20_EGdBsRedReset	TEmplate/fp20_eg_dbasis_red.h	144;"	d
fp20_EGdBsRedSetLength	TEmplate/fp20_eg_dbasis_red.h	152;"	d
fp20_EGdBsRedStats	TEmplate/fp20_eg_dbasis_red.c	/^uintmax_t fp20_EGdBsRedStats[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
fp20_EGdBsRed_t	TEmplate/fp20_eg_dbasis_red.h	/^fp20_EGdBsRed_t;$/;"	t	typeref:struct:fp20_EGdBsRed_t
fp20_EGdBsRed_t	TEmplate/fp20_eg_dbasis_red.h	/^typedef struct fp20_EGdBsRed_t$/;"	s
fp20_EGdMatrixAddColMultiple	TEmplate/fp20_eg_dmatrix.h	238;"	d
fp20_EGdMatrixAddRowMultiple	TEmplate/fp20_eg_dmatrix.h	165;"	d
fp20_EGdMatrixClear	TEmplate/fp20_eg_dmatrix.h	82;"	d
fp20_EGdMatrixDisplay	TEmplate/fp20_eg_dmatrix.h	124;"	d
fp20_EGdMatrixGaussianElimination	TEmplate/fp20_eg_dmatrix.c	/^int fp20_EGdMatrixGaussianElimination (fp20_EGdMatrix_t * const dmatrix,$/;"	f
fp20_EGdMatrixInit	TEmplate/fp20_eg_dmatrix.h	74;"	d
fp20_EGdMatrixMultiplyCol	TEmplate/fp20_eg_dmatrix.h	287;"	d
fp20_EGdMatrixMultiplyRow	TEmplate/fp20_eg_dmatrix.h	213;"	d
fp20_EGdMatrixSetDimension	TEmplate/fp20_eg_dmatrix.h	98;"	d
fp20_EGdMatrixSubColMultiple	TEmplate/fp20_eg_dmatrix.h	266;"	d
fp20_EGdMatrixSubRowMultiple	TEmplate/fp20_eg_dmatrix.h	193;"	d
fp20_EGdMatrix_t	TEmplate/fp20_eg_dmatrix.h	/^fp20_EGdMatrix_t;$/;"	t	typeref:struct:fp20_EGdMatrix_t
fp20_EGdMatrix_t	TEmplate/fp20_eg_dmatrix.h	/^typedef struct fp20_EGdMatrix_t$/;"	s
fp20_EGeHeapAdd	TEmplate/fp20_eg_eheap.h	233;"	d
fp20_EGeHeapCHECK_CN	TEmplate/fp20_eg_eheap.h	73;"	d
fp20_EGeHeapCHECK_CN	TEmplate/fp20_eg_eheap.h	76;"	d
fp20_EGeHeapCHECK_NF	TEmplate/fp20_eg_eheap.h	74;"	d
fp20_EGeHeapCHECK_NF	TEmplate/fp20_eg_eheap.h	77;"	d
fp20_EGeHeapChangeD	TEmplate/fp20_eg_eheap.h	353;"	d
fp20_EGeHeapChangeVal	TEmplate/fp20_eg_eheap.h	298;"	d
fp20_EGeHeapCheck	TEmplate/fp20_eg_eheap.h	327;"	d
fp20_EGeHeapCheck	TEmplate/fp20_eg_eheap.h	343;"	d
fp20_EGeHeapClear	TEmplate/fp20_eg_eheap.h	159;"	d
fp20_EGeHeapCnClear	TEmplate/fp20_eg_eheap.h	116;"	d
fp20_EGeHeapCnInit	TEmplate/fp20_eg_eheap.h	102;"	d
fp20_EGeHeapCnReset	TEmplate/fp20_eg_eheap.h	109;"	d
fp20_EGeHeapCn_t	TEmplate/fp20_eg_eheap.h	/^fp20_EGeHeapCn_t;$/;"	t	typeref:struct:__anon20
fp20_EGeHeapDel	TEmplate/fp20_eg_eheap.h	308;"	d
fp20_EGeHeapEmpty	TEmplate/fp20_eg_eheap.h	139;"	d
fp20_EGeHeapFatherId	TEmplate/fp20_eg_eheap.h	199;"	d
fp20_EGeHeapFirstChildId	TEmplate/fp20_eg_eheap.h	246;"	d
fp20_EGeHeapGetMin	TEmplate/fp20_eg_eheap.h	177;"	d
fp20_EGeHeapGetMinVal	TEmplate/fp20_eg_eheap.h	167;"	d
fp20_EGeHeapInit	TEmplate/fp20_eg_eheap.h	145;"	d
fp20_EGeHeapIsFull	TEmplate/fp20_eg_eheap.h	133;"	d
fp20_EGeHeapResize	TEmplate/fp20_eg_eheap.h	188;"	d
fp20_EGeHeapSiftDown	TEmplate/fp20_eg_eheap.h	256;"	d
fp20_EGeHeapSiftUp	TEmplate/fp20_eg_eheap.h	207;"	d
fp20_EGeHeap_t	TEmplate/fp20_eg_eheap.h	/^fp20_EGeHeap_t;$/;"	t	typeref:struct:__anon21
fp20_EGeHepReset	TEmplate/fp20_eg_eheap.h	152;"	d
fp20_EGeKHeapAdd	TEmplate/fp20_eg_ekheap.h	285;"	d
fp20_EGeKHeapCHECK_CN	TEmplate/fp20_eg_ekheap.h	67;"	d
fp20_EGeKHeapCHECK_CN	TEmplate/fp20_eg_ekheap.h	70;"	d
fp20_EGeKHeapCHECK_NF	TEmplate/fp20_eg_ekheap.h	68;"	d
fp20_EGeKHeapCHECK_NF	TEmplate/fp20_eg_ekheap.h	71;"	d
fp20_EGeKHeapChangeD	TEmplate/fp20_eg_ekheap.h	408;"	d
fp20_EGeKHeapChangeVal	TEmplate/fp20_eg_ekheap.h	351;"	d
fp20_EGeKHeapCheck	TEmplate/fp20_eg_ekheap.h	381;"	d
fp20_EGeKHeapCheck	TEmplate/fp20_eg_ekheap.h	398;"	d
fp20_EGeKHeapClear	TEmplate/fp20_eg_ekheap.h	166;"	d
fp20_EGeKHeapCnClear	TEmplate/fp20_eg_ekheap.h	120;"	d
fp20_EGeKHeapCnInit	TEmplate/fp20_eg_ekheap.h	101;"	d
fp20_EGeKHeapCnReset	TEmplate/fp20_eg_ekheap.h	113;"	d
fp20_EGeKHeapCn_t	TEmplate/fp20_eg_ekheap.h	/^fp20_EGeKHeapCn_t;$/;"	t	typeref:struct:__anon22
fp20_EGeKHeapCopyVal	TEmplate/fp20_eg_ekheap.c	/^void fp20_EGeKHeapCopyVal(EGfp20_t*const dst, const EGfp20_t*const src)$/;"	f
fp20_EGeKHeapDel	TEmplate/fp20_eg_ekheap.h	362;"	d
fp20_EGeKHeapEmpty	TEmplate/fp20_eg_ekheap.h	146;"	d
fp20_EGeKHeapFatherId	TEmplate/fp20_eg_ekheap.h	223;"	d
fp20_EGeKHeapFirstChildId	TEmplate/fp20_eg_ekheap.h	298;"	d
fp20_EGeKHeapGetMin	TEmplate/fp20_eg_ekheap.h	201;"	d
fp20_EGeKHeapGetMinKVal	TEmplate/fp20_eg_ekheap.h	188;"	d
fp20_EGeKHeapGetMinVal	TEmplate/fp20_eg_ekheap.h	177;"	d
fp20_EGeKHeapInit	TEmplate/fp20_eg_ekheap.h	152;"	d
fp20_EGeKHeapIsFull	TEmplate/fp20_eg_ekheap.h	140;"	d
fp20_EGeKHeapIsLess	TEmplate/fp20_eg_ekheap.h	231;"	d
fp20_EGeKHeapResize	TEmplate/fp20_eg_ekheap.h	212;"	d
fp20_EGeKHeapSiftDown	TEmplate/fp20_eg_ekheap.h	308;"	d
fp20_EGeKHeapSiftUp	TEmplate/fp20_eg_ekheap.h	259;"	d
fp20_EGeKHeap_t	TEmplate/fp20_eg_ekheap.h	/^fp20_EGeKHeap_t;$/;"	t	typeref:struct:__anon23
fp20_EGeKHepReset	TEmplate/fp20_eg_ekheap.h	159;"	d
fp20_EGguReadXgraph	TEmplate/fp20_eg_dijkstra.c	/^int fp20_EGguReadXgraph($/;"	f
fp20_EGlpNumAddInnProdTo	src/eg_lpnum.fp20.h	367;"	d
fp20_EGlpNumAddTo	src/eg_lpnum.fp20.h	398;"	d
fp20_EGlpNumAddUiTo	src/eg_lpnum.fp20.h	388;"	d
fp20_EGlpNumAllocArray	src/eg_lpnum.fp20.h	85;"	d
fp20_EGlpNumCeil	src/eg_lpnum.fp20.h	104;"	d
fp20_EGlpNumClearVar	src/eg_lpnum.fp20.h	496;"	d
fp20_EGlpNumCopy	src/eg_lpnum.fp20.h	267;"	d
fp20_EGlpNumCopyAbs	src/eg_lpnum.fp20.h	304;"	d
fp20_EGlpNumCopyArray	src/eg_lpnum.fp20.h	343;"	d
fp20_EGlpNumCopyDiff	src/eg_lpnum.fp20.h	249;"	d
fp20_EGlpNumCopyDiffRatio	src/eg_lpnum.fp20.h	239;"	d
fp20_EGlpNumCopyFrac	src/eg_lpnum.fp20.h	326;"	d
fp20_EGlpNumCopyNeg	src/eg_lpnum.fp20.h	316;"	d
fp20_EGlpNumCopySqrOver	src/eg_lpnum.fp20.h	291;"	d
fp20_EGlpNumCopySum	src/eg_lpnum.fp20.h	258;"	d
fp20_EGlpNumDivTo	src/eg_lpnum.fp20.h	432;"	d
fp20_EGlpNumDivUiTo	src/eg_lpnum.fp20.h	444;"	d
fp20_EGlpNumFloor	src/eg_lpnum.fp20.h	112;"	d
fp20_EGlpNumFreeArray	src/eg_lpnum.fp20.h	63;"	d
fp20_EGlpNumGetStr	src/eg_lpnum.fp20.h	53;"	d
fp20_EGlpNumInitVar	src/eg_lpnum.fp20.h	492;"	d
fp20_EGlpNumInnProd	TEmplate/fp20_eg_numutil.h	54;"	d
fp20_EGlpNumInv	src/eg_lpnum.fp20.h	118;"	d
fp20_EGlpNumIsDiffLess	src/eg_lpnum.fp20.h	196;"	d
fp20_EGlpNumIsEqqual	src/eg_lpnum.fp20.h	130;"	d
fp20_EGlpNumIsEqual	src/eg_lpnum.fp20.h	143;"	d
fp20_EGlpNumIsGreaDbl	src/eg_lpnum.fp20.h	218;"	d
fp20_EGlpNumIsGreatZero	src/eg_lpnum.fp20.h	154;"	d
fp20_EGlpNumIsLeq	src/eg_lpnum.fp20.h	229;"	d
fp20_EGlpNumIsLess	src/eg_lpnum.fp20.h	172;"	d
fp20_EGlpNumIsLessDbl	src/eg_lpnum.fp20.h	207;"	d
fp20_EGlpNumIsLessZero	src/eg_lpnum.fp20.h	161;"	d
fp20_EGlpNumIsNeq	src/eg_lpnum.fp20.h	144;"	d
fp20_EGlpNumIsNeqZero	src/eg_lpnum.fp20.h	146;"	d
fp20_EGlpNumIsNeqq	src/eg_lpnum.fp20.h	145;"	d
fp20_EGlpNumIsNeqqZero	src/eg_lpnum.fp20.h	147;"	d
fp20_EGlpNumIsSumLess	src/eg_lpnum.fp20.h	184;"	d
fp20_EGlpNumMultTo	src/eg_lpnum.fp20.h	420;"	d
fp20_EGlpNumMultUiTo	src/eg_lpnum.fp20.h	455;"	d
fp20_EGlpNumOne	src/eg_lpnum.fp20.h	471;"	d
fp20_EGlpNumReadStr	src/eg_lpnum.fp20.h	43;"	d
fp20_EGlpNumReallocArray	src/eg_lpnum.fp20.h	68;"	d
fp20_EGlpNumSet	src/eg_lpnum.fp20.h	98;"	d
fp20_EGlpNumSetToMaxAbs	src/eg_lpnum.fp20.h	277;"	d
fp20_EGlpNumSetToMinAbs	src/eg_lpnum.fp20.h	279;"	d
fp20_EGlpNumSign	src/eg_lpnum.fp20.h	479;"	d
fp20_EGlpNumSubInnProdTo	src/eg_lpnum.fp20.h	355;"	d
fp20_EGlpNumSubTo	src/eg_lpnum.fp20.h	409;"	d
fp20_EGlpNumSubUiTo	src/eg_lpnum.fp20.h	378;"	d
fp20_EGlpNumToLf	src/eg_lpnum.fp20.h	488;"	d
fp20_EGlpNumZero	src/eg_lpnum.fp20.h	463;"	d
fp20_EGsrkAddEdge	TEmplate/fp20_eg_shrink_graph.h	177;"	d
fp20_EGsrkAddNode	TEmplate/fp20_eg_shrink_graph.h	165;"	d
fp20_EGsrkEdgeClear	TEmplate/fp20_eg_shrink_graph.h	120;"	d
fp20_EGsrkEdgeInit	TEmplate/fp20_eg_shrink_graph.h	108;"	d
fp20_EGsrkEdge_t	TEmplate/fp20_eg_shrink_graph.h	/^fp20_EGsrkEdge_t;$/;"	t	typeref:struct:fp20_EGsrkEdge_t
fp20_EGsrkEdge_t	TEmplate/fp20_eg_shrink_graph.h	/^typedef struct fp20_EGsrkEdge_t$/;"	s
fp20_EGsrkGraphClear	TEmplate/fp20_eg_shrink_graph.h	136;"	d
fp20_EGsrkGraphInit	TEmplate/fp20_eg_shrink_graph.h	127;"	d
fp20_EGsrkGraph_t	TEmplate/fp20_eg_shrink_graph.h	/^fp20_EGsrkGraph_t;$/;"	t	typeref:struct:fp20_EGsrkGraph_t
fp20_EGsrkGraph_t	TEmplate/fp20_eg_shrink_graph.h	/^typedef struct fp20_EGsrkGraph_t$/;"	s
fp20_EGsrkIdentifyNodes	TEmplate/fp20_eg_shrink_graph.c	/^fp20_EGsrkNode_t *fp20_EGsrkIdentifyNodes (fp20_EGsrkGraph_t * const G,$/;"	f
fp20_EGsrkNodeClear	TEmplate/fp20_eg_shrink_graph.h	155;"	d
fp20_EGsrkNodeInit	TEmplate/fp20_eg_shrink_graph.h	141;"	d
fp20_EGsrkNode_t	TEmplate/fp20_eg_shrink_graph.h	/^fp20_EGsrkNode_t;$/;"	t	typeref:struct:fp20_EGsrkNode_t
fp20_EGsrkNode_t	TEmplate/fp20_eg_shrink_graph.h	/^typedef struct fp20_EGsrkNode_t$/;"	s
fp20_EGutilPermSort	TEmplate/fp20_eg_numutil.c	/^void fp20_EGutilPermSort (const size_t sz,$/;"	f
fp20_EGutilPermSort2	TEmplate/fp20_eg_numutil.c	/^void fp20_EGutilPermSort2 (const size_t sz,$/;"	f
fp20_HILBERT_TABLE_SIZE	TEmplate/fp20_eg_dmatrix.ex.c	45;"	d	file:
fp20_MaxLpNum	src/eg_lpnum.fp20.h	37;"	d
fp20_MinLpNum	src/eg_lpnum.fp20.h	38;"	d
fp20_UPDATE	TEmplate/fp20_eg_min_cut.c	50;"	d	file:
fp20_UPDATE	TEmplate/fp20_eg_min_cut.c	52;"	d	file:
fp20_UPDATE	TEmplate/fp20_eg_push_relabel.c	51;"	d	file:
fp20_UPDATE	TEmplate/fp20_eg_push_relabel.c	53;"	d	file:
fp20__EG_MIN_CUT_H	TEmplate/fp20_eg_min_cut.h	62;"	d
fp20__EGalgMChitNeighbours	TEmplate/fp20_eg_min_cut.c	135;"	d	file:
fp20__EGalgMCunhitNeighbours	TEmplate/fp20_eg_min_cut.c	154;"	d	file:
fp20__EGshrinkGraph_h__	TEmplate/fp20_eg_shrink_graph.h	48;"	d
fp20___EG_ABHEAP__	TEmplate/fp20_eg_abheap.h	46;"	d
fp20___EG_ABKHEAP__	TEmplate/fp20_eg_abkheap.h	46;"	d
fp20___EG_AHEAP__	TEmplate/fp20_eg_aheap.h	45;"	d
fp20___EG_DBASIS_REDUCTION__	TEmplate/fp20_eg_dbasis_red.h	21;"	d
fp20___EG_DIJKSTRA_H	TEmplate/fp20_eg_dijkstra.h	31;"	d
fp20___EG_DMATRIX_H__	TEmplate/fp20_eg_dmatrix.h	21;"	d
fp20___EG_EHEAP__	TEmplate/fp20_eg_eheap.h	59;"	d
fp20___EG_EKHEAP__	TEmplate/fp20_eg_ekheap.h	53;"	d
fp20___EG_NUMUTIL_H__	TEmplate/fp20_eg_numutil.h	21;"	d
fp20___EG_PUSH_RELABEL_H__	TEmplate/fp20_eg_push_relabel.h	76;"	d
fp20___EGaBKheapSiftDown	TEmplate/fp20_eg_abkheap.h	266;"	d
fp20___EGaBKheapSiftUp	TEmplate/fp20_eg_abkheap.h	211;"	d
fp20___EGaBheapSiftDown	TEmplate/fp20_eg_abheap.h	241;"	d
fp20___EGaBheapSiftUp	TEmplate/fp20_eg_abheap.h	186;"	d
fp20___EGaHeapSiftDown	TEmplate/fp20_eg_aheap.h	253;"	d
fp20___EGaHeapSiftUp	TEmplate/fp20_eg_aheap.h	198;"	d
fp20___EGlpNumInnProd	TEmplate/fp20_eg_numutil.c	/^void fp20___EGlpNumInnProd(EGfp20_t*rop,$/;"	f
fp20___MC_DEBUG_	TEmplate/fp20_eg_min_cut.h	78;"	d
fp20___MC_PROFILE_	TEmplate/fp20_eg_min_cut.h	82;"	d
fp20___MC_VRBLVL_	TEmplate/fp20_eg_min_cut.h	74;"	d
fp20___MC_profile_lvl	TEmplate/fp20_eg_min_cut.c	/^static unsigned long long fp20___MC_profile_lvl[5] = { 0, 0, 0, 0, 0 };$/;"	v	file:
fp20___MC_profile_tn	TEmplate/fp20_eg_min_cut.c	/^static unsigned long long fp20___MC_profile_tn = 0;\/**<Number of calls to #fp20_EGalgMCtestNode*\/$/;"	v	file:
fp20___MC_profile_up	TEmplate/fp20_eg_min_cut.c	/^static unsigned long long fp20___MC_profile_up = 0;\/**< Number of improving cuts found *\/$/;"	v	file:
fp20___PR_DEBUGL__	TEmplate/fp20_eg_push_relabel.h	86;"	d
fp20___PR_PROFILE__	TEmplate/fp20_eg_push_relabel.h	98;"	d
fp20___PR_TEST_VERBOSE__	TEmplate/fp20_eg_push_relabel.h	90;"	d
fp20___PR_VERBOSE__	TEmplate/fp20_eg_push_relabel.h	94;"	d
fp20___PR_profile_lvel	TEmplate/fp20_eg_push_relabel.c	/^static unsigned long long fp20___PR_profile_lvel = 0;$/;"	v	file:
fp20___PR_profile_move	TEmplate/fp20_eg_push_relabel.c	/^static unsigned long long fp20___PR_profile_move = 0;$/;"	v	file:
fp20___PR_profile_numb	TEmplate/fp20_eg_push_relabel.c	/^static unsigned long long fp20___PR_profile_numb = 0;$/;"	v	file:
fp20___PR_profile_push	TEmplate/fp20_eg_push_relabel.c	/^static unsigned long long fp20___PR_profile_push = 0;$/;"	v	file:
fp20___PR_profile_rela	TEmplate/fp20_eg_push_relabel.c	/^static unsigned long long fp20___PR_profile_rela = 0;$/;"	v	file:
fp20___last_global	TEmplate/fp20_eg_push_relabel.c	/^static unsigned long long fp20___last_global = 0;$/;"	v	file:
fp20_aheap_parseargs	TEmplate/fp20_eg_abheap.ex.c	/^int fp20_aheap_parseargs (int argc,$/;"	f
fp20_aheap_parseargs	TEmplate/fp20_eg_abkheap.ex.c	/^int fp20_aheap_parseargs (int argc,$/;"	f
fp20_aheap_parseargs	TEmplate/fp20_eg_aheap.ex.c	/^int fp20_aheap_parseargs (int argc,$/;"	f
fp20_aheap_usage	TEmplate/fp20_eg_abheap.ex.c	/^void fp20_aheap_usage (char *program)$/;"	f
fp20_aheap_usage	TEmplate/fp20_eg_abkheap.ex.c	/^void fp20_aheap_usage (char *program)$/;"	f
fp20_aheap_usage	TEmplate/fp20_eg_aheap.ex.c	/^void fp20_aheap_usage (char *program)$/;"	f
fp20_display_srkG	TEmplate/fp20_eg_shrink_graph.ex.c	/^static inline void fp20_display_srkG (fp20_EGsrkGraph_t * G,$/;"	f	file:
fp20_djk_parseargs	TEmplate/fp20_eg_dijkstra.ex.c	/^static inline void fp20_djk_parseargs(int argc,char**argv)$/;"	f	file:
fp20_djk_usage	TEmplate/fp20_eg_dijkstra.ex.c	/^static inline void fp20_djk_usage(const char*const progname)$/;"	f	file:
fp20_dmatrix_hilbert_eigenvalues	TEmplate/fp20_eg_dmatrix.ex.c	/^static unsigned fp20_dmatrix_hilbert_eigenvalues[fp20_HILBERT_TABLE_SIZE] = {$/;"	v	file:
fp20_dmatrix_parseargs	TEmplate/fp20_eg_dmatrix.ex.c	/^int fp20_dmatrix_parseargs (int argc,$/;"	f
fp20_dmatrix_usage	TEmplate/fp20_eg_dmatrix.ex.c	/^void fp20_dmatrix_usage (char *program)$/;"	f
fp20_eheap_parseargs	TEmplate/fp20_eg_eheap.ex.c	/^int fp20_eheap_parseargs (int argc,$/;"	f
fp20_eheap_usage	TEmplate/fp20_eg_eheap.ex.c	/^void fp20_eheap_usage (char *program)$/;"	f
fp20_ekheap_parseargs	TEmplate/fp20_eg_ekheap.ex.c	/^int fp20_ekheap_parseargs (int argc,$/;"	f
fp20_ekheap_usage	TEmplate/fp20_eg_ekheap.ex.c	/^void fp20_ekheap_usage (char *program)$/;"	f
fp20_epsLpNum	src/eg_lpnum.fp20.h	36;"	d
fp20_file_name	TEmplate/fp20_eg_min_cut.ex.c	/^static char *fp20_file_name = 0;$/;"	v	file:
fp20_fname	TEmplate/fp20_eg_dijkstra.ex.c	/^static char fp20_fname[1024];$/;"	v	file:
fp20_lvl	TEmplate/fp20_eg_min_cut.ex.c	/^static unsigned int fp20_lvl = 5;$/;"	v	file:
fp20_lvl	TEmplate/fp20_eg_min_cut.h	/^	unsigned int fp20_lvl;		\/**< Current node level test to be performed *\/$/;"	m	struct:fp20_EGalgMCnode_t
fp20_mc_all_cuts_t	TEmplate/fp20_eg_min_cut.ex.c	/^fp20_mc_all_cuts_t;$/;"	t	typeref:struct:fp20_mc_all_cuts_t	file:
fp20_mc_all_cuts_t	TEmplate/fp20_eg_min_cut.ex.c	/^typedef struct fp20_mc_all_cuts_t$/;"	s	file:
fp20_mc_parseargs	TEmplate/fp20_eg_min_cut.ex.c	/^static inline int fp20_mc_parseargs (int argc,$/;"	f	file:
fp20_mc_store_cuts	TEmplate/fp20_eg_min_cut.ex.c	/^int fp20_mc_store_cuts (EGfp20_t value,$/;"	f
fp20_mc_usage	TEmplate/fp20_eg_min_cut.ex.c	/^static void fp20_mc_usage (char **argv)$/;"	f	file:
fp20_my_constr	TEmplate/fp20_eg_memslab.ex.c	/^static void fp20_my_constr (void *ptr)$/;"	f	file:
fp20_my_dest	TEmplate/fp20_eg_memslab.ex.c	/^static void fp20_my_dest (void *ptr)$/;"	f	file:
fp20_oneLpNum	src/eg_lpnum.fp20.h	35;"	d
fp20_pr_usage	TEmplate/fp20_eg_push_relabel.ex.c	/^static inline void fp20_pr_usage (char **argv)$/;"	f	file:
fp20_source	TEmplate/fp20_eg_dijkstra.ex.c	/^static int32_t fp20_source=0;$/;"	v	file:
fp20_srk_usage	TEmplate/fp20_eg_shrink_graph.ex.c	/^static inline void fp20_srk_usage (char **argv)$/;"	f	file:
fp20_verbose	TEmplate/fp20_eg_dijkstra.ex.c	/^static int fp20_verbose=1;$/;"	v	file:
fp20_zeroLpNum	src/eg_lpnum.fp20.h	34;"	d
fptof10	src/eg_fp.h	191;"	d
fptof20	src/eg_fp.h	192;"	d
fptof25	src/eg_fp.h	193;"	d
fptof28	src/eg_fp.h	194;"	d
fptoi10	src/eg_fp.h	197;"	d
fptoi20	src/eg_fp.h	198;"	d
fptoi25	src/eg_fp.h	199;"	d
fptoi28	src/eg_fp.h	200;"	d
fptol10	src/eg_fp.h	203;"	d
fptol20	src/eg_fp.h	204;"	d
fptol25	src/eg_fp.h	205;"	d
fptol28	src/eg_fp.h	206;"	d
fptolf10	src/eg_fp.h	185;"	d
fptolf20	src/eg_fp.h	186;"	d
fptolf25	src/eg_fp.h	187;"	d
fptolf28	src/eg_fp.h	188;"	d
fptoll10	src/eg_fp.h	209;"	d
fptoll20	src/eg_fp.h	210;"	d
fptoll25	src/eg_fp.h	211;"	d
fptoll28	src/eg_fp.h	212;"	d
freefree	src/eg_memslab.h	/^	uint8_t freefree:1;			\/**< if non-zero, free non-used slabs *\/$/;"	m	struct:EGmemSlabPool_t
ftofp10	src/eg_fp.h	147;"	d
ftofp20	src/eg_fp.h	148;"	d
ftofp25	src/eg_fp.h	149;"	d
ftofp28	src/eg_fp.h	150;"	d
full	src/eg_memslab.h	/^	EGeList_t full;					\/**< Head of the list for fully used slabs*\/$/;"	m	struct:EGmemSlabPool_t
func	src/eg_memslab.h	/^	char const *func;				\/**< Function where the structure was initialized *\/$/;"	m	struct:EGmemSlabPool_t
fw	TEmplate/dbl_eg_push_relabel.h	/^	dbl_EGalgPRse_t fw;		\/**< forward edge, we assum that fw.type = 0 *\/$/;"	m	struct:dbl_EGalgPRedge_t
fw	TEmplate/fp20_eg_push_relabel.h	/^	fp20_EGalgPRse_t fw;		\/**< forward edge, we assum that fw.type = 0 *\/$/;"	m	struct:fp20_EGalgPRedge_t
fw	TEmplate/int32_eg_push_relabel.h	/^	int32_EGalgPRse_t fw;		\/**< forward edge, we assum that fw.type = 0 *\/$/;"	m	struct:int32_EGalgPRedge_t
fw	TEmplate/int_eg_push_relabel.h	/^	int_EGalgPRse_t fw;		\/**< forward edge, we assum that fw.type = 0 *\/$/;"	m	struct:int_EGalgPRedge_t
fw	TEmplate/ldbl_eg_push_relabel.h	/^	ldbl_EGalgPRse_t fw;		\/**< forward edge, we assum that fw.type = 0 *\/$/;"	m	struct:ldbl_EGalgPRedge_t
fw	TEmplate/mpf_eg_push_relabel.h	/^	mpf_EGalgPRse_t fw;		\/**< forward edge, we assum that fw.type = 0 *\/$/;"	m	struct:mpf_EGalgPRedge_t
fw	TEmplate/mpq_eg_push_relabel.h	/^	mpq_EGalgPRse_t fw;		\/**< forward edge, we assum that fw.type = 0 *\/$/;"	m	struct:mpq_EGalgPRedge_t
g	src/eg_simula.h	/^	EGrandState_t g;			\/**< @brief random state variable for edge\/selection *\/$/;"	m	struct:__anon108
g	src/eg_simula.h	/^	EGrandState_t g;	\/**< @brief Random number generator for the node *\/$/;"	m	struct:__anon107
g	src/eg_simula.h	/^	EGrandState_t g;	\/**< @brief random state to use for this variable *\/$/;"	m	struct:__anon106
g	src/eg_slk.ex.c	/^static EGrandState_t g;\/**< Random state to use *\/$/;"	v	file:
gcit_usage	src/eg_gcit.ex.c	/^void gcit_usage (char *program)$/;"	f
gen	src/eg_simula.h	/^	EGsimDist_f gen;			\/**< @brief Distribution function for the process time *\/$/;"	m	struct:__anon108
grsz	src/eg_raset.h	/^	int32_t grsz;	\/**< @brief number of elements in ground set *\/$/;"	m	struct:__anon100
gzFIle	src/eg_config.h	/^typedef void* gzFIle;$/;"	t
half	src/eg_memslab.h	/^	EGeList_t half;					\/**< Head of the list for half-full slabs *\/$/;"	m	struct:EGmemSlabPool_t
hash	src/eg_keytab.h	/^	int* hash;					\/**< @brief hash table for inverse mapping *\/$/;"	m	struct:__anon89
hash_sz	src/eg_keytab.h	/^	size_t hash_sz;			\/**< @brief actual size of #EGkeytab_t::hash *\/$/;"	m	struct:__anon89
head	src/eg_adgraph.h	/^	uint32_t head;$/;"	m	struct:__anon93
head	src/eg_edgraph.h	/^	EGeDgraphNode_t *head;\/**< pointer to the head node for this edge *\/$/;"	m	struct:EGeDgraphEdge_t
head_cn	src/eg_edgraph.h	/^	EGeList_t head_cn;		\/**< List member of the incomming edge list in the $/;"	m	struct:EGeDgraphEdge_t
heap_cn	src/eg_simula.h	/^	dbl_EGeHeapCn_t heap_cn;\/**< connector in the heap containing the agent *\/$/;"	m	struct:__anon109
height	src/eg_octree.h	/^	uint16_t height;			\/**<@brief ceil( max( log_2(max_x), log_2(max_y),$/;"	m	struct:__anon91
high	SoftFloat/softfloat.h	/^	  high;$/;"	m	struct:__anon96
high	SoftFloat/softfloat.h	/^	uint16_t high;$/;"	m	struct:__anon95
hit	TEmplate/dbl_eg_min_cut.h	/^	dbl_EGsrkEdge_t *hit;		\/**< Used to speed-up the Padberg-Rinaldi tests. *\/$/;"	m	struct:dbl_EGalgMCnode_t
hit	TEmplate/dbl_eg_shrink_graph.h	/^	dbl_EGsrkEdge_t *hit;			\/**< used for internal purposes, in particular, while $/;"	m	struct:dbl_EGsrkNode_t
hit	TEmplate/fp20_eg_min_cut.h	/^	fp20_EGsrkEdge_t *hit;		\/**< Used to speed-up the Padberg-Rinaldi tests. *\/$/;"	m	struct:fp20_EGalgMCnode_t
hit	TEmplate/fp20_eg_shrink_graph.h	/^	fp20_EGsrkEdge_t *hit;			\/**< used for internal purposes, in particular, while $/;"	m	struct:fp20_EGsrkNode_t
hit	TEmplate/int32_eg_min_cut.h	/^	int32_EGsrkEdge_t *hit;		\/**< Used to speed-up the Padberg-Rinaldi tests. *\/$/;"	m	struct:int32_EGalgMCnode_t
hit	TEmplate/int32_eg_shrink_graph.h	/^	int32_EGsrkEdge_t *hit;			\/**< used for internal purposes, in particular, while $/;"	m	struct:int32_EGsrkNode_t
hit	TEmplate/int_eg_min_cut.h	/^	int_EGsrkEdge_t *hit;		\/**< Used to speed-up the Padberg-Rinaldi tests. *\/$/;"	m	struct:int_EGalgMCnode_t
hit	TEmplate/int_eg_shrink_graph.h	/^	int_EGsrkEdge_t *hit;			\/**< used for internal purposes, in particular, while $/;"	m	struct:int_EGsrkNode_t
hit	TEmplate/ldbl_eg_min_cut.h	/^	ldbl_EGsrkEdge_t *hit;		\/**< Used to speed-up the Padberg-Rinaldi tests. *\/$/;"	m	struct:ldbl_EGalgMCnode_t
hit	TEmplate/ldbl_eg_shrink_graph.h	/^	ldbl_EGsrkEdge_t *hit;			\/**< used for internal purposes, in particular, while $/;"	m	struct:ldbl_EGsrkNode_t
hit	TEmplate/mpf_eg_min_cut.h	/^	mpf_EGsrkEdge_t *hit;		\/**< Used to speed-up the Padberg-Rinaldi tests. *\/$/;"	m	struct:mpf_EGalgMCnode_t
hit	TEmplate/mpf_eg_shrink_graph.h	/^	mpf_EGsrkEdge_t *hit;			\/**< used for internal purposes, in particular, while $/;"	m	struct:mpf_EGsrkNode_t
hit	TEmplate/mpq_eg_min_cut.h	/^	mpq_EGsrkEdge_t *hit;		\/**< Used to speed-up the Padberg-Rinaldi tests. *\/$/;"	m	struct:mpq_EGalgMCnode_t
hit	TEmplate/mpq_eg_shrink_graph.h	/^	mpq_EGsrkEdge_t *hit;			\/**< used for internal purposes, in particular, while $/;"	m	struct:mpq_EGsrkNode_t
hname	src/eg_net.ex.c	/^static char *hname = 0;$/;"	v	file:
hp	src/eg_simula.h	/^	dbl_EGeHeap_t hp;	\/**< Heap containing events to be processed *\/$/;"	m	struct:__anon110
id	TEmplate/dbl_eg_min_cut.h	/^	unsigned int id;		\/**< External Identifier for the node *\/$/;"	m	struct:dbl_EGalgMCnode_t
id	TEmplate/dbl_eg_min_cut.h	/^	unsigned int id;	\/**< External Identifier for the edge *\/$/;"	m	struct:dbl_EGalgMCedge_t
id	TEmplate/fp20_eg_min_cut.h	/^	unsigned int id;		\/**< External Identifier for the node *\/$/;"	m	struct:fp20_EGalgMCnode_t
id	TEmplate/fp20_eg_min_cut.h	/^	unsigned int id;	\/**< External Identifier for the edge *\/$/;"	m	struct:fp20_EGalgMCedge_t
id	TEmplate/int32_eg_min_cut.h	/^	unsigned int id;		\/**< External Identifier for the node *\/$/;"	m	struct:int32_EGalgMCnode_t
id	TEmplate/int32_eg_min_cut.h	/^	unsigned int id;	\/**< External Identifier for the edge *\/$/;"	m	struct:int32_EGalgMCedge_t
id	TEmplate/int_eg_min_cut.h	/^	unsigned int id;		\/**< External Identifier for the node *\/$/;"	m	struct:int_EGalgMCnode_t
id	TEmplate/int_eg_min_cut.h	/^	unsigned int id;	\/**< External Identifier for the edge *\/$/;"	m	struct:int_EGalgMCedge_t
id	TEmplate/ldbl_eg_min_cut.h	/^	unsigned int id;		\/**< External Identifier for the node *\/$/;"	m	struct:ldbl_EGalgMCnode_t
id	TEmplate/ldbl_eg_min_cut.h	/^	unsigned int id;	\/**< External Identifier for the edge *\/$/;"	m	struct:ldbl_EGalgMCedge_t
id	TEmplate/mpf_eg_min_cut.h	/^	unsigned int id;		\/**< External Identifier for the node *\/$/;"	m	struct:mpf_EGalgMCnode_t
id	TEmplate/mpf_eg_min_cut.h	/^	unsigned int id;	\/**< External Identifier for the edge *\/$/;"	m	struct:mpf_EGalgMCedge_t
id	TEmplate/mpq_eg_min_cut.h	/^	unsigned int id;		\/**< External Identifier for the node *\/$/;"	m	struct:mpq_EGalgMCnode_t
id	TEmplate/mpq_eg_min_cut.h	/^	unsigned int id;	\/**< External Identifier for the edge *\/$/;"	m	struct:mpq_EGalgMCedge_t
id	src/eg_edgraph.ex.c	/^	int id;$/;"	m	struct:my_dedge_t	file:
id	src/eg_edgraph.ex.c	/^	int id;$/;"	m	struct:my_dgraph_t	file:
id	src/eg_edgraph.ex.c	/^	int id;$/;"	m	struct:my_dnode_t	file:
id	src/eg_eugraph.ex.c	/^	int id;$/;"	m	struct:my_uedge_t	file:
id	src/eg_eugraph.ex.c	/^	int id;$/;"	m	struct:my_ugraph_t	file:
id	src/eg_eugraph.ex.c	/^	int id;$/;"	m	struct:my_unode_t	file:
in_beg	src/eg_adgraph.h	/^	uint32_t in_beg;	\/**< @brief beginning of index array of incomming edges *\/$/;"	m	struct:__anon92
in_edge	src/eg_edgraph.h	/^	EGeList_t in_edge;	\/**< List head for a list of incomming edges *\/$/;"	m	struct:EGeDgraphNode_t
in_size	src/eg_edgraph.h	/^	unsigned in_size;		\/**< Number of incomming edges *\/$/;"	m	struct:EGeDgraphNode_t
in_sz	src/eg_adgraph.h	/^	uint32_t in_sz;		\/**< @brief number of incomming edges *\/$/;"	m	struct:__anon92
in_sz	src/eg_net.h	/^	unsigned int in_sz;	\/**< received bytes without syncronization. *\/$/;"	m	struct:__anon85
input	src/eg_simula.ex.c	/^FILE* input;\/**< input stream *\/$/;"	v
input	src/eg_simula2.ex.c	/^FILE* input;\/**< input stream *\/$/;"	v
input	src/eg_slk.ex.c	/^EGioFile_t* input = 0;\/**< input stream *\/$/;"	v
int32_DJK_DEBUG_	TEmplate/int32_eg_dijkstra.h	44;"	d
int32_DJK_VRBLVL_	TEmplate/int32_eg_dijkstra.h	40;"	d
int32_EG_ABHEAP_DEBUG	TEmplate/int32_eg_abheap.h	53;"	d
int32_EG_ABHEAP_POISON	TEmplate/int32_eg_abheap.h	81;"	d
int32_EG_ABKHEAP_DEBUG	TEmplate/int32_eg_abkheap.h	53;"	d
int32_EG_ABKHEAP_ENTRY	TEmplate/int32_eg_abkheap.h	70;"	d
int32_EG_ABKHEAP_POISON	TEmplate/int32_eg_abkheap.h	85;"	d
int32_EG_AHEAP_DEBUG	TEmplate/int32_eg_aheap.h	52;"	d
int32_EG_AHEAP_POISON	TEmplate/int32_eg_aheap.h	80;"	d
int32_EG_BSRED_CALLS	TEmplate/int32_eg_dbasis_red.h	62;"	d
int32_EG_BSRED_INTR	TEmplate/int32_eg_dbasis_red.h	72;"	d
int32_EG_BSRED_ITT	TEmplate/int32_eg_dbasis_red.h	77;"	d
int32_EG_BSRED_SZRED	TEmplate/int32_eg_dbasis_red.h	67;"	d
int32_EG_DBSRED_ALPHA	TEmplate/int32_eg_dbasis_red.h	97;"	d
int32_EG_DBSRED_VERBOSE	TEmplate/int32_eg_dbasis_red.h	50;"	d
int32_EG_EHEAP_DEBUG	TEmplate/int32_eg_eheap.h	66;"	d
int32_EG_EHEAP_POISON	TEmplate/int32_eg_eheap.h	94;"	d
int32_EG_EKHEAP_DEBUG	TEmplate/int32_eg_ekheap.h	60;"	d
int32_EG_EKHEAP_ENTRY	TEmplate/int32_eg_ekheap.h	77;"	d
int32_EG_EKHEAP_POISON	TEmplate/int32_eg_ekheap.h	93;"	d
int32_EG_PR_RELABEL	TEmplate/int32_eg_push_relabel.h	114;"	d
int32_EG_PR_RELABEL_FREC	TEmplate/int32_eg_push_relabel.h	120;"	d
int32_EG_SRK_DEBUG	TEmplate/int32_eg_shrink_graph.h	57;"	d
int32_EGaBKheapAdd	TEmplate/int32_eg_abkheap.h	240;"	d
int32_EGaBKheapCHECK_CN	TEmplate/int32_eg_abkheap.h	60;"	d
int32_EGaBKheapCHECK_CN	TEmplate/int32_eg_abkheap.h	63;"	d
int32_EGaBKheapCHECK_NF	TEmplate/int32_eg_abkheap.h	61;"	d
int32_EGaBKheapCHECK_NF	TEmplate/int32_eg_abkheap.h	64;"	d
int32_EGaBKheapChangeVal	TEmplate/int32_eg_abkheap.h	318;"	d
int32_EGaBKheapClear	TEmplate/int32_eg_abkheap.h	170;"	d
int32_EGaBKheapCnClear	TEmplate/int32_eg_abkheap.h	127;"	d
int32_EGaBKheapCnInit	TEmplate/int32_eg_abkheap.h	110;"	d
int32_EGaBKheapCnReset	TEmplate/int32_eg_abkheap.h	121;"	d
int32_EGaBKheapCn_t	TEmplate/int32_eg_abkheap.h	/^int32_EGaBKheapCn_t;$/;"	t	typeref:struct:__anon34
int32_EGaBKheapCopyVal	TEmplate/int32_eg_abkheap.h	305;"	d
int32_EGaBKheapDel	TEmplate/int32_eg_abkheap.h	339;"	d
int32_EGaBKheapEmpty	TEmplate/int32_eg_abkheap.h	150;"	d
int32_EGaBKheapFatherId	TEmplate/int32_eg_abkheap.h	199;"	d
int32_EGaBKheapFirstChildId	TEmplate/int32_eg_abkheap.h	254;"	d
int32_EGaBKheapGetMin	TEmplate/int32_eg_abkheap.h	178;"	d
int32_EGaBKheapInit	TEmplate/int32_eg_abkheap.h	156;"	d
int32_EGaBKheapIsFull	TEmplate/int32_eg_abkheap.h	144;"	d
int32_EGaBKheapIsLess	TEmplate/int32_eg_abkheap.h	92;"	d
int32_EGaBKheapReset	TEmplate/int32_eg_abkheap.h	163;"	d
int32_EGaBKheapResize	TEmplate/int32_eg_abkheap.h	189;"	d
int32_EGaBKheap_t	TEmplate/int32_eg_abkheap.h	/^int32_EGaBKheap_t;$/;"	t	typeref:struct:__anon35
int32_EGaBheapAdd	TEmplate/int32_eg_abheap.h	215;"	d
int32_EGaBheapCHECK_CN	TEmplate/int32_eg_abheap.h	60;"	d
int32_EGaBheapCHECK_CN	TEmplate/int32_eg_abheap.h	63;"	d
int32_EGaBheapCHECK_NF	TEmplate/int32_eg_abheap.h	61;"	d
int32_EGaBheapCHECK_NF	TEmplate/int32_eg_abheap.h	64;"	d
int32_EGaBheapChangeVal	TEmplate/int32_eg_abheap.h	283;"	d
int32_EGaBheapClear	TEmplate/int32_eg_abheap.h	145;"	d
int32_EGaBheapCnClear	TEmplate/int32_eg_abheap.h	103;"	d
int32_EGaBheapCnInit	TEmplate/int32_eg_abheap.h	89;"	d
int32_EGaBheapCnReset	TEmplate/int32_eg_abheap.h	96;"	d
int32_EGaBheapCn_t	TEmplate/int32_eg_abheap.h	/^int32_EGaBheapCn_t;$/;"	t	typeref:struct:__anon36
int32_EGaBheapDel	TEmplate/int32_eg_abheap.h	306;"	d
int32_EGaBheapEmpty	TEmplate/int32_eg_abheap.h	125;"	d
int32_EGaBheapFatherId	TEmplate/int32_eg_abheap.h	174;"	d
int32_EGaBheapFirstChildId	TEmplate/int32_eg_abheap.h	229;"	d
int32_EGaBheapGetMin	TEmplate/int32_eg_abheap.h	153;"	d
int32_EGaBheapInit	TEmplate/int32_eg_abheap.h	131;"	d
int32_EGaBheapIsFull	TEmplate/int32_eg_abheap.h	119;"	d
int32_EGaBheapReset	TEmplate/int32_eg_abheap.h	138;"	d
int32_EGaBheapResize	TEmplate/int32_eg_abheap.h	164;"	d
int32_EGaBheap_t	TEmplate/int32_eg_abheap.h	/^int32_EGaBheap_t;$/;"	t	typeref:struct:__anon37
int32_EGaHeapAdd	TEmplate/int32_eg_aheap.h	227;"	d
int32_EGaHeapCHECK_CN	TEmplate/int32_eg_aheap.h	59;"	d
int32_EGaHeapCHECK_CN	TEmplate/int32_eg_aheap.h	62;"	d
int32_EGaHeapCHECK_NF	TEmplate/int32_eg_aheap.h	60;"	d
int32_EGaHeapCHECK_NF	TEmplate/int32_eg_aheap.h	63;"	d
int32_EGaHeapChangeVal	TEmplate/int32_eg_aheap.h	296;"	d
int32_EGaHeapClear	TEmplate/int32_eg_aheap.h	146;"	d
int32_EGaHeapCnClear	TEmplate/int32_eg_aheap.h	102;"	d
int32_EGaHeapCnInit	TEmplate/int32_eg_aheap.h	88;"	d
int32_EGaHeapCnReset	TEmplate/int32_eg_aheap.h	95;"	d
int32_EGaHeapCn_t	TEmplate/int32_eg_aheap.h	/^int32_EGaHeapCn_t;$/;"	t	typeref:struct:__anon38
int32_EGaHeapDel	TEmplate/int32_eg_aheap.h	319;"	d
int32_EGaHeapEmpty	TEmplate/int32_eg_aheap.h	125;"	d
int32_EGaHeapFatherId	TEmplate/int32_eg_aheap.h	186;"	d
int32_EGaHeapFirstChildId	TEmplate/int32_eg_aheap.h	241;"	d
int32_EGaHeapGetMin	TEmplate/int32_eg_aheap.h	164;"	d
int32_EGaHeapGetMinVal	TEmplate/int32_eg_aheap.h	154;"	d
int32_EGaHeapInit	TEmplate/int32_eg_aheap.h	132;"	d
int32_EGaHeapIsFull	TEmplate/int32_eg_aheap.h	119;"	d
int32_EGaHeapReset	TEmplate/int32_eg_aheap.h	139;"	d
int32_EGaHeapResize	TEmplate/int32_eg_aheap.h	175;"	d
int32_EGaHeap_t	TEmplate/int32_eg_aheap.h	/^int32_EGaHeap_t;$/;"	t	typeref:struct:__anon39
int32_EGalgDJK	TEmplate/int32_eg_dijkstra.c	/^int int32_EGalgDJK ($/;"	f
int32_EGalgMC	TEmplate/int32_eg_min_cut.c	/^int int32_EGalgMC (int32_EGalgMCgraph_t * const G,$/;"	f
int32_EGalgMCbuildPRgraph	TEmplate/int32_eg_min_cut.c	/^static inline int int32_EGalgMCbuildPRgraph (int32_EGalgMCgraph_t * const mcG,$/;"	f	file:
int32_EGalgMCcbkClear	TEmplate/int32_eg_min_cut.h	132;"	d
int32_EGalgMCcbkInit	TEmplate/int32_eg_min_cut.h	122;"	d
int32_EGalgMCcbk_t	TEmplate/int32_eg_min_cut.h	/^int32_EGalgMCcbk_t;$/;"	t	typeref:struct:int32_EGalgMCcbk_t
int32_EGalgMCcbk_t	TEmplate/int32_eg_min_cut.h	/^typedef struct int32_EGalgMCcbk_t$/;"	s
int32_EGalgMCcomputeT	TEmplate/int32_eg_min_cut.c	/^static inline int int32_EGalgMCcomputeT (int32_EGalgPRgraph_t * const prG,$/;"	f	file:
int32_EGalgMCdo_f	TEmplate/int32_eg_min_cut.h	/^typedef int (*int32_EGalgMCdo_f) (int32_t,$/;"	t
int32_EGalgMCedgeClear	TEmplate/int32_eg_min_cut.h	186;"	d
int32_EGalgMCedgeInit	TEmplate/int32_eg_min_cut.h	177;"	d
int32_EGalgMCedge_t	TEmplate/int32_eg_min_cut.h	/^int32_EGalgMCedge_t;$/;"	t	typeref:struct:int32_EGalgMCedge_t
int32_EGalgMCedge_t	TEmplate/int32_eg_min_cut.h	/^typedef struct int32_EGalgMCedge_t$/;"	s
int32_EGalgMCexpandNode	TEmplate/int32_eg_min_cut.c	/^static inline int int32_EGalgMCexpandNode (unsigned int *const cut,$/;"	f	file:
int32_EGalgMCgraphClear	TEmplate/int32_eg_min_cut.h	246;"	d
int32_EGalgMCgraphInit	TEmplate/int32_eg_min_cut.h	225;"	d
int32_EGalgMCgraph_t	TEmplate/int32_eg_min_cut.h	/^int32_EGalgMCgraph_t;$/;"	t	typeref:struct:int32_EGalgMCgraph_t
int32_EGalgMCgraph_t	TEmplate/int32_eg_min_cut.h	/^typedef struct int32_EGalgMCgraph_t$/;"	s
int32_EGalgMCidentifyNodes	TEmplate/int32_eg_min_cut.h	256;"	d
int32_EGalgMCidentifyPRedges	TEmplate/int32_eg_min_cut.c	/^int int32_EGalgMCidentifyPRedges (int32_EGalgMCgraph_t * const G,$/;"	f
int32_EGalgMCnodeClear	TEmplate/int32_eg_min_cut.h	163;"	d
int32_EGalgMCnodeInit	TEmplate/int32_eg_min_cut.h	150;"	d
int32_EGalgMCnode_t	TEmplate/int32_eg_min_cut.h	/^int32_EGalgMCnode_t;$/;"	t	typeref:struct:int32_EGalgMCnode_t
int32_EGalgMCnode_t	TEmplate/int32_eg_min_cut.h	/^typedef struct int32_EGalgMCnode_t$/;"	s
int32_EGalgMCprofile	TEmplate/int32_eg_min_cut.c	/^void int32_EGalgMCprofile(void)$/;"	f
int32_EGalgMCtestNode	TEmplate/int32_eg_min_cut.c	/^static inline int int32_EGalgMCtestNode (int32_EGalgMCgraph_t * const G,$/;"	f	file:
int32_EGalgPRcomputeLabels	TEmplate/int32_eg_push_relabel.c	/^static inline int int32_EGalgPRcomputeLabels (int32_EGalgPRgraph_t * const G,$/;"	f	file:
int32_EGalgPRedgeClear	TEmplate/int32_eg_push_relabel.h	236;"	d
int32_EGalgPRedgeInit	TEmplate/int32_eg_push_relabel.h	208;"	d
int32_EGalgPRedgeReset	TEmplate/int32_eg_push_relabel.h	225;"	d
int32_EGalgPRedge_t	TEmplate/int32_eg_push_relabel.h	/^int32_EGalgPRedge_t;$/;"	t	typeref:struct:int32_EGalgPRedge_t
int32_EGalgPRedge_t	TEmplate/int32_eg_push_relabel.h	/^typedef struct int32_EGalgPRedge_t$/;"	s
int32_EGalgPRglobalRelabel	TEmplate/int32_eg_push_relabel.c	/^static inline int int32_EGalgPRglobalRelabel (int32_EGalgPRgraph_t * const G,$/;"	f	file:
int32_EGalgPRgraphClear	TEmplate/int32_eg_push_relabel.h	269;"	d
int32_EGalgPRgraphInit	TEmplate/int32_eg_push_relabel.h	256;"	d
int32_EGalgPRgraphReset	TEmplate/int32_eg_push_relabel.h	264;"	d
int32_EGalgPRgraph_t	TEmplate/int32_eg_push_relabel.h	/^int32_EGalgPRgraph_t;$/;"	t	typeref:struct:int32_EGalgPRgraph_t
int32_EGalgPRgraph_t	TEmplate/int32_eg_push_relabel.h	/^typedef struct int32_EGalgPRgraph_t$/;"	s
int32_EGalgPRmaxSTflow	TEmplate/int32_eg_push_relabel.c	/^int int32_EGalgPRmaxSTflow (int32_EGalgPRgraph_t * const G,$/;"	f
int32_EGalgPRminSTcut	TEmplate/int32_eg_push_relabel.c	/^int int32_EGalgPRminSTcut (int32_EGalgPRgraph_t * const G,$/;"	f
int32_EGalgPRnodeClear	TEmplate/int32_eg_push_relabel.h	169;"	d
int32_EGalgPRnodeInit	TEmplate/int32_eg_push_relabel.h	153;"	d
int32_EGalgPRnodeReset	TEmplate/int32_eg_push_relabel.h	164;"	d
int32_EGalgPRnode_t	TEmplate/int32_eg_push_relabel.h	/^int32_EGalgPRnode_t;$/;"	t	typeref:struct:int32_EGalgPRnode_t
int32_EGalgPRnode_t	TEmplate/int32_eg_push_relabel.h	/^typedef struct int32_EGalgPRnode_t$/;"	s
int32_EGalgPRnumb	TEmplate/int32_eg_push_relabel.c	/^static inline int int32_EGalgPRnumb (const unsigned int hole,$/;"	f	file:
int32_EGalgPRoptimalityTest	TEmplate/int32_eg_push_relabel.c	/^int int32_EGalgPRoptimalityTest (int32_EGalgPRgraph_t * const G,$/;"	f
int32_EGalgPRpreprocess	TEmplate/int32_eg_push_relabel.c	/^static inline int int32_EGalgPRpreprocess (int32_EGalgPRgraph_t * const G,$/;"	f	file:
int32_EGalgPRprofile	TEmplate/int32_eg_push_relabel.c	/^void int32_EGalgPRprofile(void)$/;"	f
int32_EGalgPRpush	TEmplate/int32_eg_push_relabel.c	/^static inline int int32_EGalgPRpush (int32_EGalgPRse_t * const edge_pt,$/;"	f	file:
int32_EGalgPRpushRelabel	TEmplate/int32_eg_push_relabel.c	/^static int int32_EGalgPRpushRelabel (int32_EGalgPRnode_t * const node_pt,$/;"	f	file:
int32_EGalgPRse_t	TEmplate/int32_eg_push_relabel.h	/^int32_EGalgPRse_t;$/;"	t	typeref:struct:int32_EGalgPRse_t
int32_EGalgPRse_t	TEmplate/int32_eg_push_relabel.h	/^typedef struct int32_EGalgPRse_t$/;"	s
int32_EGdBsRed	TEmplate/int32_eg_dbasis_red.c	/^int int32_EGdBsRed (int32_EGdBsRed_t * const bsred,$/;"	f
int32_EGdBsRedAddElement	TEmplate/int32_eg_dbasis_red.h	159;"	d
int32_EGdBsRedBuildGM	TEmplate/int32_eg_dbasis_red.c	/^static void int32_EGdBsRedBuildGM (int32_EGdMatrix_t * const GM,$/;"	f	file:
int32_EGdBsRedClear	TEmplate/int32_eg_dbasis_red.h	133;"	d
int32_EGdBsRedInit	TEmplate/int32_eg_dbasis_red.h	124;"	d
int32_EGdBsRedProfile	TEmplate/int32_eg_dbasis_red.h	83;"	d
int32_EGdBsRedReset	TEmplate/int32_eg_dbasis_red.h	144;"	d
int32_EGdBsRedSetLength	TEmplate/int32_eg_dbasis_red.h	152;"	d
int32_EGdBsRedStats	TEmplate/int32_eg_dbasis_red.c	/^uintmax_t int32_EGdBsRedStats[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
int32_EGdBsRed_t	TEmplate/int32_eg_dbasis_red.h	/^int32_EGdBsRed_t;$/;"	t	typeref:struct:int32_EGdBsRed_t
int32_EGdBsRed_t	TEmplate/int32_eg_dbasis_red.h	/^typedef struct int32_EGdBsRed_t$/;"	s
int32_EGdMatrixAddColMultiple	TEmplate/int32_eg_dmatrix.h	238;"	d
int32_EGdMatrixAddRowMultiple	TEmplate/int32_eg_dmatrix.h	165;"	d
int32_EGdMatrixClear	TEmplate/int32_eg_dmatrix.h	82;"	d
int32_EGdMatrixDisplay	TEmplate/int32_eg_dmatrix.h	124;"	d
int32_EGdMatrixGaussianElimination	TEmplate/int32_eg_dmatrix.c	/^int int32_EGdMatrixGaussianElimination (int32_EGdMatrix_t * const dmatrix,$/;"	f
int32_EGdMatrixInit	TEmplate/int32_eg_dmatrix.h	74;"	d
int32_EGdMatrixMultiplyCol	TEmplate/int32_eg_dmatrix.h	287;"	d
int32_EGdMatrixMultiplyRow	TEmplate/int32_eg_dmatrix.h	213;"	d
int32_EGdMatrixSetDimension	TEmplate/int32_eg_dmatrix.h	98;"	d
int32_EGdMatrixSubColMultiple	TEmplate/int32_eg_dmatrix.h	266;"	d
int32_EGdMatrixSubRowMultiple	TEmplate/int32_eg_dmatrix.h	193;"	d
int32_EGdMatrix_t	TEmplate/int32_eg_dmatrix.h	/^int32_EGdMatrix_t;$/;"	t	typeref:struct:int32_EGdMatrix_t
int32_EGdMatrix_t	TEmplate/int32_eg_dmatrix.h	/^typedef struct int32_EGdMatrix_t$/;"	s
int32_EGeHeapAdd	TEmplate/int32_eg_eheap.h	233;"	d
int32_EGeHeapCHECK_CN	TEmplate/int32_eg_eheap.h	73;"	d
int32_EGeHeapCHECK_CN	TEmplate/int32_eg_eheap.h	76;"	d
int32_EGeHeapCHECK_NF	TEmplate/int32_eg_eheap.h	74;"	d
int32_EGeHeapCHECK_NF	TEmplate/int32_eg_eheap.h	77;"	d
int32_EGeHeapChangeD	TEmplate/int32_eg_eheap.h	353;"	d
int32_EGeHeapChangeVal	TEmplate/int32_eg_eheap.h	298;"	d
int32_EGeHeapCheck	TEmplate/int32_eg_eheap.h	327;"	d
int32_EGeHeapCheck	TEmplate/int32_eg_eheap.h	343;"	d
int32_EGeHeapClear	TEmplate/int32_eg_eheap.h	159;"	d
int32_EGeHeapCnClear	TEmplate/int32_eg_eheap.h	116;"	d
int32_EGeHeapCnInit	TEmplate/int32_eg_eheap.h	102;"	d
int32_EGeHeapCnReset	TEmplate/int32_eg_eheap.h	109;"	d
int32_EGeHeapCn_t	TEmplate/int32_eg_eheap.h	/^int32_EGeHeapCn_t;$/;"	t	typeref:struct:__anon40
int32_EGeHeapDel	TEmplate/int32_eg_eheap.h	308;"	d
int32_EGeHeapEmpty	TEmplate/int32_eg_eheap.h	139;"	d
int32_EGeHeapFatherId	TEmplate/int32_eg_eheap.h	199;"	d
int32_EGeHeapFirstChildId	TEmplate/int32_eg_eheap.h	246;"	d
int32_EGeHeapGetMin	TEmplate/int32_eg_eheap.h	177;"	d
int32_EGeHeapGetMinVal	TEmplate/int32_eg_eheap.h	167;"	d
int32_EGeHeapInit	TEmplate/int32_eg_eheap.h	145;"	d
int32_EGeHeapIsFull	TEmplate/int32_eg_eheap.h	133;"	d
int32_EGeHeapResize	TEmplate/int32_eg_eheap.h	188;"	d
int32_EGeHeapSiftDown	TEmplate/int32_eg_eheap.h	256;"	d
int32_EGeHeapSiftUp	TEmplate/int32_eg_eheap.h	207;"	d
int32_EGeHeap_t	TEmplate/int32_eg_eheap.h	/^int32_EGeHeap_t;$/;"	t	typeref:struct:__anon41
int32_EGeHepReset	TEmplate/int32_eg_eheap.h	152;"	d
int32_EGeKHeapAdd	TEmplate/int32_eg_ekheap.h	285;"	d
int32_EGeKHeapCHECK_CN	TEmplate/int32_eg_ekheap.h	67;"	d
int32_EGeKHeapCHECK_CN	TEmplate/int32_eg_ekheap.h	70;"	d
int32_EGeKHeapCHECK_NF	TEmplate/int32_eg_ekheap.h	68;"	d
int32_EGeKHeapCHECK_NF	TEmplate/int32_eg_ekheap.h	71;"	d
int32_EGeKHeapChangeD	TEmplate/int32_eg_ekheap.h	408;"	d
int32_EGeKHeapChangeVal	TEmplate/int32_eg_ekheap.h	351;"	d
int32_EGeKHeapCheck	TEmplate/int32_eg_ekheap.h	381;"	d
int32_EGeKHeapCheck	TEmplate/int32_eg_ekheap.h	398;"	d
int32_EGeKHeapClear	TEmplate/int32_eg_ekheap.h	166;"	d
int32_EGeKHeapCnClear	TEmplate/int32_eg_ekheap.h	120;"	d
int32_EGeKHeapCnInit	TEmplate/int32_eg_ekheap.h	101;"	d
int32_EGeKHeapCnReset	TEmplate/int32_eg_ekheap.h	113;"	d
int32_EGeKHeapCn_t	TEmplate/int32_eg_ekheap.h	/^int32_EGeKHeapCn_t;$/;"	t	typeref:struct:__anon42
int32_EGeKHeapCopyVal	TEmplate/int32_eg_ekheap.c	/^void int32_EGeKHeapCopyVal(int32_t*const dst, const int32_t*const src)$/;"	f
int32_EGeKHeapDel	TEmplate/int32_eg_ekheap.h	362;"	d
int32_EGeKHeapEmpty	TEmplate/int32_eg_ekheap.h	146;"	d
int32_EGeKHeapFatherId	TEmplate/int32_eg_ekheap.h	223;"	d
int32_EGeKHeapFirstChildId	TEmplate/int32_eg_ekheap.h	298;"	d
int32_EGeKHeapGetMin	TEmplate/int32_eg_ekheap.h	201;"	d
int32_EGeKHeapGetMinKVal	TEmplate/int32_eg_ekheap.h	188;"	d
int32_EGeKHeapGetMinVal	TEmplate/int32_eg_ekheap.h	177;"	d
int32_EGeKHeapInit	TEmplate/int32_eg_ekheap.h	152;"	d
int32_EGeKHeapIsFull	TEmplate/int32_eg_ekheap.h	140;"	d
int32_EGeKHeapIsLess	TEmplate/int32_eg_ekheap.h	231;"	d
int32_EGeKHeapResize	TEmplate/int32_eg_ekheap.h	212;"	d
int32_EGeKHeapSiftDown	TEmplate/int32_eg_ekheap.h	308;"	d
int32_EGeKHeapSiftUp	TEmplate/int32_eg_ekheap.h	259;"	d
int32_EGeKHeap_t	TEmplate/int32_eg_ekheap.h	/^int32_EGeKHeap_t;$/;"	t	typeref:struct:__anon43
int32_EGeKHepReset	TEmplate/int32_eg_ekheap.h	159;"	d
int32_EGguReadXgraph	TEmplate/int32_eg_dijkstra.c	/^int int32_EGguReadXgraph($/;"	f
int32_EGlpNumAddInnProdTo	src/eg_lpnum.int32.h	354;"	d
int32_EGlpNumAddTo	src/eg_lpnum.int32.h	384;"	d
int32_EGlpNumAddUiTo	src/eg_lpnum.int32.h	374;"	d
int32_EGlpNumAllocArray	src/eg_lpnum.int32.h	80;"	d
int32_EGlpNumCeil	src/eg_lpnum.int32.h	99;"	d
int32_EGlpNumClearVar	src/eg_lpnum.int32.h	480;"	d
int32_EGlpNumCopy	src/eg_lpnum.int32.h	256;"	d
int32_EGlpNumCopyAbs	src/eg_lpnum.int32.h	294;"	d
int32_EGlpNumCopyArray	src/eg_lpnum.int32.h	332;"	d
int32_EGlpNumCopyDiff	src/eg_lpnum.int32.h	238;"	d
int32_EGlpNumCopyDiffRatio	src/eg_lpnum.int32.h	229;"	d
int32_EGlpNumCopyFrac	src/eg_lpnum.int32.h	316;"	d
int32_EGlpNumCopyNeg	src/eg_lpnum.int32.h	306;"	d
int32_EGlpNumCopySqrOver	src/eg_lpnum.int32.h	282;"	d
int32_EGlpNumCopySum	src/eg_lpnum.int32.h	247;"	d
int32_EGlpNumDivTo	src/eg_lpnum.int32.h	417;"	d
int32_EGlpNumDivUiTo	src/eg_lpnum.int32.h	428;"	d
int32_EGlpNumFloor	src/eg_lpnum.int32.h	104;"	d
int32_EGlpNumFreeArray	src/eg_lpnum.int32.h	57;"	d
int32_EGlpNumGetStr	src/eg_lpnum.int32.h	47;"	d
int32_EGlpNumInitVar	src/eg_lpnum.int32.h	476;"	d
int32_EGlpNumInnProd	TEmplate/int32_eg_numutil.h	54;"	d
int32_EGlpNumInv	src/eg_lpnum.int32.h	110;"	d
int32_EGlpNumIsDiffLess	src/eg_lpnum.int32.h	186;"	d
int32_EGlpNumIsEqqual	src/eg_lpnum.int32.h	120;"	d
int32_EGlpNumIsEqual	src/eg_lpnum.int32.h	133;"	d
int32_EGlpNumIsGreaDbl	src/eg_lpnum.int32.h	208;"	d
int32_EGlpNumIsGreatZero	src/eg_lpnum.int32.h	144;"	d
int32_EGlpNumIsLeq	src/eg_lpnum.int32.h	219;"	d
int32_EGlpNumIsLess	src/eg_lpnum.int32.h	162;"	d
int32_EGlpNumIsLessDbl	src/eg_lpnum.int32.h	197;"	d
int32_EGlpNumIsLessZero	src/eg_lpnum.int32.h	151;"	d
int32_EGlpNumIsNeq	src/eg_lpnum.int32.h	134;"	d
int32_EGlpNumIsNeqZero	src/eg_lpnum.int32.h	136;"	d
int32_EGlpNumIsNeqq	src/eg_lpnum.int32.h	135;"	d
int32_EGlpNumIsNeqqZero	src/eg_lpnum.int32.h	137;"	d
int32_EGlpNumIsSumLess	src/eg_lpnum.int32.h	174;"	d
int32_EGlpNumMultTo	src/eg_lpnum.int32.h	406;"	d
int32_EGlpNumMultUiTo	src/eg_lpnum.int32.h	439;"	d
int32_EGlpNumOne	src/eg_lpnum.int32.h	455;"	d
int32_EGlpNumReadStr	src/eg_lpnum.int32.h	39;"	d
int32_EGlpNumReallocArray	src/eg_lpnum.int32.h	62;"	d
int32_EGlpNumSet	src/eg_lpnum.int32.h	94;"	d
int32_EGlpNumSetToMaxAbs	src/eg_lpnum.int32.h	266;"	d
int32_EGlpNumSetToMinAbs	src/eg_lpnum.int32.h	269;"	d
int32_EGlpNumSign	src/eg_lpnum.int32.h	463;"	d
int32_EGlpNumSubInnProdTo	src/eg_lpnum.int32.h	343;"	d
int32_EGlpNumSubTo	src/eg_lpnum.int32.h	395;"	d
int32_EGlpNumSubUiTo	src/eg_lpnum.int32.h	364;"	d
int32_EGlpNumToLf	src/eg_lpnum.int32.h	472;"	d
int32_EGlpNumZero	src/eg_lpnum.int32.h	447;"	d
int32_EGsrkAddEdge	TEmplate/int32_eg_shrink_graph.h	177;"	d
int32_EGsrkAddNode	TEmplate/int32_eg_shrink_graph.h	165;"	d
int32_EGsrkEdgeClear	TEmplate/int32_eg_shrink_graph.h	120;"	d
int32_EGsrkEdgeInit	TEmplate/int32_eg_shrink_graph.h	108;"	d
int32_EGsrkEdge_t	TEmplate/int32_eg_shrink_graph.h	/^int32_EGsrkEdge_t;$/;"	t	typeref:struct:int32_EGsrkEdge_t
int32_EGsrkEdge_t	TEmplate/int32_eg_shrink_graph.h	/^typedef struct int32_EGsrkEdge_t$/;"	s
int32_EGsrkGraphClear	TEmplate/int32_eg_shrink_graph.h	136;"	d
int32_EGsrkGraphInit	TEmplate/int32_eg_shrink_graph.h	127;"	d
int32_EGsrkGraph_t	TEmplate/int32_eg_shrink_graph.h	/^int32_EGsrkGraph_t;$/;"	t	typeref:struct:int32_EGsrkGraph_t
int32_EGsrkGraph_t	TEmplate/int32_eg_shrink_graph.h	/^typedef struct int32_EGsrkGraph_t$/;"	s
int32_EGsrkIdentifyNodes	TEmplate/int32_eg_shrink_graph.c	/^int32_EGsrkNode_t *int32_EGsrkIdentifyNodes (int32_EGsrkGraph_t * const G,$/;"	f
int32_EGsrkNodeClear	TEmplate/int32_eg_shrink_graph.h	155;"	d
int32_EGsrkNodeInit	TEmplate/int32_eg_shrink_graph.h	141;"	d
int32_EGsrkNode_t	TEmplate/int32_eg_shrink_graph.h	/^int32_EGsrkNode_t;$/;"	t	typeref:struct:int32_EGsrkNode_t
int32_EGsrkNode_t	TEmplate/int32_eg_shrink_graph.h	/^typedef struct int32_EGsrkNode_t$/;"	s
int32_EGutilPermSort	TEmplate/int32_eg_numutil.c	/^void int32_EGutilPermSort (const size_t sz,$/;"	f
int32_EGutilPermSort2	TEmplate/int32_eg_numutil.c	/^void int32_EGutilPermSort2 (const size_t sz,$/;"	f
int32_HILBERT_TABLE_SIZE	TEmplate/int32_eg_dmatrix.ex.c	45;"	d	file:
int32_MaxLpNum	src/eg_lpnum.int32.h	33;"	d
int32_MinLpNum	src/eg_lpnum.int32.h	34;"	d
int32_UPDATE	TEmplate/int32_eg_min_cut.c	50;"	d	file:
int32_UPDATE	TEmplate/int32_eg_min_cut.c	52;"	d	file:
int32_UPDATE	TEmplate/int32_eg_push_relabel.c	51;"	d	file:
int32_UPDATE	TEmplate/int32_eg_push_relabel.c	53;"	d	file:
int32__EG_MIN_CUT_H	TEmplate/int32_eg_min_cut.h	62;"	d
int32__EGalgMChitNeighbours	TEmplate/int32_eg_min_cut.c	135;"	d	file:
int32__EGalgMCunhitNeighbours	TEmplate/int32_eg_min_cut.c	154;"	d	file:
int32__EGshrinkGraph_h__	TEmplate/int32_eg_shrink_graph.h	48;"	d
int32___EG_ABHEAP__	TEmplate/int32_eg_abheap.h	46;"	d
int32___EG_ABKHEAP__	TEmplate/int32_eg_abkheap.h	46;"	d
int32___EG_AHEAP__	TEmplate/int32_eg_aheap.h	45;"	d
int32___EG_DBASIS_REDUCTION__	TEmplate/int32_eg_dbasis_red.h	21;"	d
int32___EG_DIJKSTRA_H	TEmplate/int32_eg_dijkstra.h	31;"	d
int32___EG_DMATRIX_H__	TEmplate/int32_eg_dmatrix.h	21;"	d
int32___EG_EHEAP__	TEmplate/int32_eg_eheap.h	59;"	d
int32___EG_EKHEAP__	TEmplate/int32_eg_ekheap.h	53;"	d
int32___EG_NUMUTIL_H__	TEmplate/int32_eg_numutil.h	21;"	d
int32___EG_PUSH_RELABEL_H__	TEmplate/int32_eg_push_relabel.h	76;"	d
int32___EGaBKheapSiftDown	TEmplate/int32_eg_abkheap.h	266;"	d
int32___EGaBKheapSiftUp	TEmplate/int32_eg_abkheap.h	211;"	d
int32___EGaBheapSiftDown	TEmplate/int32_eg_abheap.h	241;"	d
int32___EGaBheapSiftUp	TEmplate/int32_eg_abheap.h	186;"	d
int32___EGaHeapSiftDown	TEmplate/int32_eg_aheap.h	253;"	d
int32___EGaHeapSiftUp	TEmplate/int32_eg_aheap.h	198;"	d
int32___EGlpNumInnProd	TEmplate/int32_eg_numutil.c	/^void int32___EGlpNumInnProd(int32_t*rop,$/;"	f
int32___MC_DEBUG_	TEmplate/int32_eg_min_cut.h	78;"	d
int32___MC_PROFILE_	TEmplate/int32_eg_min_cut.h	82;"	d
int32___MC_VRBLVL_	TEmplate/int32_eg_min_cut.h	74;"	d
int32___MC_profile_lvl	TEmplate/int32_eg_min_cut.c	/^static unsigned long long int32___MC_profile_lvl[5] = { 0, 0, 0, 0, 0 };$/;"	v	file:
int32___MC_profile_tn	TEmplate/int32_eg_min_cut.c	/^static unsigned long long int32___MC_profile_tn = 0;\/**<Number of calls to #int32_EGalgMCtestNode*\/$/;"	v	file:
int32___MC_profile_up	TEmplate/int32_eg_min_cut.c	/^static unsigned long long int32___MC_profile_up = 0;\/**< Number of improving cuts found *\/$/;"	v	file:
int32___PR_DEBUGL__	TEmplate/int32_eg_push_relabel.h	86;"	d
int32___PR_PROFILE__	TEmplate/int32_eg_push_relabel.h	98;"	d
int32___PR_TEST_VERBOSE__	TEmplate/int32_eg_push_relabel.h	90;"	d
int32___PR_VERBOSE__	TEmplate/int32_eg_push_relabel.h	94;"	d
int32___PR_profile_lvel	TEmplate/int32_eg_push_relabel.c	/^static unsigned long long int32___PR_profile_lvel = 0;$/;"	v	file:
int32___PR_profile_move	TEmplate/int32_eg_push_relabel.c	/^static unsigned long long int32___PR_profile_move = 0;$/;"	v	file:
int32___PR_profile_numb	TEmplate/int32_eg_push_relabel.c	/^static unsigned long long int32___PR_profile_numb = 0;$/;"	v	file:
int32___PR_profile_push	TEmplate/int32_eg_push_relabel.c	/^static unsigned long long int32___PR_profile_push = 0;$/;"	v	file:
int32___PR_profile_rela	TEmplate/int32_eg_push_relabel.c	/^static unsigned long long int32___PR_profile_rela = 0;$/;"	v	file:
int32___last_global	TEmplate/int32_eg_push_relabel.c	/^static unsigned long long int32___last_global = 0;$/;"	v	file:
int32_aheap_parseargs	TEmplate/int32_eg_abheap.ex.c	/^int int32_aheap_parseargs (int argc,$/;"	f
int32_aheap_parseargs	TEmplate/int32_eg_abkheap.ex.c	/^int int32_aheap_parseargs (int argc,$/;"	f
int32_aheap_parseargs	TEmplate/int32_eg_aheap.ex.c	/^int int32_aheap_parseargs (int argc,$/;"	f
int32_aheap_usage	TEmplate/int32_eg_abheap.ex.c	/^void int32_aheap_usage (char *program)$/;"	f
int32_aheap_usage	TEmplate/int32_eg_abkheap.ex.c	/^void int32_aheap_usage (char *program)$/;"	f
int32_aheap_usage	TEmplate/int32_eg_aheap.ex.c	/^void int32_aheap_usage (char *program)$/;"	f
int32_display_srkG	TEmplate/int32_eg_shrink_graph.ex.c	/^static inline void int32_display_srkG (int32_EGsrkGraph_t * G,$/;"	f	file:
int32_djk_parseargs	TEmplate/int32_eg_dijkstra.ex.c	/^static inline void int32_djk_parseargs(int argc,char**argv)$/;"	f	file:
int32_djk_usage	TEmplate/int32_eg_dijkstra.ex.c	/^static inline void int32_djk_usage(const char*const progname)$/;"	f	file:
int32_dmatrix_hilbert_eigenvalues	TEmplate/int32_eg_dmatrix.ex.c	/^static unsigned int32_dmatrix_hilbert_eigenvalues[int32_HILBERT_TABLE_SIZE] = {$/;"	v	file:
int32_dmatrix_parseargs	TEmplate/int32_eg_dmatrix.ex.c	/^int int32_dmatrix_parseargs (int argc,$/;"	f
int32_dmatrix_usage	TEmplate/int32_eg_dmatrix.ex.c	/^void int32_dmatrix_usage (char *program)$/;"	f
int32_eheap_parseargs	TEmplate/int32_eg_eheap.ex.c	/^int int32_eheap_parseargs (int argc,$/;"	f
int32_eheap_usage	TEmplate/int32_eg_eheap.ex.c	/^void int32_eheap_usage (char *program)$/;"	f
int32_ekheap_parseargs	TEmplate/int32_eg_ekheap.ex.c	/^int int32_ekheap_parseargs (int argc,$/;"	f
int32_ekheap_usage	TEmplate/int32_eg_ekheap.ex.c	/^void int32_ekheap_usage (char *program)$/;"	f
int32_epsLpNum	src/eg_lpnum.int32.h	32;"	d
int32_file_name	TEmplate/int32_eg_min_cut.ex.c	/^static char *int32_file_name = 0;$/;"	v	file:
int32_fname	TEmplate/int32_eg_dijkstra.ex.c	/^static char int32_fname[1024];$/;"	v	file:
int32_lvl	TEmplate/int32_eg_min_cut.ex.c	/^static unsigned int int32_lvl = 5;$/;"	v	file:
int32_lvl	TEmplate/int32_eg_min_cut.h	/^	unsigned int int32_lvl;		\/**< Current node level test to be performed *\/$/;"	m	struct:int32_EGalgMCnode_t
int32_mc_all_cuts_t	TEmplate/int32_eg_min_cut.ex.c	/^int32_mc_all_cuts_t;$/;"	t	typeref:struct:int32_mc_all_cuts_t	file:
int32_mc_all_cuts_t	TEmplate/int32_eg_min_cut.ex.c	/^typedef struct int32_mc_all_cuts_t$/;"	s	file:
int32_mc_parseargs	TEmplate/int32_eg_min_cut.ex.c	/^static inline int int32_mc_parseargs (int argc,$/;"	f	file:
int32_mc_store_cuts	TEmplate/int32_eg_min_cut.ex.c	/^int int32_mc_store_cuts (int32_t value,$/;"	f
int32_mc_usage	TEmplate/int32_eg_min_cut.ex.c	/^static void int32_mc_usage (char **argv)$/;"	f	file:
int32_my_constr	TEmplate/int32_eg_memslab.ex.c	/^static void int32_my_constr (void *ptr)$/;"	f	file:
int32_my_dest	TEmplate/int32_eg_memslab.ex.c	/^static void int32_my_dest (void *ptr)$/;"	f	file:
int32_oneLpNum	src/eg_lpnum.int32.h	31;"	d
int32_pr_usage	TEmplate/int32_eg_push_relabel.ex.c	/^static inline void int32_pr_usage (char **argv)$/;"	f	file:
int32_source	TEmplate/int32_eg_dijkstra.ex.c	/^static int32_t int32_source=0;$/;"	v	file:
int32_srk_usage	TEmplate/int32_eg_shrink_graph.ex.c	/^static inline void int32_srk_usage (char **argv)$/;"	f	file:
int32_verbose	TEmplate/int32_eg_dijkstra.ex.c	/^static int int32_verbose=1;$/;"	v	file:
int32_zeroLpNum	src/eg_lpnum.int32.h	30;"	d
int_DJK_DEBUG_	TEmplate/int_eg_dijkstra.h	44;"	d
int_DJK_VRBLVL_	TEmplate/int_eg_dijkstra.h	40;"	d
int_EG_ABHEAP_DEBUG	TEmplate/int_eg_abheap.h	53;"	d
int_EG_ABHEAP_POISON	TEmplate/int_eg_abheap.h	81;"	d
int_EG_ABKHEAP_DEBUG	TEmplate/int_eg_abkheap.h	53;"	d
int_EG_ABKHEAP_ENTRY	TEmplate/int_eg_abkheap.h	70;"	d
int_EG_ABKHEAP_POISON	TEmplate/int_eg_abkheap.h	85;"	d
int_EG_AHEAP_DEBUG	TEmplate/int_eg_aheap.h	52;"	d
int_EG_AHEAP_POISON	TEmplate/int_eg_aheap.h	80;"	d
int_EG_BSRED_CALLS	TEmplate/int_eg_dbasis_red.h	62;"	d
int_EG_BSRED_INTR	TEmplate/int_eg_dbasis_red.h	72;"	d
int_EG_BSRED_ITT	TEmplate/int_eg_dbasis_red.h	77;"	d
int_EG_BSRED_SZRED	TEmplate/int_eg_dbasis_red.h	67;"	d
int_EG_DBSRED_ALPHA	TEmplate/int_eg_dbasis_red.h	97;"	d
int_EG_DBSRED_VERBOSE	TEmplate/int_eg_dbasis_red.h	50;"	d
int_EG_EHEAP_DEBUG	TEmplate/int_eg_eheap.h	66;"	d
int_EG_EHEAP_POISON	TEmplate/int_eg_eheap.h	94;"	d
int_EG_EKHEAP_DEBUG	TEmplate/int_eg_ekheap.h	60;"	d
int_EG_EKHEAP_ENTRY	TEmplate/int_eg_ekheap.h	77;"	d
int_EG_EKHEAP_POISON	TEmplate/int_eg_ekheap.h	93;"	d
int_EG_PR_RELABEL	TEmplate/int_eg_push_relabel.h	114;"	d
int_EG_PR_RELABEL_FREC	TEmplate/int_eg_push_relabel.h	120;"	d
int_EG_SRK_DEBUG	TEmplate/int_eg_shrink_graph.h	57;"	d
int_EGaBKheapAdd	TEmplate/int_eg_abkheap.h	240;"	d
int_EGaBKheapCHECK_CN	TEmplate/int_eg_abkheap.h	60;"	d
int_EGaBKheapCHECK_CN	TEmplate/int_eg_abkheap.h	63;"	d
int_EGaBKheapCHECK_NF	TEmplate/int_eg_abkheap.h	61;"	d
int_EGaBKheapCHECK_NF	TEmplate/int_eg_abkheap.h	64;"	d
int_EGaBKheapChangeVal	TEmplate/int_eg_abkheap.h	318;"	d
int_EGaBKheapClear	TEmplate/int_eg_abkheap.h	170;"	d
int_EGaBKheapCnClear	TEmplate/int_eg_abkheap.h	127;"	d
int_EGaBKheapCnInit	TEmplate/int_eg_abkheap.h	110;"	d
int_EGaBKheapCnReset	TEmplate/int_eg_abkheap.h	121;"	d
int_EGaBKheapCn_t	TEmplate/int_eg_abkheap.h	/^int_EGaBKheapCn_t;$/;"	t	typeref:struct:__anon24
int_EGaBKheapCopyVal	TEmplate/int_eg_abkheap.h	305;"	d
int_EGaBKheapDel	TEmplate/int_eg_abkheap.h	339;"	d
int_EGaBKheapEmpty	TEmplate/int_eg_abkheap.h	150;"	d
int_EGaBKheapFatherId	TEmplate/int_eg_abkheap.h	199;"	d
int_EGaBKheapFirstChildId	TEmplate/int_eg_abkheap.h	254;"	d
int_EGaBKheapGetMin	TEmplate/int_eg_abkheap.h	178;"	d
int_EGaBKheapInit	TEmplate/int_eg_abkheap.h	156;"	d
int_EGaBKheapIsFull	TEmplate/int_eg_abkheap.h	144;"	d
int_EGaBKheapIsLess	TEmplate/int_eg_abkheap.h	92;"	d
int_EGaBKheapReset	TEmplate/int_eg_abkheap.h	163;"	d
int_EGaBKheapResize	TEmplate/int_eg_abkheap.h	189;"	d
int_EGaBKheap_t	TEmplate/int_eg_abkheap.h	/^int_EGaBKheap_t;$/;"	t	typeref:struct:__anon25
int_EGaBheapAdd	TEmplate/int_eg_abheap.h	215;"	d
int_EGaBheapCHECK_CN	TEmplate/int_eg_abheap.h	60;"	d
int_EGaBheapCHECK_CN	TEmplate/int_eg_abheap.h	63;"	d
int_EGaBheapCHECK_NF	TEmplate/int_eg_abheap.h	61;"	d
int_EGaBheapCHECK_NF	TEmplate/int_eg_abheap.h	64;"	d
int_EGaBheapChangeVal	TEmplate/int_eg_abheap.h	283;"	d
int_EGaBheapClear	TEmplate/int_eg_abheap.h	145;"	d
int_EGaBheapCnClear	TEmplate/int_eg_abheap.h	103;"	d
int_EGaBheapCnInit	TEmplate/int_eg_abheap.h	89;"	d
int_EGaBheapCnReset	TEmplate/int_eg_abheap.h	96;"	d
int_EGaBheapCn_t	TEmplate/int_eg_abheap.h	/^int_EGaBheapCn_t;$/;"	t	typeref:struct:__anon26
int_EGaBheapDel	TEmplate/int_eg_abheap.h	306;"	d
int_EGaBheapEmpty	TEmplate/int_eg_abheap.h	125;"	d
int_EGaBheapFatherId	TEmplate/int_eg_abheap.h	174;"	d
int_EGaBheapFirstChildId	TEmplate/int_eg_abheap.h	229;"	d
int_EGaBheapGetMin	TEmplate/int_eg_abheap.h	153;"	d
int_EGaBheapInit	TEmplate/int_eg_abheap.h	131;"	d
int_EGaBheapIsFull	TEmplate/int_eg_abheap.h	119;"	d
int_EGaBheapReset	TEmplate/int_eg_abheap.h	138;"	d
int_EGaBheapResize	TEmplate/int_eg_abheap.h	164;"	d
int_EGaBheap_t	TEmplate/int_eg_abheap.h	/^int_EGaBheap_t;$/;"	t	typeref:struct:__anon27
int_EGaHeapAdd	TEmplate/int_eg_aheap.h	227;"	d
int_EGaHeapCHECK_CN	TEmplate/int_eg_aheap.h	59;"	d
int_EGaHeapCHECK_CN	TEmplate/int_eg_aheap.h	62;"	d
int_EGaHeapCHECK_NF	TEmplate/int_eg_aheap.h	60;"	d
int_EGaHeapCHECK_NF	TEmplate/int_eg_aheap.h	63;"	d
int_EGaHeapChangeVal	TEmplate/int_eg_aheap.h	296;"	d
int_EGaHeapClear	TEmplate/int_eg_aheap.h	146;"	d
int_EGaHeapCnClear	TEmplate/int_eg_aheap.h	102;"	d
int_EGaHeapCnInit	TEmplate/int_eg_aheap.h	88;"	d
int_EGaHeapCnReset	TEmplate/int_eg_aheap.h	95;"	d
int_EGaHeapCn_t	TEmplate/int_eg_aheap.h	/^int_EGaHeapCn_t;$/;"	t	typeref:struct:__anon28
int_EGaHeapDel	TEmplate/int_eg_aheap.h	319;"	d
int_EGaHeapEmpty	TEmplate/int_eg_aheap.h	125;"	d
int_EGaHeapFatherId	TEmplate/int_eg_aheap.h	186;"	d
int_EGaHeapFirstChildId	TEmplate/int_eg_aheap.h	241;"	d
int_EGaHeapGetMin	TEmplate/int_eg_aheap.h	164;"	d
int_EGaHeapGetMinVal	TEmplate/int_eg_aheap.h	154;"	d
int_EGaHeapInit	TEmplate/int_eg_aheap.h	132;"	d
int_EGaHeapIsFull	TEmplate/int_eg_aheap.h	119;"	d
int_EGaHeapReset	TEmplate/int_eg_aheap.h	139;"	d
int_EGaHeapResize	TEmplate/int_eg_aheap.h	175;"	d
int_EGaHeap_t	TEmplate/int_eg_aheap.h	/^int_EGaHeap_t;$/;"	t	typeref:struct:__anon29
int_EGalgDJK	TEmplate/int_eg_dijkstra.c	/^int int_EGalgDJK ($/;"	f
int_EGalgMC	TEmplate/int_eg_min_cut.c	/^int int_EGalgMC (int_EGalgMCgraph_t * const G,$/;"	f
int_EGalgMCbuildPRgraph	TEmplate/int_eg_min_cut.c	/^static inline int int_EGalgMCbuildPRgraph (int_EGalgMCgraph_t * const mcG,$/;"	f	file:
int_EGalgMCcbkClear	TEmplate/int_eg_min_cut.h	132;"	d
int_EGalgMCcbkInit	TEmplate/int_eg_min_cut.h	122;"	d
int_EGalgMCcbk_t	TEmplate/int_eg_min_cut.h	/^int_EGalgMCcbk_t;$/;"	t	typeref:struct:int_EGalgMCcbk_t
int_EGalgMCcbk_t	TEmplate/int_eg_min_cut.h	/^typedef struct int_EGalgMCcbk_t$/;"	s
int_EGalgMCcomputeT	TEmplate/int_eg_min_cut.c	/^static inline int int_EGalgMCcomputeT (int_EGalgPRgraph_t * const prG,$/;"	f	file:
int_EGalgMCdo_f	TEmplate/int_eg_min_cut.h	/^typedef int (*int_EGalgMCdo_f) (int,$/;"	t
int_EGalgMCedgeClear	TEmplate/int_eg_min_cut.h	186;"	d
int_EGalgMCedgeInit	TEmplate/int_eg_min_cut.h	177;"	d
int_EGalgMCedge_t	TEmplate/int_eg_min_cut.h	/^int_EGalgMCedge_t;$/;"	t	typeref:struct:int_EGalgMCedge_t
int_EGalgMCedge_t	TEmplate/int_eg_min_cut.h	/^typedef struct int_EGalgMCedge_t$/;"	s
int_EGalgMCexpandNode	TEmplate/int_eg_min_cut.c	/^static inline int int_EGalgMCexpandNode (unsigned int *const cut,$/;"	f	file:
int_EGalgMCgraphClear	TEmplate/int_eg_min_cut.h	246;"	d
int_EGalgMCgraphInit	TEmplate/int_eg_min_cut.h	225;"	d
int_EGalgMCgraph_t	TEmplate/int_eg_min_cut.h	/^int_EGalgMCgraph_t;$/;"	t	typeref:struct:int_EGalgMCgraph_t
int_EGalgMCgraph_t	TEmplate/int_eg_min_cut.h	/^typedef struct int_EGalgMCgraph_t$/;"	s
int_EGalgMCidentifyNodes	TEmplate/int_eg_min_cut.h	256;"	d
int_EGalgMCidentifyPRedges	TEmplate/int_eg_min_cut.c	/^int int_EGalgMCidentifyPRedges (int_EGalgMCgraph_t * const G,$/;"	f
int_EGalgMCnodeClear	TEmplate/int_eg_min_cut.h	163;"	d
int_EGalgMCnodeInit	TEmplate/int_eg_min_cut.h	150;"	d
int_EGalgMCnode_t	TEmplate/int_eg_min_cut.h	/^int_EGalgMCnode_t;$/;"	t	typeref:struct:int_EGalgMCnode_t
int_EGalgMCnode_t	TEmplate/int_eg_min_cut.h	/^typedef struct int_EGalgMCnode_t$/;"	s
int_EGalgMCprofile	TEmplate/int_eg_min_cut.c	/^void int_EGalgMCprofile(void)$/;"	f
int_EGalgMCtestNode	TEmplate/int_eg_min_cut.c	/^static inline int int_EGalgMCtestNode (int_EGalgMCgraph_t * const G,$/;"	f	file:
int_EGalgPRcomputeLabels	TEmplate/int_eg_push_relabel.c	/^static inline int int_EGalgPRcomputeLabels (int_EGalgPRgraph_t * const G,$/;"	f	file:
int_EGalgPRedgeClear	TEmplate/int_eg_push_relabel.h	236;"	d
int_EGalgPRedgeInit	TEmplate/int_eg_push_relabel.h	208;"	d
int_EGalgPRedgeReset	TEmplate/int_eg_push_relabel.h	225;"	d
int_EGalgPRedge_t	TEmplate/int_eg_push_relabel.h	/^int_EGalgPRedge_t;$/;"	t	typeref:struct:int_EGalgPRedge_t
int_EGalgPRedge_t	TEmplate/int_eg_push_relabel.h	/^typedef struct int_EGalgPRedge_t$/;"	s
int_EGalgPRglobalRelabel	TEmplate/int_eg_push_relabel.c	/^static inline int int_EGalgPRglobalRelabel (int_EGalgPRgraph_t * const G,$/;"	f	file:
int_EGalgPRgraphClear	TEmplate/int_eg_push_relabel.h	269;"	d
int_EGalgPRgraphInit	TEmplate/int_eg_push_relabel.h	256;"	d
int_EGalgPRgraphReset	TEmplate/int_eg_push_relabel.h	264;"	d
int_EGalgPRgraph_t	TEmplate/int_eg_push_relabel.h	/^int_EGalgPRgraph_t;$/;"	t	typeref:struct:int_EGalgPRgraph_t
int_EGalgPRgraph_t	TEmplate/int_eg_push_relabel.h	/^typedef struct int_EGalgPRgraph_t$/;"	s
int_EGalgPRmaxSTflow	TEmplate/int_eg_push_relabel.c	/^int int_EGalgPRmaxSTflow (int_EGalgPRgraph_t * const G,$/;"	f
int_EGalgPRminSTcut	TEmplate/int_eg_push_relabel.c	/^int int_EGalgPRminSTcut (int_EGalgPRgraph_t * const G,$/;"	f
int_EGalgPRnodeClear	TEmplate/int_eg_push_relabel.h	169;"	d
int_EGalgPRnodeInit	TEmplate/int_eg_push_relabel.h	153;"	d
int_EGalgPRnodeReset	TEmplate/int_eg_push_relabel.h	164;"	d
int_EGalgPRnode_t	TEmplate/int_eg_push_relabel.h	/^int_EGalgPRnode_t;$/;"	t	typeref:struct:int_EGalgPRnode_t
int_EGalgPRnode_t	TEmplate/int_eg_push_relabel.h	/^typedef struct int_EGalgPRnode_t$/;"	s
int_EGalgPRnumb	TEmplate/int_eg_push_relabel.c	/^static inline int int_EGalgPRnumb (const unsigned int hole,$/;"	f	file:
int_EGalgPRoptimalityTest	TEmplate/int_eg_push_relabel.c	/^int int_EGalgPRoptimalityTest (int_EGalgPRgraph_t * const G,$/;"	f
int_EGalgPRpreprocess	TEmplate/int_eg_push_relabel.c	/^static inline int int_EGalgPRpreprocess (int_EGalgPRgraph_t * const G,$/;"	f	file:
int_EGalgPRprofile	TEmplate/int_eg_push_relabel.c	/^void int_EGalgPRprofile(void)$/;"	f
int_EGalgPRpush	TEmplate/int_eg_push_relabel.c	/^static inline int int_EGalgPRpush (int_EGalgPRse_t * const edge_pt,$/;"	f	file:
int_EGalgPRpushRelabel	TEmplate/int_eg_push_relabel.c	/^static int int_EGalgPRpushRelabel (int_EGalgPRnode_t * const node_pt,$/;"	f	file:
int_EGalgPRse_t	TEmplate/int_eg_push_relabel.h	/^int_EGalgPRse_t;$/;"	t	typeref:struct:int_EGalgPRse_t
int_EGalgPRse_t	TEmplate/int_eg_push_relabel.h	/^typedef struct int_EGalgPRse_t$/;"	s
int_EGdBsRed	TEmplate/int_eg_dbasis_red.c	/^int int_EGdBsRed (int_EGdBsRed_t * const bsred,$/;"	f
int_EGdBsRedAddElement	TEmplate/int_eg_dbasis_red.h	159;"	d
int_EGdBsRedBuildGM	TEmplate/int_eg_dbasis_red.c	/^static void int_EGdBsRedBuildGM (int_EGdMatrix_t * const GM,$/;"	f	file:
int_EGdBsRedClear	TEmplate/int_eg_dbasis_red.h	133;"	d
int_EGdBsRedInit	TEmplate/int_eg_dbasis_red.h	124;"	d
int_EGdBsRedProfile	TEmplate/int_eg_dbasis_red.h	83;"	d
int_EGdBsRedReset	TEmplate/int_eg_dbasis_red.h	144;"	d
int_EGdBsRedSetLength	TEmplate/int_eg_dbasis_red.h	152;"	d
int_EGdBsRedStats	TEmplate/int_eg_dbasis_red.c	/^uintmax_t int_EGdBsRedStats[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
int_EGdBsRed_t	TEmplate/int_eg_dbasis_red.h	/^int_EGdBsRed_t;$/;"	t	typeref:struct:int_EGdBsRed_t
int_EGdBsRed_t	TEmplate/int_eg_dbasis_red.h	/^typedef struct int_EGdBsRed_t$/;"	s
int_EGdMatrixAddColMultiple	TEmplate/int_eg_dmatrix.h	238;"	d
int_EGdMatrixAddRowMultiple	TEmplate/int_eg_dmatrix.h	165;"	d
int_EGdMatrixClear	TEmplate/int_eg_dmatrix.h	82;"	d
int_EGdMatrixDisplay	TEmplate/int_eg_dmatrix.h	124;"	d
int_EGdMatrixGaussianElimination	TEmplate/int_eg_dmatrix.c	/^int int_EGdMatrixGaussianElimination (int_EGdMatrix_t * const dmatrix,$/;"	f
int_EGdMatrixInit	TEmplate/int_eg_dmatrix.h	74;"	d
int_EGdMatrixMultiplyCol	TEmplate/int_eg_dmatrix.h	287;"	d
int_EGdMatrixMultiplyRow	TEmplate/int_eg_dmatrix.h	213;"	d
int_EGdMatrixSetDimension	TEmplate/int_eg_dmatrix.h	98;"	d
int_EGdMatrixSubColMultiple	TEmplate/int_eg_dmatrix.h	266;"	d
int_EGdMatrixSubRowMultiple	TEmplate/int_eg_dmatrix.h	193;"	d
int_EGdMatrix_t	TEmplate/int_eg_dmatrix.h	/^int_EGdMatrix_t;$/;"	t	typeref:struct:int_EGdMatrix_t
int_EGdMatrix_t	TEmplate/int_eg_dmatrix.h	/^typedef struct int_EGdMatrix_t$/;"	s
int_EGeHeapAdd	TEmplate/int_eg_eheap.h	233;"	d
int_EGeHeapCHECK_CN	TEmplate/int_eg_eheap.h	73;"	d
int_EGeHeapCHECK_CN	TEmplate/int_eg_eheap.h	76;"	d
int_EGeHeapCHECK_NF	TEmplate/int_eg_eheap.h	74;"	d
int_EGeHeapCHECK_NF	TEmplate/int_eg_eheap.h	77;"	d
int_EGeHeapChangeD	TEmplate/int_eg_eheap.h	353;"	d
int_EGeHeapChangeVal	TEmplate/int_eg_eheap.h	298;"	d
int_EGeHeapCheck	TEmplate/int_eg_eheap.h	327;"	d
int_EGeHeapCheck	TEmplate/int_eg_eheap.h	343;"	d
int_EGeHeapClear	TEmplate/int_eg_eheap.h	159;"	d
int_EGeHeapCnClear	TEmplate/int_eg_eheap.h	116;"	d
int_EGeHeapCnInit	TEmplate/int_eg_eheap.h	102;"	d
int_EGeHeapCnReset	TEmplate/int_eg_eheap.h	109;"	d
int_EGeHeapCn_t	TEmplate/int_eg_eheap.h	/^int_EGeHeapCn_t;$/;"	t	typeref:struct:__anon30
int_EGeHeapDel	TEmplate/int_eg_eheap.h	308;"	d
int_EGeHeapEmpty	TEmplate/int_eg_eheap.h	139;"	d
int_EGeHeapFatherId	TEmplate/int_eg_eheap.h	199;"	d
int_EGeHeapFirstChildId	TEmplate/int_eg_eheap.h	246;"	d
int_EGeHeapGetMin	TEmplate/int_eg_eheap.h	177;"	d
int_EGeHeapGetMinVal	TEmplate/int_eg_eheap.h	167;"	d
int_EGeHeapInit	TEmplate/int_eg_eheap.h	145;"	d
int_EGeHeapIsFull	TEmplate/int_eg_eheap.h	133;"	d
int_EGeHeapResize	TEmplate/int_eg_eheap.h	188;"	d
int_EGeHeapSiftDown	TEmplate/int_eg_eheap.h	256;"	d
int_EGeHeapSiftUp	TEmplate/int_eg_eheap.h	207;"	d
int_EGeHeap_t	TEmplate/int_eg_eheap.h	/^int_EGeHeap_t;$/;"	t	typeref:struct:__anon31
int_EGeHepReset	TEmplate/int_eg_eheap.h	152;"	d
int_EGeKHeapAdd	TEmplate/int_eg_ekheap.h	285;"	d
int_EGeKHeapCHECK_CN	TEmplate/int_eg_ekheap.h	67;"	d
int_EGeKHeapCHECK_CN	TEmplate/int_eg_ekheap.h	70;"	d
int_EGeKHeapCHECK_NF	TEmplate/int_eg_ekheap.h	68;"	d
int_EGeKHeapCHECK_NF	TEmplate/int_eg_ekheap.h	71;"	d
int_EGeKHeapChangeD	TEmplate/int_eg_ekheap.h	408;"	d
int_EGeKHeapChangeVal	TEmplate/int_eg_ekheap.h	351;"	d
int_EGeKHeapCheck	TEmplate/int_eg_ekheap.h	381;"	d
int_EGeKHeapCheck	TEmplate/int_eg_ekheap.h	398;"	d
int_EGeKHeapClear	TEmplate/int_eg_ekheap.h	166;"	d
int_EGeKHeapCnClear	TEmplate/int_eg_ekheap.h	120;"	d
int_EGeKHeapCnInit	TEmplate/int_eg_ekheap.h	101;"	d
int_EGeKHeapCnReset	TEmplate/int_eg_ekheap.h	113;"	d
int_EGeKHeapCn_t	TEmplate/int_eg_ekheap.h	/^int_EGeKHeapCn_t;$/;"	t	typeref:struct:__anon32
int_EGeKHeapCopyVal	TEmplate/int_eg_ekheap.c	/^void int_EGeKHeapCopyVal(int*const dst, const int*const src)$/;"	f
int_EGeKHeapDel	TEmplate/int_eg_ekheap.h	362;"	d
int_EGeKHeapEmpty	TEmplate/int_eg_ekheap.h	146;"	d
int_EGeKHeapFatherId	TEmplate/int_eg_ekheap.h	223;"	d
int_EGeKHeapFirstChildId	TEmplate/int_eg_ekheap.h	298;"	d
int_EGeKHeapGetMin	TEmplate/int_eg_ekheap.h	201;"	d
int_EGeKHeapGetMinKVal	TEmplate/int_eg_ekheap.h	188;"	d
int_EGeKHeapGetMinVal	TEmplate/int_eg_ekheap.h	177;"	d
int_EGeKHeapInit	TEmplate/int_eg_ekheap.h	152;"	d
int_EGeKHeapIsFull	TEmplate/int_eg_ekheap.h	140;"	d
int_EGeKHeapIsLess	TEmplate/int_eg_ekheap.h	231;"	d
int_EGeKHeapResize	TEmplate/int_eg_ekheap.h	212;"	d
int_EGeKHeapSiftDown	TEmplate/int_eg_ekheap.h	308;"	d
int_EGeKHeapSiftUp	TEmplate/int_eg_ekheap.h	259;"	d
int_EGeKHeap_t	TEmplate/int_eg_ekheap.h	/^int_EGeKHeap_t;$/;"	t	typeref:struct:__anon33
int_EGeKHepReset	TEmplate/int_eg_ekheap.h	159;"	d
int_EGguReadXgraph	TEmplate/int_eg_dijkstra.c	/^int int_EGguReadXgraph($/;"	f
int_EGlpNumAddInnProdTo	src/eg_lpnum.int.h	351;"	d
int_EGlpNumAddTo	src/eg_lpnum.int.h	381;"	d
int_EGlpNumAddUiTo	src/eg_lpnum.int.h	371;"	d
int_EGlpNumAllocArray	src/eg_lpnum.int.h	79;"	d
int_EGlpNumCeil	src/eg_lpnum.int.h	98;"	d
int_EGlpNumClearVar	src/eg_lpnum.int.h	477;"	d
int_EGlpNumCopy	src/eg_lpnum.int.h	255;"	d
int_EGlpNumCopyAbs	src/eg_lpnum.int.h	291;"	d
int_EGlpNumCopyArray	src/eg_lpnum.int.h	329;"	d
int_EGlpNumCopyDiff	src/eg_lpnum.int.h	237;"	d
int_EGlpNumCopyDiffRatio	src/eg_lpnum.int.h	228;"	d
int_EGlpNumCopyFrac	src/eg_lpnum.int.h	313;"	d
int_EGlpNumCopyNeg	src/eg_lpnum.int.h	303;"	d
int_EGlpNumCopySqrOver	src/eg_lpnum.int.h	279;"	d
int_EGlpNumCopySum	src/eg_lpnum.int.h	246;"	d
int_EGlpNumDivTo	src/eg_lpnum.int.h	414;"	d
int_EGlpNumDivUiTo	src/eg_lpnum.int.h	425;"	d
int_EGlpNumFloor	src/eg_lpnum.int.h	103;"	d
int_EGlpNumFreeArray	src/eg_lpnum.int.h	57;"	d
int_EGlpNumGetStr	src/eg_lpnum.int.h	47;"	d
int_EGlpNumInitVar	src/eg_lpnum.int.h	473;"	d
int_EGlpNumInnProd	TEmplate/int_eg_numutil.h	54;"	d
int_EGlpNumInv	src/eg_lpnum.int.h	109;"	d
int_EGlpNumIsDiffLess	src/eg_lpnum.int.h	185;"	d
int_EGlpNumIsEqqual	src/eg_lpnum.int.h	119;"	d
int_EGlpNumIsEqual	src/eg_lpnum.int.h	132;"	d
int_EGlpNumIsGreaDbl	src/eg_lpnum.int.h	207;"	d
int_EGlpNumIsGreatZero	src/eg_lpnum.int.h	154;"	d
int_EGlpNumIsLeq	src/eg_lpnum.int.h	218;"	d
int_EGlpNumIsLess	src/eg_lpnum.int.h	147;"	d
int_EGlpNumIsLessDbl	src/eg_lpnum.int.h	196;"	d
int_EGlpNumIsLessZero	src/eg_lpnum.int.h	161;"	d
int_EGlpNumIsNeq	src/eg_lpnum.int.h	133;"	d
int_EGlpNumIsNeqZero	src/eg_lpnum.int.h	135;"	d
int_EGlpNumIsNeqq	src/eg_lpnum.int.h	134;"	d
int_EGlpNumIsNeqqZero	src/eg_lpnum.int.h	136;"	d
int_EGlpNumIsSumLess	src/eg_lpnum.int.h	173;"	d
int_EGlpNumMultTo	src/eg_lpnum.int.h	403;"	d
int_EGlpNumMultUiTo	src/eg_lpnum.int.h	436;"	d
int_EGlpNumOne	src/eg_lpnum.int.h	452;"	d
int_EGlpNumReadStr	src/eg_lpnum.int.h	39;"	d
int_EGlpNumReallocArray	src/eg_lpnum.int.h	62;"	d
int_EGlpNumSet	src/eg_lpnum.int.h	93;"	d
int_EGlpNumSetToMaxAbs	src/eg_lpnum.int.h	265;"	d
int_EGlpNumSetToMinAbs	src/eg_lpnum.int.h	267;"	d
int_EGlpNumSign	src/eg_lpnum.int.h	460;"	d
int_EGlpNumSubInnProdTo	src/eg_lpnum.int.h	340;"	d
int_EGlpNumSubTo	src/eg_lpnum.int.h	392;"	d
int_EGlpNumSubUiTo	src/eg_lpnum.int.h	361;"	d
int_EGlpNumToLf	src/eg_lpnum.int.h	469;"	d
int_EGlpNumZero	src/eg_lpnum.int.h	444;"	d
int_EGsrkAddEdge	TEmplate/int_eg_shrink_graph.h	177;"	d
int_EGsrkAddNode	TEmplate/int_eg_shrink_graph.h	165;"	d
int_EGsrkEdgeClear	TEmplate/int_eg_shrink_graph.h	120;"	d
int_EGsrkEdgeInit	TEmplate/int_eg_shrink_graph.h	108;"	d
int_EGsrkEdge_t	TEmplate/int_eg_shrink_graph.h	/^int_EGsrkEdge_t;$/;"	t	typeref:struct:int_EGsrkEdge_t
int_EGsrkEdge_t	TEmplate/int_eg_shrink_graph.h	/^typedef struct int_EGsrkEdge_t$/;"	s
int_EGsrkGraphClear	TEmplate/int_eg_shrink_graph.h	136;"	d
int_EGsrkGraphInit	TEmplate/int_eg_shrink_graph.h	127;"	d
int_EGsrkGraph_t	TEmplate/int_eg_shrink_graph.h	/^int_EGsrkGraph_t;$/;"	t	typeref:struct:int_EGsrkGraph_t
int_EGsrkGraph_t	TEmplate/int_eg_shrink_graph.h	/^typedef struct int_EGsrkGraph_t$/;"	s
int_EGsrkIdentifyNodes	TEmplate/int_eg_shrink_graph.c	/^int_EGsrkNode_t *int_EGsrkIdentifyNodes (int_EGsrkGraph_t * const G,$/;"	f
int_EGsrkNodeClear	TEmplate/int_eg_shrink_graph.h	155;"	d
int_EGsrkNodeInit	TEmplate/int_eg_shrink_graph.h	141;"	d
int_EGsrkNode_t	TEmplate/int_eg_shrink_graph.h	/^int_EGsrkNode_t;$/;"	t	typeref:struct:int_EGsrkNode_t
int_EGsrkNode_t	TEmplate/int_eg_shrink_graph.h	/^typedef struct int_EGsrkNode_t$/;"	s
int_EGutilPermSort	TEmplate/int_eg_numutil.c	/^void int_EGutilPermSort (const size_t sz,$/;"	f
int_EGutilPermSort2	TEmplate/int_eg_numutil.c	/^void int_EGutilPermSort2 (const size_t sz,$/;"	f
int_HILBERT_TABLE_SIZE	TEmplate/int_eg_dmatrix.ex.c	45;"	d	file:
int_MaxLpNum	src/eg_lpnum.int.h	33;"	d
int_MinLpNum	src/eg_lpnum.int.h	34;"	d
int_UPDATE	TEmplate/int_eg_min_cut.c	50;"	d	file:
int_UPDATE	TEmplate/int_eg_min_cut.c	52;"	d	file:
int_UPDATE	TEmplate/int_eg_push_relabel.c	51;"	d	file:
int_UPDATE	TEmplate/int_eg_push_relabel.c	53;"	d	file:
int__EG_MIN_CUT_H	TEmplate/int_eg_min_cut.h	62;"	d
int__EGalgMChitNeighbours	TEmplate/int_eg_min_cut.c	135;"	d	file:
int__EGalgMCunhitNeighbours	TEmplate/int_eg_min_cut.c	154;"	d	file:
int__EGshrinkGraph_h__	TEmplate/int_eg_shrink_graph.h	48;"	d
int___EG_ABHEAP__	TEmplate/int_eg_abheap.h	46;"	d
int___EG_ABKHEAP__	TEmplate/int_eg_abkheap.h	46;"	d
int___EG_AHEAP__	TEmplate/int_eg_aheap.h	45;"	d
int___EG_DBASIS_REDUCTION__	TEmplate/int_eg_dbasis_red.h	21;"	d
int___EG_DIJKSTRA_H	TEmplate/int_eg_dijkstra.h	31;"	d
int___EG_DMATRIX_H__	TEmplate/int_eg_dmatrix.h	21;"	d
int___EG_EHEAP__	TEmplate/int_eg_eheap.h	59;"	d
int___EG_EKHEAP__	TEmplate/int_eg_ekheap.h	53;"	d
int___EG_NUMUTIL_H__	TEmplate/int_eg_numutil.h	21;"	d
int___EG_PUSH_RELABEL_H__	TEmplate/int_eg_push_relabel.h	76;"	d
int___EGaBKheapSiftDown	TEmplate/int_eg_abkheap.h	266;"	d
int___EGaBKheapSiftUp	TEmplate/int_eg_abkheap.h	211;"	d
int___EGaBheapSiftDown	TEmplate/int_eg_abheap.h	241;"	d
int___EGaBheapSiftUp	TEmplate/int_eg_abheap.h	186;"	d
int___EGaHeapSiftDown	TEmplate/int_eg_aheap.h	253;"	d
int___EGaHeapSiftUp	TEmplate/int_eg_aheap.h	198;"	d
int___EGlpNumInnProd	TEmplate/int_eg_numutil.c	/^void int___EGlpNumInnProd(int*rop,$/;"	f
int___MC_DEBUG_	TEmplate/int_eg_min_cut.h	78;"	d
int___MC_PROFILE_	TEmplate/int_eg_min_cut.h	82;"	d
int___MC_VRBLVL_	TEmplate/int_eg_min_cut.h	74;"	d
int___MC_profile_lvl	TEmplate/int_eg_min_cut.c	/^static unsigned long long int___MC_profile_lvl[5] = { 0, 0, 0, 0, 0 };$/;"	v	file:
int___MC_profile_tn	TEmplate/int_eg_min_cut.c	/^static unsigned long long int___MC_profile_tn = 0;\/**<Number of calls to #int_EGalgMCtestNode*\/$/;"	v	file:
int___MC_profile_up	TEmplate/int_eg_min_cut.c	/^static unsigned long long int___MC_profile_up = 0;\/**< Number of improving cuts found *\/$/;"	v	file:
int___PR_DEBUGL__	TEmplate/int_eg_push_relabel.h	86;"	d
int___PR_PROFILE__	TEmplate/int_eg_push_relabel.h	98;"	d
int___PR_TEST_VERBOSE__	TEmplate/int_eg_push_relabel.h	90;"	d
int___PR_VERBOSE__	TEmplate/int_eg_push_relabel.h	94;"	d
int___PR_profile_lvel	TEmplate/int_eg_push_relabel.c	/^static unsigned long long int___PR_profile_lvel = 0;$/;"	v	file:
int___PR_profile_move	TEmplate/int_eg_push_relabel.c	/^static unsigned long long int___PR_profile_move = 0;$/;"	v	file:
int___PR_profile_numb	TEmplate/int_eg_push_relabel.c	/^static unsigned long long int___PR_profile_numb = 0;$/;"	v	file:
int___PR_profile_push	TEmplate/int_eg_push_relabel.c	/^static unsigned long long int___PR_profile_push = 0;$/;"	v	file:
int___PR_profile_rela	TEmplate/int_eg_push_relabel.c	/^static unsigned long long int___PR_profile_rela = 0;$/;"	v	file:
int___last_global	TEmplate/int_eg_push_relabel.c	/^static unsigned long long int___last_global = 0;$/;"	v	file:
int_aheap_parseargs	TEmplate/int_eg_abheap.ex.c	/^int int_aheap_parseargs (int argc,$/;"	f
int_aheap_parseargs	TEmplate/int_eg_abkheap.ex.c	/^int int_aheap_parseargs (int argc,$/;"	f
int_aheap_parseargs	TEmplate/int_eg_aheap.ex.c	/^int int_aheap_parseargs (int argc,$/;"	f
int_aheap_usage	TEmplate/int_eg_abheap.ex.c	/^void int_aheap_usage (char *program)$/;"	f
int_aheap_usage	TEmplate/int_eg_abkheap.ex.c	/^void int_aheap_usage (char *program)$/;"	f
int_aheap_usage	TEmplate/int_eg_aheap.ex.c	/^void int_aheap_usage (char *program)$/;"	f
int_display_srkG	TEmplate/int_eg_shrink_graph.ex.c	/^static inline void int_display_srkG (int_EGsrkGraph_t * G,$/;"	f	file:
int_djk_parseargs	TEmplate/int_eg_dijkstra.ex.c	/^static inline void int_djk_parseargs(int argc,char**argv)$/;"	f	file:
int_djk_usage	TEmplate/int_eg_dijkstra.ex.c	/^static inline void int_djk_usage(const char*const progname)$/;"	f	file:
int_dmatrix_hilbert_eigenvalues	TEmplate/int_eg_dmatrix.ex.c	/^static unsigned int_dmatrix_hilbert_eigenvalues[int_HILBERT_TABLE_SIZE] = {$/;"	v	file:
int_dmatrix_parseargs	TEmplate/int_eg_dmatrix.ex.c	/^int int_dmatrix_parseargs (int argc,$/;"	f
int_dmatrix_usage	TEmplate/int_eg_dmatrix.ex.c	/^void int_dmatrix_usage (char *program)$/;"	f
int_eheap_parseargs	TEmplate/int_eg_eheap.ex.c	/^int int_eheap_parseargs (int argc,$/;"	f
int_eheap_usage	TEmplate/int_eg_eheap.ex.c	/^void int_eheap_usage (char *program)$/;"	f
int_ekheap_parseargs	TEmplate/int_eg_ekheap.ex.c	/^int int_ekheap_parseargs (int argc,$/;"	f
int_ekheap_usage	TEmplate/int_eg_ekheap.ex.c	/^void int_ekheap_usage (char *program)$/;"	f
int_epsLpNum	src/eg_lpnum.int.h	32;"	d
int_file_name	TEmplate/int_eg_min_cut.ex.c	/^static char *int_file_name = 0;$/;"	v	file:
int_fname	TEmplate/int_eg_dijkstra.ex.c	/^static char int_fname[1024];$/;"	v	file:
int_lvl	TEmplate/int_eg_min_cut.ex.c	/^static unsigned int int_lvl = 5;$/;"	v	file:
int_lvl	TEmplate/int_eg_min_cut.h	/^	unsigned int int_lvl;		\/**< Current node level test to be performed *\/$/;"	m	struct:int_EGalgMCnode_t
int_mc_all_cuts_t	TEmplate/int_eg_min_cut.ex.c	/^int_mc_all_cuts_t;$/;"	t	typeref:struct:int_mc_all_cuts_t	file:
int_mc_all_cuts_t	TEmplate/int_eg_min_cut.ex.c	/^typedef struct int_mc_all_cuts_t$/;"	s	file:
int_mc_parseargs	TEmplate/int_eg_min_cut.ex.c	/^static inline int int_mc_parseargs (int argc,$/;"	f	file:
int_mc_store_cuts	TEmplate/int_eg_min_cut.ex.c	/^int int_mc_store_cuts (int value,$/;"	f
int_mc_usage	TEmplate/int_eg_min_cut.ex.c	/^static void int_mc_usage (char **argv)$/;"	f	file:
int_my_constr	TEmplate/int_eg_memslab.ex.c	/^static void int_my_constr (void *ptr)$/;"	f	file:
int_my_dest	TEmplate/int_eg_memslab.ex.c	/^static void int_my_dest (void *ptr)$/;"	f	file:
int_oneLpNum	src/eg_lpnum.int.h	31;"	d
int_pr_usage	TEmplate/int_eg_push_relabel.ex.c	/^static inline void int_pr_usage (char **argv)$/;"	f	file:
int_source	TEmplate/int_eg_dijkstra.ex.c	/^static int32_t int_source=0;$/;"	v	file:
int_srk_usage	TEmplate/int_eg_shrink_graph.ex.c	/^static inline void int_srk_usage (char **argv)$/;"	f	file:
int_verbose	TEmplate/int_eg_dijkstra.ex.c	/^static int int_verbose=1;$/;"	v	file:
int_zeroLpNum	src/eg_lpnum.int.h	30;"	d
integer_list_t	src/eg_a16list.ex.c	/^integer_list_t;$/;"	t	typeref:struct:__anon75	file:
integer_list_t	src/eg_a32list.ex.c	/^integer_list_t;$/;"	t	typeref:struct:__anon74	file:
integer_list_t	src/eg_alist.ex.c	/^integer_list_t;$/;"	t	typeref:struct:__anon76	file:
integer_list_t	src/eg_elist.ex.c	/^integer_list_t;$/;"	t	typeref:struct:__anon77	file:
interval	src/eg_simula.h	/^	double*interval;	\/**< @brief length of the interval *\/$/;"	m	struct:__anon106
inv	src/eg_raset.h	/^	int32_t*inv;	\/**< @brief array of length EGrset_t::asz, it contains the$/;"	m	struct:__anon100
inv	src/eg_slk.h	/^	int* inv;		\/**< hold the inverse of the ordering, the values range from zero $/;"	m	struct:EGflipper_t
itofp10	src/eg_fp.h	167;"	d
itofp20	src/eg_fp.h	168;"	d
itofp25	src/eg_fp.h	169;"	d
itofp28	src/eg_fp.h	170;"	d
key	src/eg_a32hash.h	/^	EGkey_t key;	\/**< @brief identifier of this element, note that we may $/;"	m	struct:EGa32HashInfo_t
key	src/eg_ahash.h	/^	EGkey_t key;	\/**< @brief identifier of this element, note that we may $/;"	m	struct:EGaHashInfo_t
key	src/eg_ehash.h	/^	EGkey_t key;	\/**< @brief identifier of this element, note that we may $/;"	m	struct:EGeHashInfo_t
key	src/eg_keytab.h	/^	EGkeytabInfo_t*key;	\/**< @brief array of all key in table *\/ $/;"	m	struct:__anon89
key	src/eg_keytab.h	/^	uint64_t key;				\/**< @brief key being stored *\/$/;"	m	struct:__anon88
key	src/eg_octree.h	/^	uint16_t key:3;		\/** @brief position in the parent for this node (0-7) *\/$/;"	m	struct:EGeOctdata_st
keytab_parse	src/eg_keytab.ex.c	/^int keytab_parse(int argc,char**argv)$/;"	f
keytab_usage	src/eg_keytab.ex.c	/^void keytab_usage(char*program)$/;"	f
last_time	src/eg_simula.h	/^	double last_time;			\/**< @brief Last time statistics where updated *\/$/;"	m	struct:__anon108
last_time	src/eg_simula.h	/^	double last_time;			\/**< Last time when statistics where updated *\/$/;"	m	struct:__anon109
ldbl_DJK_DEBUG_	TEmplate/ldbl_eg_dijkstra.h	47;"	d
ldbl_DJK_VRBLVL_	TEmplate/ldbl_eg_dijkstra.h	43;"	d
ldbl_EG_ABHEAP_DEBUG	TEmplate/ldbl_eg_abheap.h	56;"	d
ldbl_EG_ABHEAP_POISON	TEmplate/ldbl_eg_abheap.h	84;"	d
ldbl_EG_ABKHEAP_DEBUG	TEmplate/ldbl_eg_abkheap.h	56;"	d
ldbl_EG_ABKHEAP_ENTRY	TEmplate/ldbl_eg_abkheap.h	73;"	d
ldbl_EG_ABKHEAP_POISON	TEmplate/ldbl_eg_abkheap.h	88;"	d
ldbl_EG_AHEAP_DEBUG	TEmplate/ldbl_eg_aheap.h	55;"	d
ldbl_EG_AHEAP_POISON	TEmplate/ldbl_eg_aheap.h	83;"	d
ldbl_EG_BSRED_CALLS	TEmplate/ldbl_eg_dbasis_red.h	65;"	d
ldbl_EG_BSRED_INTR	TEmplate/ldbl_eg_dbasis_red.h	75;"	d
ldbl_EG_BSRED_ITT	TEmplate/ldbl_eg_dbasis_red.h	80;"	d
ldbl_EG_BSRED_SZRED	TEmplate/ldbl_eg_dbasis_red.h	70;"	d
ldbl_EG_DBSRED_ALPHA	TEmplate/ldbl_eg_dbasis_red.h	100;"	d
ldbl_EG_DBSRED_VERBOSE	TEmplate/ldbl_eg_dbasis_red.h	53;"	d
ldbl_EG_EHEAP_DEBUG	TEmplate/ldbl_eg_eheap.h	69;"	d
ldbl_EG_EHEAP_POISON	TEmplate/ldbl_eg_eheap.h	97;"	d
ldbl_EG_EKHEAP_DEBUG	TEmplate/ldbl_eg_ekheap.h	63;"	d
ldbl_EG_EKHEAP_ENTRY	TEmplate/ldbl_eg_ekheap.h	80;"	d
ldbl_EG_EKHEAP_POISON	TEmplate/ldbl_eg_ekheap.h	96;"	d
ldbl_EG_PR_RELABEL	TEmplate/ldbl_eg_push_relabel.h	117;"	d
ldbl_EG_PR_RELABEL_FREC	TEmplate/ldbl_eg_push_relabel.h	123;"	d
ldbl_EG_SRK_DEBUG	TEmplate/ldbl_eg_shrink_graph.h	60;"	d
ldbl_EGaBKheapAdd	TEmplate/ldbl_eg_abkheap.h	243;"	d
ldbl_EGaBKheapCHECK_CN	TEmplate/ldbl_eg_abkheap.h	63;"	d
ldbl_EGaBKheapCHECK_CN	TEmplate/ldbl_eg_abkheap.h	66;"	d
ldbl_EGaBKheapCHECK_NF	TEmplate/ldbl_eg_abkheap.h	64;"	d
ldbl_EGaBKheapCHECK_NF	TEmplate/ldbl_eg_abkheap.h	67;"	d
ldbl_EGaBKheapChangeVal	TEmplate/ldbl_eg_abkheap.h	321;"	d
ldbl_EGaBKheapClear	TEmplate/ldbl_eg_abkheap.h	173;"	d
ldbl_EGaBKheapCnClear	TEmplate/ldbl_eg_abkheap.h	130;"	d
ldbl_EGaBKheapCnInit	TEmplate/ldbl_eg_abkheap.h	113;"	d
ldbl_EGaBKheapCnReset	TEmplate/ldbl_eg_abkheap.h	124;"	d
ldbl_EGaBKheapCn_t	TEmplate/ldbl_eg_abkheap.h	/^ldbl_EGaBKheapCn_t;$/;"	t	typeref:struct:__anon44
ldbl_EGaBKheapCopyVal	TEmplate/ldbl_eg_abkheap.h	308;"	d
ldbl_EGaBKheapDel	TEmplate/ldbl_eg_abkheap.h	342;"	d
ldbl_EGaBKheapEmpty	TEmplate/ldbl_eg_abkheap.h	153;"	d
ldbl_EGaBKheapFatherId	TEmplate/ldbl_eg_abkheap.h	202;"	d
ldbl_EGaBKheapFirstChildId	TEmplate/ldbl_eg_abkheap.h	257;"	d
ldbl_EGaBKheapGetMin	TEmplate/ldbl_eg_abkheap.h	181;"	d
ldbl_EGaBKheapInit	TEmplate/ldbl_eg_abkheap.h	159;"	d
ldbl_EGaBKheapIsFull	TEmplate/ldbl_eg_abkheap.h	147;"	d
ldbl_EGaBKheapIsLess	TEmplate/ldbl_eg_abkheap.h	95;"	d
ldbl_EGaBKheapReset	TEmplate/ldbl_eg_abkheap.h	166;"	d
ldbl_EGaBKheapResize	TEmplate/ldbl_eg_abkheap.h	192;"	d
ldbl_EGaBKheap_t	TEmplate/ldbl_eg_abkheap.h	/^ldbl_EGaBKheap_t;$/;"	t	typeref:struct:__anon45
ldbl_EGaBheapAdd	TEmplate/ldbl_eg_abheap.h	218;"	d
ldbl_EGaBheapCHECK_CN	TEmplate/ldbl_eg_abheap.h	63;"	d
ldbl_EGaBheapCHECK_CN	TEmplate/ldbl_eg_abheap.h	66;"	d
ldbl_EGaBheapCHECK_NF	TEmplate/ldbl_eg_abheap.h	64;"	d
ldbl_EGaBheapCHECK_NF	TEmplate/ldbl_eg_abheap.h	67;"	d
ldbl_EGaBheapChangeVal	TEmplate/ldbl_eg_abheap.h	286;"	d
ldbl_EGaBheapClear	TEmplate/ldbl_eg_abheap.h	148;"	d
ldbl_EGaBheapCnClear	TEmplate/ldbl_eg_abheap.h	106;"	d
ldbl_EGaBheapCnInit	TEmplate/ldbl_eg_abheap.h	92;"	d
ldbl_EGaBheapCnReset	TEmplate/ldbl_eg_abheap.h	99;"	d
ldbl_EGaBheapCn_t	TEmplate/ldbl_eg_abheap.h	/^ldbl_EGaBheapCn_t;$/;"	t	typeref:struct:__anon46
ldbl_EGaBheapDel	TEmplate/ldbl_eg_abheap.h	309;"	d
ldbl_EGaBheapEmpty	TEmplate/ldbl_eg_abheap.h	128;"	d
ldbl_EGaBheapFatherId	TEmplate/ldbl_eg_abheap.h	177;"	d
ldbl_EGaBheapFirstChildId	TEmplate/ldbl_eg_abheap.h	232;"	d
ldbl_EGaBheapGetMin	TEmplate/ldbl_eg_abheap.h	156;"	d
ldbl_EGaBheapInit	TEmplate/ldbl_eg_abheap.h	134;"	d
ldbl_EGaBheapIsFull	TEmplate/ldbl_eg_abheap.h	122;"	d
ldbl_EGaBheapReset	TEmplate/ldbl_eg_abheap.h	141;"	d
ldbl_EGaBheapResize	TEmplate/ldbl_eg_abheap.h	167;"	d
ldbl_EGaBheap_t	TEmplate/ldbl_eg_abheap.h	/^ldbl_EGaBheap_t;$/;"	t	typeref:struct:__anon47
ldbl_EGaHeapAdd	TEmplate/ldbl_eg_aheap.h	230;"	d
ldbl_EGaHeapCHECK_CN	TEmplate/ldbl_eg_aheap.h	62;"	d
ldbl_EGaHeapCHECK_CN	TEmplate/ldbl_eg_aheap.h	65;"	d
ldbl_EGaHeapCHECK_NF	TEmplate/ldbl_eg_aheap.h	63;"	d
ldbl_EGaHeapCHECK_NF	TEmplate/ldbl_eg_aheap.h	66;"	d
ldbl_EGaHeapChangeVal	TEmplate/ldbl_eg_aheap.h	299;"	d
ldbl_EGaHeapClear	TEmplate/ldbl_eg_aheap.h	149;"	d
ldbl_EGaHeapCnClear	TEmplate/ldbl_eg_aheap.h	105;"	d
ldbl_EGaHeapCnInit	TEmplate/ldbl_eg_aheap.h	91;"	d
ldbl_EGaHeapCnReset	TEmplate/ldbl_eg_aheap.h	98;"	d
ldbl_EGaHeapCn_t	TEmplate/ldbl_eg_aheap.h	/^ldbl_EGaHeapCn_t;$/;"	t	typeref:struct:__anon48
ldbl_EGaHeapDel	TEmplate/ldbl_eg_aheap.h	322;"	d
ldbl_EGaHeapEmpty	TEmplate/ldbl_eg_aheap.h	128;"	d
ldbl_EGaHeapFatherId	TEmplate/ldbl_eg_aheap.h	189;"	d
ldbl_EGaHeapFirstChildId	TEmplate/ldbl_eg_aheap.h	244;"	d
ldbl_EGaHeapGetMin	TEmplate/ldbl_eg_aheap.h	167;"	d
ldbl_EGaHeapGetMinVal	TEmplate/ldbl_eg_aheap.h	157;"	d
ldbl_EGaHeapInit	TEmplate/ldbl_eg_aheap.h	135;"	d
ldbl_EGaHeapIsFull	TEmplate/ldbl_eg_aheap.h	122;"	d
ldbl_EGaHeapReset	TEmplate/ldbl_eg_aheap.h	142;"	d
ldbl_EGaHeapResize	TEmplate/ldbl_eg_aheap.h	178;"	d
ldbl_EGaHeap_t	TEmplate/ldbl_eg_aheap.h	/^ldbl_EGaHeap_t;$/;"	t	typeref:struct:__anon49
ldbl_EGalgDJK	TEmplate/ldbl_eg_dijkstra.c	/^int ldbl_EGalgDJK ($/;"	f
ldbl_EGalgMC	TEmplate/ldbl_eg_min_cut.c	/^int ldbl_EGalgMC (ldbl_EGalgMCgraph_t * const G,$/;"	f
ldbl_EGalgMCbuildPRgraph	TEmplate/ldbl_eg_min_cut.c	/^static inline int ldbl_EGalgMCbuildPRgraph (ldbl_EGalgMCgraph_t * const mcG,$/;"	f	file:
ldbl_EGalgMCcbkClear	TEmplate/ldbl_eg_min_cut.h	135;"	d
ldbl_EGalgMCcbkInit	TEmplate/ldbl_eg_min_cut.h	125;"	d
ldbl_EGalgMCcbk_t	TEmplate/ldbl_eg_min_cut.h	/^ldbl_EGalgMCcbk_t;$/;"	t	typeref:struct:ldbl_EGalgMCcbk_t
ldbl_EGalgMCcbk_t	TEmplate/ldbl_eg_min_cut.h	/^typedef struct ldbl_EGalgMCcbk_t$/;"	s
ldbl_EGalgMCcomputeT	TEmplate/ldbl_eg_min_cut.c	/^static inline int ldbl_EGalgMCcomputeT (ldbl_EGalgPRgraph_t * const prG,$/;"	f	file:
ldbl_EGalgMCdo_f	TEmplate/ldbl_eg_min_cut.h	/^typedef int (*ldbl_EGalgMCdo_f) (long double,$/;"	t
ldbl_EGalgMCedgeClear	TEmplate/ldbl_eg_min_cut.h	189;"	d
ldbl_EGalgMCedgeInit	TEmplate/ldbl_eg_min_cut.h	180;"	d
ldbl_EGalgMCedge_t	TEmplate/ldbl_eg_min_cut.h	/^ldbl_EGalgMCedge_t;$/;"	t	typeref:struct:ldbl_EGalgMCedge_t
ldbl_EGalgMCedge_t	TEmplate/ldbl_eg_min_cut.h	/^typedef struct ldbl_EGalgMCedge_t$/;"	s
ldbl_EGalgMCexpandNode	TEmplate/ldbl_eg_min_cut.c	/^static inline int ldbl_EGalgMCexpandNode (unsigned int *const cut,$/;"	f	file:
ldbl_EGalgMCgraphClear	TEmplate/ldbl_eg_min_cut.h	249;"	d
ldbl_EGalgMCgraphInit	TEmplate/ldbl_eg_min_cut.h	228;"	d
ldbl_EGalgMCgraph_t	TEmplate/ldbl_eg_min_cut.h	/^ldbl_EGalgMCgraph_t;$/;"	t	typeref:struct:ldbl_EGalgMCgraph_t
ldbl_EGalgMCgraph_t	TEmplate/ldbl_eg_min_cut.h	/^typedef struct ldbl_EGalgMCgraph_t$/;"	s
ldbl_EGalgMCidentifyNodes	TEmplate/ldbl_eg_min_cut.h	259;"	d
ldbl_EGalgMCidentifyPRedges	TEmplate/ldbl_eg_min_cut.c	/^int ldbl_EGalgMCidentifyPRedges (ldbl_EGalgMCgraph_t * const G,$/;"	f
ldbl_EGalgMCnodeClear	TEmplate/ldbl_eg_min_cut.h	166;"	d
ldbl_EGalgMCnodeInit	TEmplate/ldbl_eg_min_cut.h	153;"	d
ldbl_EGalgMCnode_t	TEmplate/ldbl_eg_min_cut.h	/^ldbl_EGalgMCnode_t;$/;"	t	typeref:struct:ldbl_EGalgMCnode_t
ldbl_EGalgMCnode_t	TEmplate/ldbl_eg_min_cut.h	/^typedef struct ldbl_EGalgMCnode_t$/;"	s
ldbl_EGalgMCprofile	TEmplate/ldbl_eg_min_cut.c	/^void ldbl_EGalgMCprofile(void)$/;"	f
ldbl_EGalgMCtestNode	TEmplate/ldbl_eg_min_cut.c	/^static inline int ldbl_EGalgMCtestNode (ldbl_EGalgMCgraph_t * const G,$/;"	f	file:
ldbl_EGalgPRcomputeLabels	TEmplate/ldbl_eg_push_relabel.c	/^static inline int ldbl_EGalgPRcomputeLabels (ldbl_EGalgPRgraph_t * const G,$/;"	f	file:
ldbl_EGalgPRedgeClear	TEmplate/ldbl_eg_push_relabel.h	239;"	d
ldbl_EGalgPRedgeInit	TEmplate/ldbl_eg_push_relabel.h	211;"	d
ldbl_EGalgPRedgeReset	TEmplate/ldbl_eg_push_relabel.h	228;"	d
ldbl_EGalgPRedge_t	TEmplate/ldbl_eg_push_relabel.h	/^ldbl_EGalgPRedge_t;$/;"	t	typeref:struct:ldbl_EGalgPRedge_t
ldbl_EGalgPRedge_t	TEmplate/ldbl_eg_push_relabel.h	/^typedef struct ldbl_EGalgPRedge_t$/;"	s
ldbl_EGalgPRglobalRelabel	TEmplate/ldbl_eg_push_relabel.c	/^static inline int ldbl_EGalgPRglobalRelabel (ldbl_EGalgPRgraph_t * const G,$/;"	f	file:
ldbl_EGalgPRgraphClear	TEmplate/ldbl_eg_push_relabel.h	272;"	d
ldbl_EGalgPRgraphInit	TEmplate/ldbl_eg_push_relabel.h	259;"	d
ldbl_EGalgPRgraphReset	TEmplate/ldbl_eg_push_relabel.h	267;"	d
ldbl_EGalgPRgraph_t	TEmplate/ldbl_eg_push_relabel.h	/^ldbl_EGalgPRgraph_t;$/;"	t	typeref:struct:ldbl_EGalgPRgraph_t
ldbl_EGalgPRgraph_t	TEmplate/ldbl_eg_push_relabel.h	/^typedef struct ldbl_EGalgPRgraph_t$/;"	s
ldbl_EGalgPRmaxSTflow	TEmplate/ldbl_eg_push_relabel.c	/^int ldbl_EGalgPRmaxSTflow (ldbl_EGalgPRgraph_t * const G,$/;"	f
ldbl_EGalgPRminSTcut	TEmplate/ldbl_eg_push_relabel.c	/^int ldbl_EGalgPRminSTcut (ldbl_EGalgPRgraph_t * const G,$/;"	f
ldbl_EGalgPRnodeClear	TEmplate/ldbl_eg_push_relabel.h	172;"	d
ldbl_EGalgPRnodeInit	TEmplate/ldbl_eg_push_relabel.h	156;"	d
ldbl_EGalgPRnodeReset	TEmplate/ldbl_eg_push_relabel.h	167;"	d
ldbl_EGalgPRnode_t	TEmplate/ldbl_eg_push_relabel.h	/^ldbl_EGalgPRnode_t;$/;"	t	typeref:struct:ldbl_EGalgPRnode_t
ldbl_EGalgPRnode_t	TEmplate/ldbl_eg_push_relabel.h	/^typedef struct ldbl_EGalgPRnode_t$/;"	s
ldbl_EGalgPRnumb	TEmplate/ldbl_eg_push_relabel.c	/^static inline int ldbl_EGalgPRnumb (const unsigned int hole,$/;"	f	file:
ldbl_EGalgPRoptimalityTest	TEmplate/ldbl_eg_push_relabel.c	/^int ldbl_EGalgPRoptimalityTest (ldbl_EGalgPRgraph_t * const G,$/;"	f
ldbl_EGalgPRpreprocess	TEmplate/ldbl_eg_push_relabel.c	/^static inline int ldbl_EGalgPRpreprocess (ldbl_EGalgPRgraph_t * const G,$/;"	f	file:
ldbl_EGalgPRprofile	TEmplate/ldbl_eg_push_relabel.c	/^void ldbl_EGalgPRprofile(void)$/;"	f
ldbl_EGalgPRpush	TEmplate/ldbl_eg_push_relabel.c	/^static inline int ldbl_EGalgPRpush (ldbl_EGalgPRse_t * const edge_pt,$/;"	f	file:
ldbl_EGalgPRpushRelabel	TEmplate/ldbl_eg_push_relabel.c	/^static int ldbl_EGalgPRpushRelabel (ldbl_EGalgPRnode_t * const node_pt,$/;"	f	file:
ldbl_EGalgPRse_t	TEmplate/ldbl_eg_push_relabel.h	/^ldbl_EGalgPRse_t;$/;"	t	typeref:struct:ldbl_EGalgPRse_t
ldbl_EGalgPRse_t	TEmplate/ldbl_eg_push_relabel.h	/^typedef struct ldbl_EGalgPRse_t$/;"	s
ldbl_EGdBsRed	TEmplate/ldbl_eg_dbasis_red.c	/^int ldbl_EGdBsRed (ldbl_EGdBsRed_t * const bsred,$/;"	f
ldbl_EGdBsRedAddElement	TEmplate/ldbl_eg_dbasis_red.h	162;"	d
ldbl_EGdBsRedBuildGM	TEmplate/ldbl_eg_dbasis_red.c	/^static void ldbl_EGdBsRedBuildGM (ldbl_EGdMatrix_t * const GM,$/;"	f	file:
ldbl_EGdBsRedClear	TEmplate/ldbl_eg_dbasis_red.h	136;"	d
ldbl_EGdBsRedInit	TEmplate/ldbl_eg_dbasis_red.h	127;"	d
ldbl_EGdBsRedProfile	TEmplate/ldbl_eg_dbasis_red.h	86;"	d
ldbl_EGdBsRedReset	TEmplate/ldbl_eg_dbasis_red.h	147;"	d
ldbl_EGdBsRedSetLength	TEmplate/ldbl_eg_dbasis_red.h	155;"	d
ldbl_EGdBsRedStats	TEmplate/ldbl_eg_dbasis_red.c	/^uintmax_t ldbl_EGdBsRedStats[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
ldbl_EGdBsRed_t	TEmplate/ldbl_eg_dbasis_red.h	/^ldbl_EGdBsRed_t;$/;"	t	typeref:struct:ldbl_EGdBsRed_t
ldbl_EGdBsRed_t	TEmplate/ldbl_eg_dbasis_red.h	/^typedef struct ldbl_EGdBsRed_t$/;"	s
ldbl_EGdMatrixAddColMultiple	TEmplate/ldbl_eg_dmatrix.h	241;"	d
ldbl_EGdMatrixAddRowMultiple	TEmplate/ldbl_eg_dmatrix.h	168;"	d
ldbl_EGdMatrixClear	TEmplate/ldbl_eg_dmatrix.h	85;"	d
ldbl_EGdMatrixDisplay	TEmplate/ldbl_eg_dmatrix.h	127;"	d
ldbl_EGdMatrixGaussianElimination	TEmplate/ldbl_eg_dmatrix.c	/^int ldbl_EGdMatrixGaussianElimination (ldbl_EGdMatrix_t * const dmatrix,$/;"	f
ldbl_EGdMatrixInit	TEmplate/ldbl_eg_dmatrix.h	77;"	d
ldbl_EGdMatrixMultiplyCol	TEmplate/ldbl_eg_dmatrix.h	290;"	d
ldbl_EGdMatrixMultiplyRow	TEmplate/ldbl_eg_dmatrix.h	216;"	d
ldbl_EGdMatrixSetDimension	TEmplate/ldbl_eg_dmatrix.h	101;"	d
ldbl_EGdMatrixSubColMultiple	TEmplate/ldbl_eg_dmatrix.h	269;"	d
ldbl_EGdMatrixSubRowMultiple	TEmplate/ldbl_eg_dmatrix.h	196;"	d
ldbl_EGdMatrix_t	TEmplate/ldbl_eg_dmatrix.h	/^ldbl_EGdMatrix_t;$/;"	t	typeref:struct:ldbl_EGdMatrix_t
ldbl_EGdMatrix_t	TEmplate/ldbl_eg_dmatrix.h	/^typedef struct ldbl_EGdMatrix_t$/;"	s
ldbl_EGeHeapAdd	TEmplate/ldbl_eg_eheap.h	236;"	d
ldbl_EGeHeapCHECK_CN	TEmplate/ldbl_eg_eheap.h	76;"	d
ldbl_EGeHeapCHECK_CN	TEmplate/ldbl_eg_eheap.h	79;"	d
ldbl_EGeHeapCHECK_NF	TEmplate/ldbl_eg_eheap.h	77;"	d
ldbl_EGeHeapCHECK_NF	TEmplate/ldbl_eg_eheap.h	80;"	d
ldbl_EGeHeapChangeD	TEmplate/ldbl_eg_eheap.h	356;"	d
ldbl_EGeHeapChangeVal	TEmplate/ldbl_eg_eheap.h	301;"	d
ldbl_EGeHeapCheck	TEmplate/ldbl_eg_eheap.h	330;"	d
ldbl_EGeHeapCheck	TEmplate/ldbl_eg_eheap.h	346;"	d
ldbl_EGeHeapClear	TEmplate/ldbl_eg_eheap.h	162;"	d
ldbl_EGeHeapCnClear	TEmplate/ldbl_eg_eheap.h	119;"	d
ldbl_EGeHeapCnInit	TEmplate/ldbl_eg_eheap.h	105;"	d
ldbl_EGeHeapCnReset	TEmplate/ldbl_eg_eheap.h	112;"	d
ldbl_EGeHeapCn_t	TEmplate/ldbl_eg_eheap.h	/^ldbl_EGeHeapCn_t;$/;"	t	typeref:struct:__anon50
ldbl_EGeHeapDel	TEmplate/ldbl_eg_eheap.h	311;"	d
ldbl_EGeHeapEmpty	TEmplate/ldbl_eg_eheap.h	142;"	d
ldbl_EGeHeapFatherId	TEmplate/ldbl_eg_eheap.h	202;"	d
ldbl_EGeHeapFirstChildId	TEmplate/ldbl_eg_eheap.h	249;"	d
ldbl_EGeHeapGetMin	TEmplate/ldbl_eg_eheap.h	180;"	d
ldbl_EGeHeapGetMinVal	TEmplate/ldbl_eg_eheap.h	170;"	d
ldbl_EGeHeapInit	TEmplate/ldbl_eg_eheap.h	148;"	d
ldbl_EGeHeapIsFull	TEmplate/ldbl_eg_eheap.h	136;"	d
ldbl_EGeHeapResize	TEmplate/ldbl_eg_eheap.h	191;"	d
ldbl_EGeHeapSiftDown	TEmplate/ldbl_eg_eheap.h	259;"	d
ldbl_EGeHeapSiftUp	TEmplate/ldbl_eg_eheap.h	210;"	d
ldbl_EGeHeap_t	TEmplate/ldbl_eg_eheap.h	/^ldbl_EGeHeap_t;$/;"	t	typeref:struct:__anon51
ldbl_EGeHepReset	TEmplate/ldbl_eg_eheap.h	155;"	d
ldbl_EGeKHeapAdd	TEmplate/ldbl_eg_ekheap.h	288;"	d
ldbl_EGeKHeapCHECK_CN	TEmplate/ldbl_eg_ekheap.h	70;"	d
ldbl_EGeKHeapCHECK_CN	TEmplate/ldbl_eg_ekheap.h	73;"	d
ldbl_EGeKHeapCHECK_NF	TEmplate/ldbl_eg_ekheap.h	71;"	d
ldbl_EGeKHeapCHECK_NF	TEmplate/ldbl_eg_ekheap.h	74;"	d
ldbl_EGeKHeapChangeD	TEmplate/ldbl_eg_ekheap.h	411;"	d
ldbl_EGeKHeapChangeVal	TEmplate/ldbl_eg_ekheap.h	354;"	d
ldbl_EGeKHeapCheck	TEmplate/ldbl_eg_ekheap.h	384;"	d
ldbl_EGeKHeapCheck	TEmplate/ldbl_eg_ekheap.h	401;"	d
ldbl_EGeKHeapClear	TEmplate/ldbl_eg_ekheap.h	169;"	d
ldbl_EGeKHeapCnClear	TEmplate/ldbl_eg_ekheap.h	123;"	d
ldbl_EGeKHeapCnInit	TEmplate/ldbl_eg_ekheap.h	104;"	d
ldbl_EGeKHeapCnReset	TEmplate/ldbl_eg_ekheap.h	116;"	d
ldbl_EGeKHeapCn_t	TEmplate/ldbl_eg_ekheap.h	/^ldbl_EGeKHeapCn_t;$/;"	t	typeref:struct:__anon52
ldbl_EGeKHeapCopyVal	TEmplate/ldbl_eg_ekheap.c	/^void ldbl_EGeKHeapCopyVal(long double*const dst, const long double*const src)$/;"	f
ldbl_EGeKHeapDel	TEmplate/ldbl_eg_ekheap.h	365;"	d
ldbl_EGeKHeapEmpty	TEmplate/ldbl_eg_ekheap.h	149;"	d
ldbl_EGeKHeapFatherId	TEmplate/ldbl_eg_ekheap.h	226;"	d
ldbl_EGeKHeapFirstChildId	TEmplate/ldbl_eg_ekheap.h	301;"	d
ldbl_EGeKHeapGetMin	TEmplate/ldbl_eg_ekheap.h	204;"	d
ldbl_EGeKHeapGetMinKVal	TEmplate/ldbl_eg_ekheap.h	191;"	d
ldbl_EGeKHeapGetMinVal	TEmplate/ldbl_eg_ekheap.h	180;"	d
ldbl_EGeKHeapInit	TEmplate/ldbl_eg_ekheap.h	155;"	d
ldbl_EGeKHeapIsFull	TEmplate/ldbl_eg_ekheap.h	143;"	d
ldbl_EGeKHeapIsLess	TEmplate/ldbl_eg_ekheap.h	234;"	d
ldbl_EGeKHeapResize	TEmplate/ldbl_eg_ekheap.h	215;"	d
ldbl_EGeKHeapSiftDown	TEmplate/ldbl_eg_ekheap.h	311;"	d
ldbl_EGeKHeapSiftUp	TEmplate/ldbl_eg_ekheap.h	262;"	d
ldbl_EGeKHeap_t	TEmplate/ldbl_eg_ekheap.h	/^ldbl_EGeKHeap_t;$/;"	t	typeref:struct:__anon53
ldbl_EGeKHepReset	TEmplate/ldbl_eg_ekheap.h	162;"	d
ldbl_EGguReadXgraph	TEmplate/ldbl_eg_dijkstra.c	/^int ldbl_EGguReadXgraph($/;"	f
ldbl_EGlpNumAddInnProdTo	src/eg_lpnum.ldbl.h	352;"	d
ldbl_EGlpNumAddTo	src/eg_lpnum.ldbl.h	382;"	d
ldbl_EGlpNumAddUiTo	src/eg_lpnum.ldbl.h	372;"	d
ldbl_EGlpNumAllocArray	src/eg_lpnum.ldbl.h	80;"	d
ldbl_EGlpNumCeil	src/eg_lpnum.ldbl.h	99;"	d
ldbl_EGlpNumClearVar	src/eg_lpnum.ldbl.h	478;"	d
ldbl_EGlpNumCopy	src/eg_lpnum.ldbl.h	256;"	d
ldbl_EGlpNumCopyAbs	src/eg_lpnum.ldbl.h	292;"	d
ldbl_EGlpNumCopyArray	src/eg_lpnum.ldbl.h	330;"	d
ldbl_EGlpNumCopyDiff	src/eg_lpnum.ldbl.h	238;"	d
ldbl_EGlpNumCopyDiffRatio	src/eg_lpnum.ldbl.h	229;"	d
ldbl_EGlpNumCopyFrac	src/eg_lpnum.ldbl.h	314;"	d
ldbl_EGlpNumCopyNeg	src/eg_lpnum.ldbl.h	304;"	d
ldbl_EGlpNumCopySqrOver	src/eg_lpnum.ldbl.h	280;"	d
ldbl_EGlpNumCopySum	src/eg_lpnum.ldbl.h	247;"	d
ldbl_EGlpNumDivTo	src/eg_lpnum.ldbl.h	415;"	d
ldbl_EGlpNumDivUiTo	src/eg_lpnum.ldbl.h	426;"	d
ldbl_EGlpNumFloor	src/eg_lpnum.ldbl.h	104;"	d
ldbl_EGlpNumFreeArray	src/eg_lpnum.ldbl.h	58;"	d
ldbl_EGlpNumGetStr	src/eg_lpnum.ldbl.h	48;"	d
ldbl_EGlpNumInitVar	src/eg_lpnum.ldbl.h	474;"	d
ldbl_EGlpNumInnProd	TEmplate/ldbl_eg_numutil.h	57;"	d
ldbl_EGlpNumInv	src/eg_lpnum.ldbl.h	110;"	d
ldbl_EGlpNumIsDiffLess	src/eg_lpnum.ldbl.h	186;"	d
ldbl_EGlpNumIsEqqual	src/eg_lpnum.ldbl.h	120;"	d
ldbl_EGlpNumIsEqual	src/eg_lpnum.ldbl.h	133;"	d
ldbl_EGlpNumIsGreaDbl	src/eg_lpnum.ldbl.h	208;"	d
ldbl_EGlpNumIsGreatZero	src/eg_lpnum.ldbl.h	155;"	d
ldbl_EGlpNumIsLeq	src/eg_lpnum.ldbl.h	219;"	d
ldbl_EGlpNumIsLess	src/eg_lpnum.ldbl.h	148;"	d
ldbl_EGlpNumIsLessDbl	src/eg_lpnum.ldbl.h	197;"	d
ldbl_EGlpNumIsLessZero	src/eg_lpnum.ldbl.h	162;"	d
ldbl_EGlpNumIsNeq	src/eg_lpnum.ldbl.h	134;"	d
ldbl_EGlpNumIsNeqZero	src/eg_lpnum.ldbl.h	136;"	d
ldbl_EGlpNumIsNeqq	src/eg_lpnum.ldbl.h	135;"	d
ldbl_EGlpNumIsNeqqZero	src/eg_lpnum.ldbl.h	137;"	d
ldbl_EGlpNumIsSumLess	src/eg_lpnum.ldbl.h	174;"	d
ldbl_EGlpNumMultTo	src/eg_lpnum.ldbl.h	404;"	d
ldbl_EGlpNumMultUiTo	src/eg_lpnum.ldbl.h	437;"	d
ldbl_EGlpNumOne	src/eg_lpnum.ldbl.h	453;"	d
ldbl_EGlpNumReadStr	src/eg_lpnum.ldbl.h	40;"	d
ldbl_EGlpNumReallocArray	src/eg_lpnum.ldbl.h	63;"	d
ldbl_EGlpNumSet	src/eg_lpnum.ldbl.h	94;"	d
ldbl_EGlpNumSetToMaxAbs	src/eg_lpnum.ldbl.h	266;"	d
ldbl_EGlpNumSetToMinAbs	src/eg_lpnum.ldbl.h	268;"	d
ldbl_EGlpNumSign	src/eg_lpnum.ldbl.h	461;"	d
ldbl_EGlpNumSubInnProdTo	src/eg_lpnum.ldbl.h	341;"	d
ldbl_EGlpNumSubTo	src/eg_lpnum.ldbl.h	393;"	d
ldbl_EGlpNumSubUiTo	src/eg_lpnum.ldbl.h	362;"	d
ldbl_EGlpNumToLf	src/eg_lpnum.ldbl.h	470;"	d
ldbl_EGlpNumZero	src/eg_lpnum.ldbl.h	445;"	d
ldbl_EGsrkAddEdge	TEmplate/ldbl_eg_shrink_graph.h	180;"	d
ldbl_EGsrkAddNode	TEmplate/ldbl_eg_shrink_graph.h	168;"	d
ldbl_EGsrkEdgeClear	TEmplate/ldbl_eg_shrink_graph.h	123;"	d
ldbl_EGsrkEdgeInit	TEmplate/ldbl_eg_shrink_graph.h	111;"	d
ldbl_EGsrkEdge_t	TEmplate/ldbl_eg_shrink_graph.h	/^ldbl_EGsrkEdge_t;$/;"	t	typeref:struct:ldbl_EGsrkEdge_t
ldbl_EGsrkEdge_t	TEmplate/ldbl_eg_shrink_graph.h	/^typedef struct ldbl_EGsrkEdge_t$/;"	s
ldbl_EGsrkGraphClear	TEmplate/ldbl_eg_shrink_graph.h	139;"	d
ldbl_EGsrkGraphInit	TEmplate/ldbl_eg_shrink_graph.h	130;"	d
ldbl_EGsrkGraph_t	TEmplate/ldbl_eg_shrink_graph.h	/^ldbl_EGsrkGraph_t;$/;"	t	typeref:struct:ldbl_EGsrkGraph_t
ldbl_EGsrkGraph_t	TEmplate/ldbl_eg_shrink_graph.h	/^typedef struct ldbl_EGsrkGraph_t$/;"	s
ldbl_EGsrkIdentifyNodes	TEmplate/ldbl_eg_shrink_graph.c	/^ldbl_EGsrkNode_t *ldbl_EGsrkIdentifyNodes (ldbl_EGsrkGraph_t * const G,$/;"	f
ldbl_EGsrkNodeClear	TEmplate/ldbl_eg_shrink_graph.h	158;"	d
ldbl_EGsrkNodeInit	TEmplate/ldbl_eg_shrink_graph.h	144;"	d
ldbl_EGsrkNode_t	TEmplate/ldbl_eg_shrink_graph.h	/^ldbl_EGsrkNode_t;$/;"	t	typeref:struct:ldbl_EGsrkNode_t
ldbl_EGsrkNode_t	TEmplate/ldbl_eg_shrink_graph.h	/^typedef struct ldbl_EGsrkNode_t$/;"	s
ldbl_EGutilPermSort	TEmplate/ldbl_eg_numutil.c	/^void ldbl_EGutilPermSort (const size_t sz,$/;"	f
ldbl_EGutilPermSort2	TEmplate/ldbl_eg_numutil.c	/^void ldbl_EGutilPermSort2 (const size_t sz,$/;"	f
ldbl_HILBERT_TABLE_SIZE	TEmplate/ldbl_eg_dmatrix.ex.c	45;"	d	file:
ldbl_MaxLpNum	src/eg_lpnum.ldbl.h	34;"	d
ldbl_MinLpNum	src/eg_lpnum.ldbl.h	35;"	d
ldbl_UPDATE	TEmplate/ldbl_eg_min_cut.c	50;"	d	file:
ldbl_UPDATE	TEmplate/ldbl_eg_min_cut.c	52;"	d	file:
ldbl_UPDATE	TEmplate/ldbl_eg_push_relabel.c	51;"	d	file:
ldbl_UPDATE	TEmplate/ldbl_eg_push_relabel.c	53;"	d	file:
ldbl__EG_MIN_CUT_H	TEmplate/ldbl_eg_min_cut.h	65;"	d
ldbl__EGalgMChitNeighbours	TEmplate/ldbl_eg_min_cut.c	135;"	d	file:
ldbl__EGalgMCunhitNeighbours	TEmplate/ldbl_eg_min_cut.c	154;"	d	file:
ldbl__EGshrinkGraph_h__	TEmplate/ldbl_eg_shrink_graph.h	51;"	d
ldbl___EG_ABHEAP__	TEmplate/ldbl_eg_abheap.h	49;"	d
ldbl___EG_ABKHEAP__	TEmplate/ldbl_eg_abkheap.h	49;"	d
ldbl___EG_AHEAP__	TEmplate/ldbl_eg_aheap.h	48;"	d
ldbl___EG_DBASIS_REDUCTION__	TEmplate/ldbl_eg_dbasis_red.h	24;"	d
ldbl___EG_DIJKSTRA_H	TEmplate/ldbl_eg_dijkstra.h	34;"	d
ldbl___EG_DMATRIX_H__	TEmplate/ldbl_eg_dmatrix.h	24;"	d
ldbl___EG_EHEAP__	TEmplate/ldbl_eg_eheap.h	62;"	d
ldbl___EG_EKHEAP__	TEmplate/ldbl_eg_ekheap.h	56;"	d
ldbl___EG_NUMUTIL_H__	TEmplate/ldbl_eg_numutil.h	24;"	d
ldbl___EG_PUSH_RELABEL_H__	TEmplate/ldbl_eg_push_relabel.h	79;"	d
ldbl___EGaBKheapSiftDown	TEmplate/ldbl_eg_abkheap.h	269;"	d
ldbl___EGaBKheapSiftUp	TEmplate/ldbl_eg_abkheap.h	214;"	d
ldbl___EGaBheapSiftDown	TEmplate/ldbl_eg_abheap.h	244;"	d
ldbl___EGaBheapSiftUp	TEmplate/ldbl_eg_abheap.h	189;"	d
ldbl___EGaHeapSiftDown	TEmplate/ldbl_eg_aheap.h	256;"	d
ldbl___EGaHeapSiftUp	TEmplate/ldbl_eg_aheap.h	201;"	d
ldbl___EGlpNumInnProd	TEmplate/ldbl_eg_numutil.c	/^void ldbl___EGlpNumInnProd(long double*rop,$/;"	f
ldbl___MC_DEBUG_	TEmplate/ldbl_eg_min_cut.h	81;"	d
ldbl___MC_PROFILE_	TEmplate/ldbl_eg_min_cut.h	85;"	d
ldbl___MC_VRBLVL_	TEmplate/ldbl_eg_min_cut.h	77;"	d
ldbl___MC_profile_lvl	TEmplate/ldbl_eg_min_cut.c	/^static unsigned long long ldbl___MC_profile_lvl[5] = { 0, 0, 0, 0, 0 };$/;"	v	file:
ldbl___MC_profile_tn	TEmplate/ldbl_eg_min_cut.c	/^static unsigned long long ldbl___MC_profile_tn = 0;\/**<Number of calls to #ldbl_EGalgMCtestNode*\/$/;"	v	file:
ldbl___MC_profile_up	TEmplate/ldbl_eg_min_cut.c	/^static unsigned long long ldbl___MC_profile_up = 0;\/**< Number of improving cuts found *\/$/;"	v	file:
ldbl___PR_DEBUGL__	TEmplate/ldbl_eg_push_relabel.h	89;"	d
ldbl___PR_PROFILE__	TEmplate/ldbl_eg_push_relabel.h	101;"	d
ldbl___PR_TEST_VERBOSE__	TEmplate/ldbl_eg_push_relabel.h	93;"	d
ldbl___PR_VERBOSE__	TEmplate/ldbl_eg_push_relabel.h	97;"	d
ldbl___PR_profile_lvel	TEmplate/ldbl_eg_push_relabel.c	/^static unsigned long long ldbl___PR_profile_lvel = 0;$/;"	v	file:
ldbl___PR_profile_move	TEmplate/ldbl_eg_push_relabel.c	/^static unsigned long long ldbl___PR_profile_move = 0;$/;"	v	file:
ldbl___PR_profile_numb	TEmplate/ldbl_eg_push_relabel.c	/^static unsigned long long ldbl___PR_profile_numb = 0;$/;"	v	file:
ldbl___PR_profile_push	TEmplate/ldbl_eg_push_relabel.c	/^static unsigned long long ldbl___PR_profile_push = 0;$/;"	v	file:
ldbl___PR_profile_rela	TEmplate/ldbl_eg_push_relabel.c	/^static unsigned long long ldbl___PR_profile_rela = 0;$/;"	v	file:
ldbl___last_global	TEmplate/ldbl_eg_push_relabel.c	/^static unsigned long long ldbl___last_global = 0;$/;"	v	file:
ldbl_aheap_parseargs	TEmplate/ldbl_eg_abheap.ex.c	/^int ldbl_aheap_parseargs (int argc,$/;"	f
ldbl_aheap_parseargs	TEmplate/ldbl_eg_abkheap.ex.c	/^int ldbl_aheap_parseargs (int argc,$/;"	f
ldbl_aheap_parseargs	TEmplate/ldbl_eg_aheap.ex.c	/^int ldbl_aheap_parseargs (int argc,$/;"	f
ldbl_aheap_usage	TEmplate/ldbl_eg_abheap.ex.c	/^void ldbl_aheap_usage (char *program)$/;"	f
ldbl_aheap_usage	TEmplate/ldbl_eg_abkheap.ex.c	/^void ldbl_aheap_usage (char *program)$/;"	f
ldbl_aheap_usage	TEmplate/ldbl_eg_aheap.ex.c	/^void ldbl_aheap_usage (char *program)$/;"	f
ldbl_display_srkG	TEmplate/ldbl_eg_shrink_graph.ex.c	/^static inline void ldbl_display_srkG (ldbl_EGsrkGraph_t * G,$/;"	f	file:
ldbl_djk_parseargs	TEmplate/ldbl_eg_dijkstra.ex.c	/^static inline void ldbl_djk_parseargs(int argc,char**argv)$/;"	f	file:
ldbl_djk_usage	TEmplate/ldbl_eg_dijkstra.ex.c	/^static inline void ldbl_djk_usage(const char*const progname)$/;"	f	file:
ldbl_dmatrix_hilbert_eigenvalues	TEmplate/ldbl_eg_dmatrix.ex.c	/^static unsigned ldbl_dmatrix_hilbert_eigenvalues[ldbl_HILBERT_TABLE_SIZE] = {$/;"	v	file:
ldbl_dmatrix_parseargs	TEmplate/ldbl_eg_dmatrix.ex.c	/^int ldbl_dmatrix_parseargs (int argc,$/;"	f
ldbl_dmatrix_usage	TEmplate/ldbl_eg_dmatrix.ex.c	/^void ldbl_dmatrix_usage (char *program)$/;"	f
ldbl_eheap_parseargs	TEmplate/ldbl_eg_eheap.ex.c	/^int ldbl_eheap_parseargs (int argc,$/;"	f
ldbl_eheap_usage	TEmplate/ldbl_eg_eheap.ex.c	/^void ldbl_eheap_usage (char *program)$/;"	f
ldbl_ekheap_parseargs	TEmplate/ldbl_eg_ekheap.ex.c	/^int ldbl_ekheap_parseargs (int argc,$/;"	f
ldbl_ekheap_usage	TEmplate/ldbl_eg_ekheap.ex.c	/^void ldbl_ekheap_usage (char *program)$/;"	f
ldbl_epsLpNum	src/eg_lpnum.ldbl.h	33;"	d
ldbl_file_name	TEmplate/ldbl_eg_min_cut.ex.c	/^static char *ldbl_file_name = 0;$/;"	v	file:
ldbl_fname	TEmplate/ldbl_eg_dijkstra.ex.c	/^static char ldbl_fname[1024];$/;"	v	file:
ldbl_lvl	TEmplate/ldbl_eg_min_cut.ex.c	/^static unsigned int ldbl_lvl = 5;$/;"	v	file:
ldbl_lvl	TEmplate/ldbl_eg_min_cut.h	/^	unsigned int ldbl_lvl;		\/**< Current node level test to be performed *\/$/;"	m	struct:ldbl_EGalgMCnode_t
ldbl_mc_all_cuts_t	TEmplate/ldbl_eg_min_cut.ex.c	/^ldbl_mc_all_cuts_t;$/;"	t	typeref:struct:ldbl_mc_all_cuts_t	file:
ldbl_mc_all_cuts_t	TEmplate/ldbl_eg_min_cut.ex.c	/^typedef struct ldbl_mc_all_cuts_t$/;"	s	file:
ldbl_mc_parseargs	TEmplate/ldbl_eg_min_cut.ex.c	/^static inline int ldbl_mc_parseargs (int argc,$/;"	f	file:
ldbl_mc_store_cuts	TEmplate/ldbl_eg_min_cut.ex.c	/^int ldbl_mc_store_cuts (long double value,$/;"	f
ldbl_mc_usage	TEmplate/ldbl_eg_min_cut.ex.c	/^static void ldbl_mc_usage (char **argv)$/;"	f	file:
ldbl_my_constr	TEmplate/ldbl_eg_memslab.ex.c	/^static void ldbl_my_constr (void *ptr)$/;"	f	file:
ldbl_my_dest	TEmplate/ldbl_eg_memslab.ex.c	/^static void ldbl_my_dest (void *ptr)$/;"	f	file:
ldbl_oneLpNum	src/eg_lpnum.ldbl.h	32;"	d
ldbl_pr_usage	TEmplate/ldbl_eg_push_relabel.ex.c	/^static inline void ldbl_pr_usage (char **argv)$/;"	f	file:
ldbl_source	TEmplate/ldbl_eg_dijkstra.ex.c	/^static int32_t ldbl_source=0;$/;"	v	file:
ldbl_srk_usage	TEmplate/ldbl_eg_shrink_graph.ex.c	/^static inline void ldbl_srk_usage (char **argv)$/;"	f	file:
ldbl_verbose	TEmplate/ldbl_eg_dijkstra.ex.c	/^static int ldbl_verbose=1;$/;"	v	file:
ldbl_zeroLpNum	src/eg_lpnum.ldbl.h	31;"	d
length	TEmplate/dbl_eg_dbasis_red.h	/^	size_t length;		\/**< @brief Length of the vectors in the basis, note that$/;"	m	struct:dbl_EGdBsRed_t
length	TEmplate/fp20_eg_dbasis_red.h	/^	size_t length;		\/**< @brief Length of the vectors in the basis, note that$/;"	m	struct:fp20_EGdBsRed_t
length	TEmplate/int32_eg_dbasis_red.h	/^	size_t length;		\/**< @brief Length of the vectors in the basis, note that$/;"	m	struct:int32_EGdBsRed_t
length	TEmplate/int_eg_dbasis_red.h	/^	size_t length;		\/**< @brief Length of the vectors in the basis, note that$/;"	m	struct:int_EGdBsRed_t
length	TEmplate/ldbl_eg_dbasis_red.h	/^	size_t length;		\/**< @brief Length of the vectors in the basis, note that$/;"	m	struct:ldbl_EGdBsRed_t
length	TEmplate/mpf_eg_dbasis_red.h	/^	size_t length;		\/**< @brief Length of the vectors in the basis, note that$/;"	m	struct:mpf_EGdBsRed_t
length	TEmplate/mpq_eg_dbasis_red.h	/^	size_t length;		\/**< @brief Length of the vectors in the basis, note that$/;"	m	struct:mpq_EGdBsRed_t
lftofp10	src/eg_fp.h	153;"	d
lftofp20	src/eg_fp.h	154;"	d
lftofp25	src/eg_fp.h	155;"	d
lftofp28	src/eg_fp.h	156;"	d
line	src/eg_memslab.h	/^	int line;								\/**< Line where the structure was initialized *\/$/;"	m	struct:EGmemSlabPool_t
link	src/eg_elink.h	/^	struct EGeLink_t *link;$/;"	m	struct:EGeLink_t	typeref:struct:EGeLink_t::EGeLink_t
llftofp10	src/eg_fp.h	160;"	d
llftofp20	src/eg_fp.h	161;"	d
llftofp25	src/eg_fp.h	162;"	d
llftofp28	src/eg_fp.h	163;"	d
llint_EGlpNumAddInnProdTo	src/eg_lpnum.llint.h	351;"	d
llint_EGlpNumAddTo	src/eg_lpnum.llint.h	381;"	d
llint_EGlpNumAddUiTo	src/eg_lpnum.llint.h	371;"	d
llint_EGlpNumAllocArray	src/eg_lpnum.llint.h	79;"	d
llint_EGlpNumCeil	src/eg_lpnum.llint.h	98;"	d
llint_EGlpNumClearVar	src/eg_lpnum.llint.h	477;"	d
llint_EGlpNumCopy	src/eg_lpnum.llint.h	255;"	d
llint_EGlpNumCopyAbs	src/eg_lpnum.llint.h	291;"	d
llint_EGlpNumCopyArray	src/eg_lpnum.llint.h	329;"	d
llint_EGlpNumCopyDiff	src/eg_lpnum.llint.h	237;"	d
llint_EGlpNumCopyDiffRatio	src/eg_lpnum.llint.h	228;"	d
llint_EGlpNumCopyFrac	src/eg_lpnum.llint.h	313;"	d
llint_EGlpNumCopyNeg	src/eg_lpnum.llint.h	303;"	d
llint_EGlpNumCopySqrOver	src/eg_lpnum.llint.h	279;"	d
llint_EGlpNumCopySum	src/eg_lpnum.llint.h	246;"	d
llint_EGlpNumDivTo	src/eg_lpnum.llint.h	414;"	d
llint_EGlpNumDivUiTo	src/eg_lpnum.llint.h	425;"	d
llint_EGlpNumFloor	src/eg_lpnum.llint.h	103;"	d
llint_EGlpNumFreeArray	src/eg_lpnum.llint.h	57;"	d
llint_EGlpNumGetStr	src/eg_lpnum.llint.h	47;"	d
llint_EGlpNumInitVar	src/eg_lpnum.llint.h	473;"	d
llint_EGlpNumInv	src/eg_lpnum.llint.h	109;"	d
llint_EGlpNumIsDiffLess	src/eg_lpnum.llint.h	185;"	d
llint_EGlpNumIsEqqual	src/eg_lpnum.llint.h	119;"	d
llint_EGlpNumIsEqual	src/eg_lpnum.llint.h	132;"	d
llint_EGlpNumIsGreaDbl	src/eg_lpnum.llint.h	207;"	d
llint_EGlpNumIsGreatZero	src/eg_lpnum.llint.h	154;"	d
llint_EGlpNumIsLeq	src/eg_lpnum.llint.h	218;"	d
llint_EGlpNumIsLess	src/eg_lpnum.llint.h	147;"	d
llint_EGlpNumIsLessDbl	src/eg_lpnum.llint.h	196;"	d
llint_EGlpNumIsLessZero	src/eg_lpnum.llint.h	161;"	d
llint_EGlpNumIsNeq	src/eg_lpnum.llint.h	133;"	d
llint_EGlpNumIsNeqZero	src/eg_lpnum.llint.h	135;"	d
llint_EGlpNumIsNeqq	src/eg_lpnum.llint.h	134;"	d
llint_EGlpNumIsNeqqZero	src/eg_lpnum.llint.h	136;"	d
llint_EGlpNumIsSumLess	src/eg_lpnum.llint.h	173;"	d
llint_EGlpNumMultTo	src/eg_lpnum.llint.h	403;"	d
llint_EGlpNumMultUiTo	src/eg_lpnum.llint.h	436;"	d
llint_EGlpNumOne	src/eg_lpnum.llint.h	452;"	d
llint_EGlpNumReadStr	src/eg_lpnum.llint.h	39;"	d
llint_EGlpNumReallocArray	src/eg_lpnum.llint.h	62;"	d
llint_EGlpNumSet	src/eg_lpnum.llint.h	93;"	d
llint_EGlpNumSetToMaxAbs	src/eg_lpnum.llint.h	265;"	d
llint_EGlpNumSetToMinAbs	src/eg_lpnum.llint.h	267;"	d
llint_EGlpNumSign	src/eg_lpnum.llint.h	460;"	d
llint_EGlpNumSubInnProdTo	src/eg_lpnum.llint.h	340;"	d
llint_EGlpNumSubTo	src/eg_lpnum.llint.h	392;"	d
llint_EGlpNumSubUiTo	src/eg_lpnum.llint.h	361;"	d
llint_EGlpNumToLf	src/eg_lpnum.llint.h	469;"	d
llint_EGlpNumZero	src/eg_lpnum.llint.h	444;"	d
llint_MaxLpNum	src/eg_lpnum.llint.h	33;"	d
llint_MinLpNum	src/eg_lpnum.llint.h	34;"	d
llint_epsLpNum	src/eg_lpnum.llint.h	32;"	d
llint_oneLpNum	src/eg_lpnum.llint.h	31;"	d
llint_zeroLpNum	src/eg_lpnum.llint.h	30;"	d
lltofp10	src/eg_fp.h	179;"	d
lltofp20	src/eg_fp.h	180;"	d
lltofp25	src/eg_fp.h	181;"	d
lltofp28	src/eg_fp.h	182;"	d
low	SoftFloat/softfloat.h	/^	uint64_t low,$/;"	m	struct:__anon96
low	SoftFloat/softfloat.h	/^	uint64_t low;$/;"	m	struct:__anon95
ltofp10	src/eg_fp.h	173;"	d
ltofp20	src/eg_fp.h	174;"	d
ltofp25	src/eg_fp.h	175;"	d
ltofp28	src/eg_fp.h	176;"	d
lvl	src/eg_maxclosure.ex.c	/^static int lvl = 5;$/;"	v	file:
lvl_cn	TEmplate/dbl_eg_min_cut.h	/^	EGeList_t lvl_cn;		\/**< Connector for the level list *\/$/;"	m	struct:dbl_EGalgMCnode_t
lvl_cn	TEmplate/fp20_eg_min_cut.h	/^	EGeList_t lvl_cn;		\/**< Connector for the level list *\/$/;"	m	struct:fp20_EGalgMCnode_t
lvl_cn	TEmplate/int32_eg_min_cut.h	/^	EGeList_t lvl_cn;		\/**< Connector for the level list *\/$/;"	m	struct:int32_EGalgMCnode_t
lvl_cn	TEmplate/int_eg_min_cut.h	/^	EGeList_t lvl_cn;		\/**< Connector for the level list *\/$/;"	m	struct:int_EGalgMCnode_t
lvl_cn	TEmplate/ldbl_eg_min_cut.h	/^	EGeList_t lvl_cn;		\/**< Connector for the level list *\/$/;"	m	struct:ldbl_EGalgMCnode_t
lvl_cn	TEmplate/mpf_eg_min_cut.h	/^	EGeList_t lvl_cn;		\/**< Connector for the level list *\/$/;"	m	struct:mpf_EGalgMCnode_t
lvl_cn	TEmplate/mpq_eg_min_cut.h	/^	EGeList_t lvl_cn;		\/**< Connector for the level list *\/$/;"	m	struct:mpq_EGalgMCnode_t
lvl_list	TEmplate/dbl_eg_min_cut.h	/^	EGeList_t lvl_list[5];		\/**< List of nodes in different levels of tests *\/$/;"	m	struct:dbl_EGalgMCgraph_t
lvl_list	TEmplate/fp20_eg_min_cut.h	/^	EGeList_t lvl_list[5];		\/**< List of nodes in different levels of tests *\/$/;"	m	struct:fp20_EGalgMCgraph_t
lvl_list	TEmplate/int32_eg_min_cut.h	/^	EGeList_t lvl_list[5];		\/**< List of nodes in different levels of tests *\/$/;"	m	struct:int32_EGalgMCgraph_t
lvl_list	TEmplate/int_eg_min_cut.h	/^	EGeList_t lvl_list[5];		\/**< List of nodes in different levels of tests *\/$/;"	m	struct:int_EGalgMCgraph_t
lvl_list	TEmplate/ldbl_eg_min_cut.h	/^	EGeList_t lvl_list[5];		\/**< List of nodes in different levels of tests *\/$/;"	m	struct:ldbl_EGalgMCgraph_t
lvl_list	TEmplate/mpf_eg_min_cut.h	/^	EGeList_t lvl_list[5];		\/**< List of nodes in different levels of tests *\/$/;"	m	struct:mpf_EGalgMCgraph_t
lvl_list	TEmplate/mpq_eg_min_cut.h	/^	EGeList_t lvl_list[5];		\/**< List of nodes in different levels of tests *\/$/;"	m	struct:mpq_EGalgMCgraph_t
m1	src/eg_random.c	27;"	d	file:
m2	src/eg_random.c	28;"	d	file:
main	TEmplate/dbl_eg_abheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_abkheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_aheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_dijkstra.ex.c	/^int main (int argc,char**argv)$/;"	f
main	TEmplate/dbl_eg_dmatrix.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_eheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_ekheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_lpnum.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_memslab.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_min_cut.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_push_relabel.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/dbl_eg_shrink_graph.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_abheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_abkheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_aheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_dijkstra.ex.c	/^int main (int argc,char**argv)$/;"	f
main	TEmplate/fp20_eg_dmatrix.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_eheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_ekheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_lpnum.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_memslab.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_min_cut.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_push_relabel.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/fp20_eg_shrink_graph.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_abheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_abkheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_aheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_dijkstra.ex.c	/^int main (int argc,char**argv)$/;"	f
main	TEmplate/int32_eg_dmatrix.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_eheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_ekheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_lpnum.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_memslab.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_min_cut.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_push_relabel.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int32_eg_shrink_graph.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_abheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_abkheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_aheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_dijkstra.ex.c	/^int main (int argc,char**argv)$/;"	f
main	TEmplate/int_eg_dmatrix.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_eheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_ekheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_lpnum.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_memslab.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_min_cut.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_push_relabel.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/int_eg_shrink_graph.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_abheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_abkheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_aheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_dijkstra.ex.c	/^int main (int argc,char**argv)$/;"	f
main	TEmplate/ldbl_eg_dmatrix.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_eheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_ekheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_lpnum.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_memslab.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_min_cut.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_push_relabel.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/ldbl_eg_shrink_graph.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_abheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_abkheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_aheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_dijkstra.ex.c	/^int main (int argc,char**argv)$/;"	f
main	TEmplate/mpf_eg_dmatrix.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_eheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_ekheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_lpnum.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_memslab.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_min_cut.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_push_relabel.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpf_eg_shrink_graph.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_abheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_abkheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_aheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_dijkstra.ex.c	/^int main (int argc,char**argv)$/;"	f
main	TEmplate/mpq_eg_dmatrix.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_eheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_ekheap.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_lpnum.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_memslab.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_min_cut.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_push_relabel.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/mpq_eg_shrink_graph.ex.c	/^int main (int argc,$/;"	f
main	TEmplate/uint16_eg_idxlist.ex.c	/^int main (void)$/;"	f
main	TEmplate/uint32_eg_idxlist.ex.c	/^int main (void)$/;"	f
main	TEmplate/uint64_eg_idxlist.ex.c	/^int main (void)$/;"	f
main	TEmplate/uint8_eg_idxlist.ex.c	/^int main (void)$/;"	f
main	src/eg_a16list.ex.c	/^int main (void)$/;"	f
main	src/eg_a32hash.ex.c	/^int main (void)$/;"	f
main	src/eg_a32list.ex.c	/^int main (void)$/;"	f
main	src/eg_adgraph.ex.c	/^int main (void)$/;"	f
main	src/eg_ahash.ex.c	/^int main (void)$/;"	f
main	src/eg_alist.ex.c	/^int main (void)$/;"	f
main	src/eg_ebtree.ex.c	/^int main (int argc,$/;"	f
main	src/eg_edgraph.ex.c	/^int main (void)$/;"	f
main	src/eg_ehash.ex.c	/^int main (void)$/;"	f
main	src/eg_elist.ex.c	/^int main (void)$/;"	f
main	src/eg_eugraph.ex.c	/^int main (void)$/;"	f
main	src/eg_gcit.ex.c	/^int main (int argc,$/;"	f
main	src/eg_keytab.ex.c	/^int main (int argc,char**argv)$/;"	f
main	src/eg_maxclosure.ex.c	/^int main (int argc,$/;"	f
main	src/eg_net.ex.c	/^int main (int argc,$/;"	f
main	src/eg_octree.ex.c	/^int main (int argc,$/;"	f
main	src/eg_perm_it.ex.c	/^int main (int argc,$/;"	f
main	src/eg_random.ex.c	/^int main (void)$/;"	f
main	src/eg_raset.ex.c	/^int main (int argc,$/;"	f
main	src/eg_simula.ex.c	/^int main (int argc,char**argv)$/;"	f
main	src/eg_simula2.ex.c	/^int main (int argc,char**argv)$/;"	f
main	src/eg_slk.ex.c	/^int main (int argc,char**argv)$/;"	f
main	src/eg_symtab.ex.c	/^int main (int argc,char**argv)$/;"	f
main	src/eg_thread.ex.c	/^int main(int argc,char**argv)$/;"	f
map	src/eg_slk.h	/^	int* map;		\/**< map the internal id (from zero to #EGflipper_t::sz - 1) to $/;"	m	struct:EGflipper_t
matrow	TEmplate/dbl_eg_dmatrix.h	/^	double **matrow;$/;"	m	struct:dbl_EGdMatrix_t
matrow	TEmplate/fp20_eg_dmatrix.h	/^	EGfp20_t **matrow;$/;"	m	struct:fp20_EGdMatrix_t
matrow	TEmplate/int32_eg_dmatrix.h	/^	int32_t **matrow;$/;"	m	struct:int32_EGdMatrix_t
matrow	TEmplate/int_eg_dmatrix.h	/^	int **matrow;$/;"	m	struct:int_EGdMatrix_t
matrow	TEmplate/ldbl_eg_dmatrix.h	/^	long double **matrow;$/;"	m	struct:ldbl_EGdMatrix_t
matrow	TEmplate/mpf_eg_dmatrix.h	/^	mpf_t **matrow;$/;"	m	struct:mpf_EGdMatrix_t
matrow	TEmplate/mpq_eg_dmatrix.h	/^	mpq_t **matrow;$/;"	m	struct:mpq_EGdMatrix_t
matval	TEmplate/dbl_eg_dmatrix.h	/^	double *matval;\/**< @brief Values for all entries *\/$/;"	m	struct:dbl_EGdMatrix_t
matval	TEmplate/fp20_eg_dmatrix.h	/^	EGfp20_t *matval;\/**< @brief Values for all entries *\/$/;"	m	struct:fp20_EGdMatrix_t
matval	TEmplate/int32_eg_dmatrix.h	/^	int32_t *matval;\/**< @brief Values for all entries *\/$/;"	m	struct:int32_EGdMatrix_t
matval	TEmplate/int_eg_dmatrix.h	/^	int *matval;\/**< @brief Values for all entries *\/$/;"	m	struct:int_EGdMatrix_t
matval	TEmplate/ldbl_eg_dmatrix.h	/^	long double *matval;\/**< @brief Values for all entries *\/$/;"	m	struct:ldbl_EGdMatrix_t
matval	TEmplate/mpf_eg_dmatrix.h	/^	mpf_t *matval;\/**< @brief Values for all entries *\/$/;"	m	struct:mpf_EGdMatrix_t
matval	TEmplate/mpq_eg_dmatrix.h	/^	mpq_t *matval;\/**< @brief Values for all entries *\/$/;"	m	struct:mpq_EGdMatrix_t
max_color	src/eg_memslab.h	/^	uint8_t max_color;			\/**< Maximum valid value for colors in this pool *\/$/;"	m	struct:EGmemSlabPool_t
max_slabs	src/eg_memslab.h	/^	uint64_t max_slabs;			\/**< Maximum number of slabs used *\/$/;"	m	struct:EGmemSlabPool_t
max_sz	TEmplate/dbl_eg_abheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon7
max_sz	TEmplate/dbl_eg_abkheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon5
max_sz	TEmplate/dbl_eg_aheap.h	/^	unsigned max_sz;$/;"	m	struct:__anon9
max_sz	TEmplate/dbl_eg_eheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon11
max_sz	TEmplate/dbl_eg_ekheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon13
max_sz	TEmplate/dbl_eg_min_cut.ex.c	/^	unsigned int max_sz;$/;"	m	struct:dbl_mc_all_cuts_t	file:
max_sz	TEmplate/fp20_eg_abheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon17
max_sz	TEmplate/fp20_eg_abkheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon15
max_sz	TEmplate/fp20_eg_aheap.h	/^	unsigned max_sz;$/;"	m	struct:__anon19
max_sz	TEmplate/fp20_eg_eheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon21
max_sz	TEmplate/fp20_eg_ekheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon23
max_sz	TEmplate/fp20_eg_min_cut.ex.c	/^	unsigned int max_sz;$/;"	m	struct:fp20_mc_all_cuts_t	file:
max_sz	TEmplate/int32_eg_abheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon37
max_sz	TEmplate/int32_eg_abkheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon35
max_sz	TEmplate/int32_eg_aheap.h	/^	unsigned max_sz;$/;"	m	struct:__anon39
max_sz	TEmplate/int32_eg_eheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon41
max_sz	TEmplate/int32_eg_ekheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon43
max_sz	TEmplate/int32_eg_min_cut.ex.c	/^	unsigned int max_sz;$/;"	m	struct:int32_mc_all_cuts_t	file:
max_sz	TEmplate/int_eg_abheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon27
max_sz	TEmplate/int_eg_abkheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon25
max_sz	TEmplate/int_eg_aheap.h	/^	unsigned max_sz;$/;"	m	struct:__anon29
max_sz	TEmplate/int_eg_eheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon31
max_sz	TEmplate/int_eg_ekheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon33
max_sz	TEmplate/int_eg_min_cut.ex.c	/^	unsigned int max_sz;$/;"	m	struct:int_mc_all_cuts_t	file:
max_sz	TEmplate/ldbl_eg_abheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon47
max_sz	TEmplate/ldbl_eg_abkheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon45
max_sz	TEmplate/ldbl_eg_aheap.h	/^	unsigned max_sz;$/;"	m	struct:__anon49
max_sz	TEmplate/ldbl_eg_eheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon51
max_sz	TEmplate/ldbl_eg_ekheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon53
max_sz	TEmplate/ldbl_eg_min_cut.ex.c	/^	unsigned int max_sz;$/;"	m	struct:ldbl_mc_all_cuts_t	file:
max_sz	TEmplate/mpf_eg_abheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon67
max_sz	TEmplate/mpf_eg_abkheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon65
max_sz	TEmplate/mpf_eg_aheap.h	/^	unsigned max_sz;$/;"	m	struct:__anon69
max_sz	TEmplate/mpf_eg_eheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon71
max_sz	TEmplate/mpf_eg_ekheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon73
max_sz	TEmplate/mpf_eg_min_cut.ex.c	/^	unsigned int max_sz;$/;"	m	struct:mpf_mc_all_cuts_t	file:
max_sz	TEmplate/mpq_eg_abheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon57
max_sz	TEmplate/mpq_eg_abkheap.h	/^	uint32_t max_sz;$/;"	m	struct:__anon55
max_sz	TEmplate/mpq_eg_aheap.h	/^	unsigned max_sz;$/;"	m	struct:__anon59
max_sz	TEmplate/mpq_eg_eheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon61
max_sz	TEmplate/mpq_eg_ekheap.h	/^	unsigned int max_sz;$/;"	m	struct:__anon63
max_sz	TEmplate/mpq_eg_min_cut.ex.c	/^	unsigned int max_sz;$/;"	m	struct:mpq_mc_all_cuts_t	file:
max_sz	src/eg_a32hash.h	/^	size_t max_sz;	\/**< @brief Number of entries in the array of lists *\/$/;"	m	struct:EGa32HashTable_t
max_sz	src/eg_ahash.h	/^	size_t max_sz;	\/**< @brief Number of entries in the array of lists *\/$/;"	m	struct:EGaHashTable_t
max_sz	src/eg_ehash.h	/^	size_t max_sz;	\/**< @brief Number of entries in the array of lists *\/$/;"	m	struct:EGeHashTable_t
max_sz	src/eg_slk.h	/^	size_t max_sz;	\/**< size of the arrays #EGflipper_t::tour, #EGflipper_t::inv and #EGflipper_t::map *\/$/;"	m	struct:EGflipper_t
max_t	src/eg_simula.h	/^	double max_t;			\/**< @brief sum of time intervals *\/$/;"	m	struct:__anon106
max_time	src/eg_simula.ex.c	/^static double max_time = 1440;\/**< maximum time for the simulation *\/$/;"	v	file:
max_time	src/eg_simula.h	/^	double max_time;	\/**< Horizon where to stop the simulation *\/$/;"	m	struct:__anon110
max_time	src/eg_simula2.ex.c	/^static double max_time = 1440;\/**< maximum time for the simulation *\/$/;"	v	file:
max_tot	src/eg_memslab.h	/^	uint64_t max_tot;				\/**< Maximum number of elements allocated *\/$/;"	m	struct:EGmemSlabPool_t
max_x	src/eg_octree.h	/^	uint16_t max_x;				\/**<@brief X-range of data [0..max_x-1] *\/$/;"	m	struct:__anon91
max_y	src/eg_octree.h	/^	uint16_t max_y;				\/**<@brief Y-range of data [0..max_y-1] *\/$/;"	m	struct:__anon91
max_z	src/eg_octree.h	/^	uint16_t max_z;				\/**<@brief Z-range of data [0..max_z-1] *\/$/;"	m	struct:__anon91
mc_parseargs	src/eg_maxclosure.ex.c	/^static inline int mc_parseargs (int argc,$/;"	f	file:
mc_usage	src/eg_maxclosure.ex.c	/^static void mc_usage (char **argv)$/;"	f	file:
members	TEmplate/dbl_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other edges shrunken within this edge *\/$/;"	m	struct:dbl_EGsrkEdge_t
members	TEmplate/dbl_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other nodes shrunken with this node *\/$/;"	m	struct:dbl_EGsrkNode_t
members	TEmplate/fp20_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other edges shrunken within this edge *\/$/;"	m	struct:fp20_EGsrkEdge_t
members	TEmplate/fp20_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other nodes shrunken with this node *\/$/;"	m	struct:fp20_EGsrkNode_t
members	TEmplate/int32_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other edges shrunken within this edge *\/$/;"	m	struct:int32_EGsrkEdge_t
members	TEmplate/int32_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other nodes shrunken with this node *\/$/;"	m	struct:int32_EGsrkNode_t
members	TEmplate/int_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other edges shrunken within this edge *\/$/;"	m	struct:int_EGsrkEdge_t
members	TEmplate/int_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other nodes shrunken with this node *\/$/;"	m	struct:int_EGsrkNode_t
members	TEmplate/ldbl_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other edges shrunken within this edge *\/$/;"	m	struct:ldbl_EGsrkEdge_t
members	TEmplate/ldbl_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other nodes shrunken with this node *\/$/;"	m	struct:ldbl_EGsrkNode_t
members	TEmplate/mpf_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other edges shrunken within this edge *\/$/;"	m	struct:mpf_EGsrkEdge_t
members	TEmplate/mpf_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other nodes shrunken with this node *\/$/;"	m	struct:mpf_EGsrkNode_t
members	TEmplate/mpq_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other edges shrunken within this edge *\/$/;"	m	struct:mpq_EGsrkEdge_t
members	TEmplate/mpq_eg_shrink_graph.h	/^	EGeList_t members;		\/**< list of other nodes shrunken with this node *\/$/;"	m	struct:mpq_EGsrkNode_t
mmb_sz	TEmplate/dbl_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the $/;"	m	struct:dbl_EGsrkEdge_t
mmb_sz	TEmplate/dbl_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the$/;"	m	struct:dbl_EGsrkNode_t
mmb_sz	TEmplate/fp20_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the $/;"	m	struct:fp20_EGsrkEdge_t
mmb_sz	TEmplate/fp20_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the$/;"	m	struct:fp20_EGsrkNode_t
mmb_sz	TEmplate/int32_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the $/;"	m	struct:int32_EGsrkEdge_t
mmb_sz	TEmplate/int32_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the$/;"	m	struct:int32_EGsrkNode_t
mmb_sz	TEmplate/int_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the $/;"	m	struct:int_EGsrkEdge_t
mmb_sz	TEmplate/int_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the$/;"	m	struct:int_EGsrkNode_t
mmb_sz	TEmplate/ldbl_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the $/;"	m	struct:ldbl_EGsrkEdge_t
mmb_sz	TEmplate/ldbl_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the$/;"	m	struct:ldbl_EGsrkNode_t
mmb_sz	TEmplate/mpf_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the $/;"	m	struct:mpf_EGsrkEdge_t
mmb_sz	TEmplate/mpf_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the$/;"	m	struct:mpf_EGsrkNode_t
mmb_sz	TEmplate/mpq_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the $/;"	m	struct:mpq_EGsrkEdge_t
mmb_sz	TEmplate/mpq_eg_shrink_graph.h	/^	unsigned int mmb_sz;	\/**< length of the members list (without including the$/;"	m	struct:mpq_EGsrkNode_t
mode	src/eg_net.ex.c	/^static int mode = 0;$/;"	v	file:
mode	src/eg_slk.ex.c	/^static int mode = 0;		\/**< @brief if 0, compute a 2-opt simple tour, if 1, compute a 2-opt CVRP solution *\/$/;"	v	file:
mp	src/eg_simula.h	/^	EGmemSlabPool_t mp;\/**< Memory pool holding the agents in the system *\/$/;"	m	struct:__anon110
mpf_DJK_DEBUG_	TEmplate/mpf_eg_dijkstra.h	47;"	d
mpf_DJK_VRBLVL_	TEmplate/mpf_eg_dijkstra.h	43;"	d
mpf_EG_ABHEAP_DEBUG	TEmplate/mpf_eg_abheap.h	56;"	d
mpf_EG_ABHEAP_POISON	TEmplate/mpf_eg_abheap.h	84;"	d
mpf_EG_ABKHEAP_DEBUG	TEmplate/mpf_eg_abkheap.h	56;"	d
mpf_EG_ABKHEAP_ENTRY	TEmplate/mpf_eg_abkheap.h	73;"	d
mpf_EG_ABKHEAP_POISON	TEmplate/mpf_eg_abkheap.h	88;"	d
mpf_EG_AHEAP_DEBUG	TEmplate/mpf_eg_aheap.h	55;"	d
mpf_EG_AHEAP_POISON	TEmplate/mpf_eg_aheap.h	83;"	d
mpf_EG_BSRED_CALLS	TEmplate/mpf_eg_dbasis_red.h	65;"	d
mpf_EG_BSRED_INTR	TEmplate/mpf_eg_dbasis_red.h	75;"	d
mpf_EG_BSRED_ITT	TEmplate/mpf_eg_dbasis_red.h	80;"	d
mpf_EG_BSRED_SZRED	TEmplate/mpf_eg_dbasis_red.h	70;"	d
mpf_EG_DBSRED_ALPHA	TEmplate/mpf_eg_dbasis_red.h	100;"	d
mpf_EG_DBSRED_VERBOSE	TEmplate/mpf_eg_dbasis_red.h	53;"	d
mpf_EG_EHEAP_DEBUG	TEmplate/mpf_eg_eheap.h	69;"	d
mpf_EG_EHEAP_POISON	TEmplate/mpf_eg_eheap.h	97;"	d
mpf_EG_EKHEAP_DEBUG	TEmplate/mpf_eg_ekheap.h	63;"	d
mpf_EG_EKHEAP_ENTRY	TEmplate/mpf_eg_ekheap.h	80;"	d
mpf_EG_EKHEAP_POISON	TEmplate/mpf_eg_ekheap.h	96;"	d
mpf_EG_PR_RELABEL	TEmplate/mpf_eg_push_relabel.h	117;"	d
mpf_EG_PR_RELABEL_FREC	TEmplate/mpf_eg_push_relabel.h	123;"	d
mpf_EG_SRK_DEBUG	TEmplate/mpf_eg_shrink_graph.h	60;"	d
mpf_EGaBKheapAdd	TEmplate/mpf_eg_abkheap.h	243;"	d
mpf_EGaBKheapCHECK_CN	TEmplate/mpf_eg_abkheap.h	63;"	d
mpf_EGaBKheapCHECK_CN	TEmplate/mpf_eg_abkheap.h	66;"	d
mpf_EGaBKheapCHECK_NF	TEmplate/mpf_eg_abkheap.h	64;"	d
mpf_EGaBKheapCHECK_NF	TEmplate/mpf_eg_abkheap.h	67;"	d
mpf_EGaBKheapChangeVal	TEmplate/mpf_eg_abkheap.h	321;"	d
mpf_EGaBKheapClear	TEmplate/mpf_eg_abkheap.h	173;"	d
mpf_EGaBKheapCnClear	TEmplate/mpf_eg_abkheap.h	130;"	d
mpf_EGaBKheapCnInit	TEmplate/mpf_eg_abkheap.h	113;"	d
mpf_EGaBKheapCnReset	TEmplate/mpf_eg_abkheap.h	124;"	d
mpf_EGaBKheapCn_t	TEmplate/mpf_eg_abkheap.h	/^mpf_EGaBKheapCn_t;$/;"	t	typeref:struct:__anon64
mpf_EGaBKheapCopyVal	TEmplate/mpf_eg_abkheap.h	308;"	d
mpf_EGaBKheapDel	TEmplate/mpf_eg_abkheap.h	342;"	d
mpf_EGaBKheapEmpty	TEmplate/mpf_eg_abkheap.h	153;"	d
mpf_EGaBKheapFatherId	TEmplate/mpf_eg_abkheap.h	202;"	d
mpf_EGaBKheapFirstChildId	TEmplate/mpf_eg_abkheap.h	257;"	d
mpf_EGaBKheapGetMin	TEmplate/mpf_eg_abkheap.h	181;"	d
mpf_EGaBKheapInit	TEmplate/mpf_eg_abkheap.h	159;"	d
mpf_EGaBKheapIsFull	TEmplate/mpf_eg_abkheap.h	147;"	d
mpf_EGaBKheapIsLess	TEmplate/mpf_eg_abkheap.h	95;"	d
mpf_EGaBKheapReset	TEmplate/mpf_eg_abkheap.h	166;"	d
mpf_EGaBKheapResize	TEmplate/mpf_eg_abkheap.h	192;"	d
mpf_EGaBKheap_t	TEmplate/mpf_eg_abkheap.h	/^mpf_EGaBKheap_t;$/;"	t	typeref:struct:__anon65
mpf_EGaBheapAdd	TEmplate/mpf_eg_abheap.h	218;"	d
mpf_EGaBheapCHECK_CN	TEmplate/mpf_eg_abheap.h	63;"	d
mpf_EGaBheapCHECK_CN	TEmplate/mpf_eg_abheap.h	66;"	d
mpf_EGaBheapCHECK_NF	TEmplate/mpf_eg_abheap.h	64;"	d
mpf_EGaBheapCHECK_NF	TEmplate/mpf_eg_abheap.h	67;"	d
mpf_EGaBheapChangeVal	TEmplate/mpf_eg_abheap.h	286;"	d
mpf_EGaBheapClear	TEmplate/mpf_eg_abheap.h	148;"	d
mpf_EGaBheapCnClear	TEmplate/mpf_eg_abheap.h	106;"	d
mpf_EGaBheapCnInit	TEmplate/mpf_eg_abheap.h	92;"	d
mpf_EGaBheapCnReset	TEmplate/mpf_eg_abheap.h	99;"	d
mpf_EGaBheapCn_t	TEmplate/mpf_eg_abheap.h	/^mpf_EGaBheapCn_t;$/;"	t	typeref:struct:__anon66
mpf_EGaBheapDel	TEmplate/mpf_eg_abheap.h	309;"	d
mpf_EGaBheapEmpty	TEmplate/mpf_eg_abheap.h	128;"	d
mpf_EGaBheapFatherId	TEmplate/mpf_eg_abheap.h	177;"	d
mpf_EGaBheapFirstChildId	TEmplate/mpf_eg_abheap.h	232;"	d
mpf_EGaBheapGetMin	TEmplate/mpf_eg_abheap.h	156;"	d
mpf_EGaBheapInit	TEmplate/mpf_eg_abheap.h	134;"	d
mpf_EGaBheapIsFull	TEmplate/mpf_eg_abheap.h	122;"	d
mpf_EGaBheapReset	TEmplate/mpf_eg_abheap.h	141;"	d
mpf_EGaBheapResize	TEmplate/mpf_eg_abheap.h	167;"	d
mpf_EGaBheap_t	TEmplate/mpf_eg_abheap.h	/^mpf_EGaBheap_t;$/;"	t	typeref:struct:__anon67
mpf_EGaHeapAdd	TEmplate/mpf_eg_aheap.h	230;"	d
mpf_EGaHeapCHECK_CN	TEmplate/mpf_eg_aheap.h	62;"	d
mpf_EGaHeapCHECK_CN	TEmplate/mpf_eg_aheap.h	65;"	d
mpf_EGaHeapCHECK_NF	TEmplate/mpf_eg_aheap.h	63;"	d
mpf_EGaHeapCHECK_NF	TEmplate/mpf_eg_aheap.h	66;"	d
mpf_EGaHeapChangeVal	TEmplate/mpf_eg_aheap.h	299;"	d
mpf_EGaHeapClear	TEmplate/mpf_eg_aheap.h	149;"	d
mpf_EGaHeapCnClear	TEmplate/mpf_eg_aheap.h	105;"	d
mpf_EGaHeapCnInit	TEmplate/mpf_eg_aheap.h	91;"	d
mpf_EGaHeapCnReset	TEmplate/mpf_eg_aheap.h	98;"	d
mpf_EGaHeapCn_t	TEmplate/mpf_eg_aheap.h	/^mpf_EGaHeapCn_t;$/;"	t	typeref:struct:__anon68
mpf_EGaHeapDel	TEmplate/mpf_eg_aheap.h	322;"	d
mpf_EGaHeapEmpty	TEmplate/mpf_eg_aheap.h	128;"	d
mpf_EGaHeapFatherId	TEmplate/mpf_eg_aheap.h	189;"	d
mpf_EGaHeapFirstChildId	TEmplate/mpf_eg_aheap.h	244;"	d
mpf_EGaHeapGetMin	TEmplate/mpf_eg_aheap.h	167;"	d
mpf_EGaHeapGetMinVal	TEmplate/mpf_eg_aheap.h	157;"	d
mpf_EGaHeapInit	TEmplate/mpf_eg_aheap.h	135;"	d
mpf_EGaHeapIsFull	TEmplate/mpf_eg_aheap.h	122;"	d
mpf_EGaHeapReset	TEmplate/mpf_eg_aheap.h	142;"	d
mpf_EGaHeapResize	TEmplate/mpf_eg_aheap.h	178;"	d
mpf_EGaHeap_t	TEmplate/mpf_eg_aheap.h	/^mpf_EGaHeap_t;$/;"	t	typeref:struct:__anon69
mpf_EGalgDJK	TEmplate/mpf_eg_dijkstra.c	/^int mpf_EGalgDJK ($/;"	f
mpf_EGalgMC	TEmplate/mpf_eg_min_cut.c	/^int mpf_EGalgMC (mpf_EGalgMCgraph_t * const G,$/;"	f
mpf_EGalgMCbuildPRgraph	TEmplate/mpf_eg_min_cut.c	/^static inline int mpf_EGalgMCbuildPRgraph (mpf_EGalgMCgraph_t * const mcG,$/;"	f	file:
mpf_EGalgMCcbkClear	TEmplate/mpf_eg_min_cut.h	135;"	d
mpf_EGalgMCcbkInit	TEmplate/mpf_eg_min_cut.h	125;"	d
mpf_EGalgMCcbk_t	TEmplate/mpf_eg_min_cut.h	/^mpf_EGalgMCcbk_t;$/;"	t	typeref:struct:mpf_EGalgMCcbk_t
mpf_EGalgMCcbk_t	TEmplate/mpf_eg_min_cut.h	/^typedef struct mpf_EGalgMCcbk_t$/;"	s
mpf_EGalgMCcomputeT	TEmplate/mpf_eg_min_cut.c	/^static inline int mpf_EGalgMCcomputeT (mpf_EGalgPRgraph_t * const prG,$/;"	f	file:
mpf_EGalgMCdo_f	TEmplate/mpf_eg_min_cut.h	/^typedef int (*mpf_EGalgMCdo_f) (mpf_t,$/;"	t
mpf_EGalgMCedgeClear	TEmplate/mpf_eg_min_cut.h	189;"	d
mpf_EGalgMCedgeInit	TEmplate/mpf_eg_min_cut.h	180;"	d
mpf_EGalgMCedge_t	TEmplate/mpf_eg_min_cut.h	/^mpf_EGalgMCedge_t;$/;"	t	typeref:struct:mpf_EGalgMCedge_t
mpf_EGalgMCedge_t	TEmplate/mpf_eg_min_cut.h	/^typedef struct mpf_EGalgMCedge_t$/;"	s
mpf_EGalgMCexpandNode	TEmplate/mpf_eg_min_cut.c	/^static inline int mpf_EGalgMCexpandNode (unsigned int *const cut,$/;"	f	file:
mpf_EGalgMCgraphClear	TEmplate/mpf_eg_min_cut.h	249;"	d
mpf_EGalgMCgraphInit	TEmplate/mpf_eg_min_cut.h	228;"	d
mpf_EGalgMCgraph_t	TEmplate/mpf_eg_min_cut.h	/^mpf_EGalgMCgraph_t;$/;"	t	typeref:struct:mpf_EGalgMCgraph_t
mpf_EGalgMCgraph_t	TEmplate/mpf_eg_min_cut.h	/^typedef struct mpf_EGalgMCgraph_t$/;"	s
mpf_EGalgMCidentifyNodes	TEmplate/mpf_eg_min_cut.h	259;"	d
mpf_EGalgMCidentifyPRedges	TEmplate/mpf_eg_min_cut.c	/^int mpf_EGalgMCidentifyPRedges (mpf_EGalgMCgraph_t * const G,$/;"	f
mpf_EGalgMCnodeClear	TEmplate/mpf_eg_min_cut.h	166;"	d
mpf_EGalgMCnodeInit	TEmplate/mpf_eg_min_cut.h	153;"	d
mpf_EGalgMCnode_t	TEmplate/mpf_eg_min_cut.h	/^mpf_EGalgMCnode_t;$/;"	t	typeref:struct:mpf_EGalgMCnode_t
mpf_EGalgMCnode_t	TEmplate/mpf_eg_min_cut.h	/^typedef struct mpf_EGalgMCnode_t$/;"	s
mpf_EGalgMCprofile	TEmplate/mpf_eg_min_cut.c	/^void mpf_EGalgMCprofile(void)$/;"	f
mpf_EGalgMCtestNode	TEmplate/mpf_eg_min_cut.c	/^static inline int mpf_EGalgMCtestNode (mpf_EGalgMCgraph_t * const G,$/;"	f	file:
mpf_EGalgPRcomputeLabels	TEmplate/mpf_eg_push_relabel.c	/^static inline int mpf_EGalgPRcomputeLabels (mpf_EGalgPRgraph_t * const G,$/;"	f	file:
mpf_EGalgPRedgeClear	TEmplate/mpf_eg_push_relabel.h	239;"	d
mpf_EGalgPRedgeInit	TEmplate/mpf_eg_push_relabel.h	211;"	d
mpf_EGalgPRedgeReset	TEmplate/mpf_eg_push_relabel.h	228;"	d
mpf_EGalgPRedge_t	TEmplate/mpf_eg_push_relabel.h	/^mpf_EGalgPRedge_t;$/;"	t	typeref:struct:mpf_EGalgPRedge_t
mpf_EGalgPRedge_t	TEmplate/mpf_eg_push_relabel.h	/^typedef struct mpf_EGalgPRedge_t$/;"	s
mpf_EGalgPRglobalRelabel	TEmplate/mpf_eg_push_relabel.c	/^static inline int mpf_EGalgPRglobalRelabel (mpf_EGalgPRgraph_t * const G,$/;"	f	file:
mpf_EGalgPRgraphClear	TEmplate/mpf_eg_push_relabel.h	272;"	d
mpf_EGalgPRgraphInit	TEmplate/mpf_eg_push_relabel.h	259;"	d
mpf_EGalgPRgraphReset	TEmplate/mpf_eg_push_relabel.h	267;"	d
mpf_EGalgPRgraph_t	TEmplate/mpf_eg_push_relabel.h	/^mpf_EGalgPRgraph_t;$/;"	t	typeref:struct:mpf_EGalgPRgraph_t
mpf_EGalgPRgraph_t	TEmplate/mpf_eg_push_relabel.h	/^typedef struct mpf_EGalgPRgraph_t$/;"	s
mpf_EGalgPRmaxSTflow	TEmplate/mpf_eg_push_relabel.c	/^int mpf_EGalgPRmaxSTflow (mpf_EGalgPRgraph_t * const G,$/;"	f
mpf_EGalgPRminSTcut	TEmplate/mpf_eg_push_relabel.c	/^int mpf_EGalgPRminSTcut (mpf_EGalgPRgraph_t * const G,$/;"	f
mpf_EGalgPRnodeClear	TEmplate/mpf_eg_push_relabel.h	172;"	d
mpf_EGalgPRnodeInit	TEmplate/mpf_eg_push_relabel.h	156;"	d
mpf_EGalgPRnodeReset	TEmplate/mpf_eg_push_relabel.h	167;"	d
mpf_EGalgPRnode_t	TEmplate/mpf_eg_push_relabel.h	/^mpf_EGalgPRnode_t;$/;"	t	typeref:struct:mpf_EGalgPRnode_t
mpf_EGalgPRnode_t	TEmplate/mpf_eg_push_relabel.h	/^typedef struct mpf_EGalgPRnode_t$/;"	s
mpf_EGalgPRnumb	TEmplate/mpf_eg_push_relabel.c	/^static inline int mpf_EGalgPRnumb (const unsigned int hole,$/;"	f	file:
mpf_EGalgPRoptimalityTest	TEmplate/mpf_eg_push_relabel.c	/^int mpf_EGalgPRoptimalityTest (mpf_EGalgPRgraph_t * const G,$/;"	f
mpf_EGalgPRpreprocess	TEmplate/mpf_eg_push_relabel.c	/^static inline int mpf_EGalgPRpreprocess (mpf_EGalgPRgraph_t * const G,$/;"	f	file:
mpf_EGalgPRprofile	TEmplate/mpf_eg_push_relabel.c	/^void mpf_EGalgPRprofile(void)$/;"	f
mpf_EGalgPRpush	TEmplate/mpf_eg_push_relabel.c	/^static inline int mpf_EGalgPRpush (mpf_EGalgPRse_t * const edge_pt,$/;"	f	file:
mpf_EGalgPRpushRelabel	TEmplate/mpf_eg_push_relabel.c	/^static int mpf_EGalgPRpushRelabel (mpf_EGalgPRnode_t * const node_pt,$/;"	f	file:
mpf_EGalgPRse_t	TEmplate/mpf_eg_push_relabel.h	/^mpf_EGalgPRse_t;$/;"	t	typeref:struct:mpf_EGalgPRse_t
mpf_EGalgPRse_t	TEmplate/mpf_eg_push_relabel.h	/^typedef struct mpf_EGalgPRse_t$/;"	s
mpf_EGdBsRed	TEmplate/mpf_eg_dbasis_red.c	/^int mpf_EGdBsRed (mpf_EGdBsRed_t * const bsred,$/;"	f
mpf_EGdBsRedAddElement	TEmplate/mpf_eg_dbasis_red.h	162;"	d
mpf_EGdBsRedBuildGM	TEmplate/mpf_eg_dbasis_red.c	/^static void mpf_EGdBsRedBuildGM (mpf_EGdMatrix_t * const GM,$/;"	f	file:
mpf_EGdBsRedClear	TEmplate/mpf_eg_dbasis_red.h	136;"	d
mpf_EGdBsRedInit	TEmplate/mpf_eg_dbasis_red.h	127;"	d
mpf_EGdBsRedProfile	TEmplate/mpf_eg_dbasis_red.h	86;"	d
mpf_EGdBsRedReset	TEmplate/mpf_eg_dbasis_red.h	147;"	d
mpf_EGdBsRedSetLength	TEmplate/mpf_eg_dbasis_red.h	155;"	d
mpf_EGdBsRedStats	TEmplate/mpf_eg_dbasis_red.c	/^uintmax_t mpf_EGdBsRedStats[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
mpf_EGdBsRed_t	TEmplate/mpf_eg_dbasis_red.h	/^mpf_EGdBsRed_t;$/;"	t	typeref:struct:mpf_EGdBsRed_t
mpf_EGdBsRed_t	TEmplate/mpf_eg_dbasis_red.h	/^typedef struct mpf_EGdBsRed_t$/;"	s
mpf_EGdMatrixAddColMultiple	TEmplate/mpf_eg_dmatrix.h	241;"	d
mpf_EGdMatrixAddRowMultiple	TEmplate/mpf_eg_dmatrix.h	168;"	d
mpf_EGdMatrixClear	TEmplate/mpf_eg_dmatrix.h	85;"	d
mpf_EGdMatrixDisplay	TEmplate/mpf_eg_dmatrix.h	127;"	d
mpf_EGdMatrixGaussianElimination	TEmplate/mpf_eg_dmatrix.c	/^int mpf_EGdMatrixGaussianElimination (mpf_EGdMatrix_t * const dmatrix,$/;"	f
mpf_EGdMatrixInit	TEmplate/mpf_eg_dmatrix.h	77;"	d
mpf_EGdMatrixMultiplyCol	TEmplate/mpf_eg_dmatrix.h	290;"	d
mpf_EGdMatrixMultiplyRow	TEmplate/mpf_eg_dmatrix.h	216;"	d
mpf_EGdMatrixSetDimension	TEmplate/mpf_eg_dmatrix.h	101;"	d
mpf_EGdMatrixSubColMultiple	TEmplate/mpf_eg_dmatrix.h	269;"	d
mpf_EGdMatrixSubRowMultiple	TEmplate/mpf_eg_dmatrix.h	196;"	d
mpf_EGdMatrix_t	TEmplate/mpf_eg_dmatrix.h	/^mpf_EGdMatrix_t;$/;"	t	typeref:struct:mpf_EGdMatrix_t
mpf_EGdMatrix_t	TEmplate/mpf_eg_dmatrix.h	/^typedef struct mpf_EGdMatrix_t$/;"	s
mpf_EGeHeapAdd	TEmplate/mpf_eg_eheap.h	236;"	d
mpf_EGeHeapCHECK_CN	TEmplate/mpf_eg_eheap.h	76;"	d
mpf_EGeHeapCHECK_CN	TEmplate/mpf_eg_eheap.h	79;"	d
mpf_EGeHeapCHECK_NF	TEmplate/mpf_eg_eheap.h	77;"	d
mpf_EGeHeapCHECK_NF	TEmplate/mpf_eg_eheap.h	80;"	d
mpf_EGeHeapChangeD	TEmplate/mpf_eg_eheap.h	356;"	d
mpf_EGeHeapChangeVal	TEmplate/mpf_eg_eheap.h	301;"	d
mpf_EGeHeapCheck	TEmplate/mpf_eg_eheap.h	330;"	d
mpf_EGeHeapCheck	TEmplate/mpf_eg_eheap.h	346;"	d
mpf_EGeHeapClear	TEmplate/mpf_eg_eheap.h	162;"	d
mpf_EGeHeapCnClear	TEmplate/mpf_eg_eheap.h	119;"	d
mpf_EGeHeapCnInit	TEmplate/mpf_eg_eheap.h	105;"	d
mpf_EGeHeapCnReset	TEmplate/mpf_eg_eheap.h	112;"	d
mpf_EGeHeapCn_t	TEmplate/mpf_eg_eheap.h	/^mpf_EGeHeapCn_t;$/;"	t	typeref:struct:__anon70
mpf_EGeHeapDel	TEmplate/mpf_eg_eheap.h	311;"	d
mpf_EGeHeapEmpty	TEmplate/mpf_eg_eheap.h	142;"	d
mpf_EGeHeapFatherId	TEmplate/mpf_eg_eheap.h	202;"	d
mpf_EGeHeapFirstChildId	TEmplate/mpf_eg_eheap.h	249;"	d
mpf_EGeHeapGetMin	TEmplate/mpf_eg_eheap.h	180;"	d
mpf_EGeHeapGetMinVal	TEmplate/mpf_eg_eheap.h	170;"	d
mpf_EGeHeapInit	TEmplate/mpf_eg_eheap.h	148;"	d
mpf_EGeHeapIsFull	TEmplate/mpf_eg_eheap.h	136;"	d
mpf_EGeHeapResize	TEmplate/mpf_eg_eheap.h	191;"	d
mpf_EGeHeapSiftDown	TEmplate/mpf_eg_eheap.h	259;"	d
mpf_EGeHeapSiftUp	TEmplate/mpf_eg_eheap.h	210;"	d
mpf_EGeHeap_t	TEmplate/mpf_eg_eheap.h	/^mpf_EGeHeap_t;$/;"	t	typeref:struct:__anon71
mpf_EGeHepReset	TEmplate/mpf_eg_eheap.h	155;"	d
mpf_EGeKHeapAdd	TEmplate/mpf_eg_ekheap.h	288;"	d
mpf_EGeKHeapCHECK_CN	TEmplate/mpf_eg_ekheap.h	70;"	d
mpf_EGeKHeapCHECK_CN	TEmplate/mpf_eg_ekheap.h	73;"	d
mpf_EGeKHeapCHECK_NF	TEmplate/mpf_eg_ekheap.h	71;"	d
mpf_EGeKHeapCHECK_NF	TEmplate/mpf_eg_ekheap.h	74;"	d
mpf_EGeKHeapChangeD	TEmplate/mpf_eg_ekheap.h	411;"	d
mpf_EGeKHeapChangeVal	TEmplate/mpf_eg_ekheap.h	354;"	d
mpf_EGeKHeapCheck	TEmplate/mpf_eg_ekheap.h	384;"	d
mpf_EGeKHeapCheck	TEmplate/mpf_eg_ekheap.h	401;"	d
mpf_EGeKHeapClear	TEmplate/mpf_eg_ekheap.h	169;"	d
mpf_EGeKHeapCnClear	TEmplate/mpf_eg_ekheap.h	123;"	d
mpf_EGeKHeapCnInit	TEmplate/mpf_eg_ekheap.h	104;"	d
mpf_EGeKHeapCnReset	TEmplate/mpf_eg_ekheap.h	116;"	d
mpf_EGeKHeapCn_t	TEmplate/mpf_eg_ekheap.h	/^mpf_EGeKHeapCn_t;$/;"	t	typeref:struct:__anon72
mpf_EGeKHeapCopyVal	TEmplate/mpf_eg_ekheap.c	/^void mpf_EGeKHeapCopyVal(mpf_t*const dst, const mpf_t*const src)$/;"	f
mpf_EGeKHeapDel	TEmplate/mpf_eg_ekheap.h	365;"	d
mpf_EGeKHeapEmpty	TEmplate/mpf_eg_ekheap.h	149;"	d
mpf_EGeKHeapFatherId	TEmplate/mpf_eg_ekheap.h	226;"	d
mpf_EGeKHeapFirstChildId	TEmplate/mpf_eg_ekheap.h	301;"	d
mpf_EGeKHeapGetMin	TEmplate/mpf_eg_ekheap.h	204;"	d
mpf_EGeKHeapGetMinKVal	TEmplate/mpf_eg_ekheap.h	191;"	d
mpf_EGeKHeapGetMinVal	TEmplate/mpf_eg_ekheap.h	180;"	d
mpf_EGeKHeapInit	TEmplate/mpf_eg_ekheap.h	155;"	d
mpf_EGeKHeapIsFull	TEmplate/mpf_eg_ekheap.h	143;"	d
mpf_EGeKHeapIsLess	TEmplate/mpf_eg_ekheap.h	234;"	d
mpf_EGeKHeapResize	TEmplate/mpf_eg_ekheap.h	215;"	d
mpf_EGeKHeapSiftDown	TEmplate/mpf_eg_ekheap.h	311;"	d
mpf_EGeKHeapSiftUp	TEmplate/mpf_eg_ekheap.h	262;"	d
mpf_EGeKHeap_t	TEmplate/mpf_eg_ekheap.h	/^mpf_EGeKHeap_t;$/;"	t	typeref:struct:__anon73
mpf_EGeKHepReset	TEmplate/mpf_eg_ekheap.h	162;"	d
mpf_EGguReadXgraph	TEmplate/mpf_eg_dijkstra.c	/^int mpf_EGguReadXgraph($/;"	f
mpf_EGlpNumAddInnProdTo	src/eg_lpnum.mpf.h	488;"	d
mpf_EGlpNumAddTo	src/eg_lpnum.mpf.h	523;"	d
mpf_EGlpNumAddUiTo	src/eg_lpnum.mpf.h	513;"	d
mpf_EGlpNumAllocArray	src/eg_lpnum.mpf.h	153;"	d
mpf_EGlpNumCeil	src/eg_lpnum.mpf.h	176;"	d
mpf_EGlpNumClearVar	src/eg_lpnum.mpf.h	619;"	d
mpf_EGlpNumCopy	src/eg_lpnum.mpf.h	371;"	d
mpf_EGlpNumCopyAbs	src/eg_lpnum.mpf.h	417;"	d
mpf_EGlpNumCopyArray	src/eg_lpnum.mpf.h	455;"	d
mpf_EGlpNumCopyDiff	src/eg_lpnum.mpf.h	353;"	d
mpf_EGlpNumCopyDiffRatio	src/eg_lpnum.mpf.h	341;"	d
mpf_EGlpNumCopyFrac	src/eg_lpnum.mpf.h	439;"	d
mpf_EGlpNumCopyNeg	src/eg_lpnum.mpf.h	429;"	d
mpf_EGlpNumCopySqrOver	src/eg_lpnum.mpf.h	402;"	d
mpf_EGlpNumCopySum	src/eg_lpnum.mpf.h	362;"	d
mpf_EGlpNumDivTo	src/eg_lpnum.mpf.h	556;"	d
mpf_EGlpNumDivUiTo	src/eg_lpnum.mpf.h	567;"	d
mpf_EGlpNumEpow	src/eg_lpnum.mpf.h	53;"	d
mpf_EGlpNumFloor	src/eg_lpnum.mpf.h	181;"	d
mpf_EGlpNumFreeArray	src/eg_lpnum.mpf.h	114;"	d
mpf_EGlpNumGetStr	src/eg_lpnum.mpf.h	92;"	d
mpf_EGlpNumInitVar	src/eg_lpnum.mpf.h	615;"	d
mpf_EGlpNumInnProd	TEmplate/mpf_eg_numutil.h	57;"	d
mpf_EGlpNumInv	src/eg_lpnum.mpf.h	187;"	d
mpf_EGlpNumIsDiffLess	src/eg_lpnum.mpf.h	292;"	d
mpf_EGlpNumIsEqqual	src/eg_lpnum.mpf.h	197;"	d
mpf_EGlpNumIsEqual	src/eg_lpnum.mpf.h	210;"	d
mpf_EGlpNumIsGreaDbl	src/eg_lpnum.mpf.h	320;"	d
mpf_EGlpNumIsGreatZero	src/eg_lpnum.mpf.h	255;"	d
mpf_EGlpNumIsLeq	src/eg_lpnum.mpf.h	331;"	d
mpf_EGlpNumIsLess	src/eg_lpnum.mpf.h	248;"	d
mpf_EGlpNumIsLessDbl	src/eg_lpnum.mpf.h	309;"	d
mpf_EGlpNumIsLessZero	src/eg_lpnum.mpf.h	262;"	d
mpf_EGlpNumIsNeq	src/eg_lpnum.mpf.h	219;"	d
mpf_EGlpNumIsNeqZero	src/eg_lpnum.mpf.h	228;"	d
mpf_EGlpNumIsNeqq	src/eg_lpnum.mpf.h	237;"	d
mpf_EGlpNumIsNeqqZero	src/eg_lpnum.mpf.h	236;"	d
mpf_EGlpNumIsSumLess	src/eg_lpnum.mpf.h	274;"	d
mpf_EGlpNumMultTo	src/eg_lpnum.mpf.h	545;"	d
mpf_EGlpNumMultUiTo	src/eg_lpnum.mpf.h	578;"	d
mpf_EGlpNumOne	src/eg_lpnum.mpf.h	594;"	d
mpf_EGlpNumReadStr	src/eg_lpnum.mpf.h	80;"	d
mpf_EGlpNumReallocArray	src/eg_lpnum.mpf.h	124;"	d
mpf_EGlpNumSet	src/eg_lpnum.mpf.h	171;"	d
mpf_EGlpNumSetToMaxAbs	src/eg_lpnum.mpf.h	381;"	d
mpf_EGlpNumSetToMinAbs	src/eg_lpnum.mpf.h	387;"	d
mpf_EGlpNumSign	src/eg_lpnum.mpf.h	602;"	d
mpf_EGlpNumSubInnProdTo	src/eg_lpnum.mpf.h	472;"	d
mpf_EGlpNumSubTo	src/eg_lpnum.mpf.h	534;"	d
mpf_EGlpNumSubUiTo	src/eg_lpnum.mpf.h	503;"	d
mpf_EGlpNumToLf	src/eg_lpnum.mpf.h	611;"	d
mpf_EGlpNumZero	src/eg_lpnum.mpf.h	586;"	d
mpf_EGsrkAddEdge	TEmplate/mpf_eg_shrink_graph.h	180;"	d
mpf_EGsrkAddNode	TEmplate/mpf_eg_shrink_graph.h	168;"	d
mpf_EGsrkEdgeClear	TEmplate/mpf_eg_shrink_graph.h	123;"	d
mpf_EGsrkEdgeInit	TEmplate/mpf_eg_shrink_graph.h	111;"	d
mpf_EGsrkEdge_t	TEmplate/mpf_eg_shrink_graph.h	/^mpf_EGsrkEdge_t;$/;"	t	typeref:struct:mpf_EGsrkEdge_t
mpf_EGsrkEdge_t	TEmplate/mpf_eg_shrink_graph.h	/^typedef struct mpf_EGsrkEdge_t$/;"	s
mpf_EGsrkGraphClear	TEmplate/mpf_eg_shrink_graph.h	139;"	d
mpf_EGsrkGraphInit	TEmplate/mpf_eg_shrink_graph.h	130;"	d
mpf_EGsrkGraph_t	TEmplate/mpf_eg_shrink_graph.h	/^mpf_EGsrkGraph_t;$/;"	t	typeref:struct:mpf_EGsrkGraph_t
mpf_EGsrkGraph_t	TEmplate/mpf_eg_shrink_graph.h	/^typedef struct mpf_EGsrkGraph_t$/;"	s
mpf_EGsrkIdentifyNodes	TEmplate/mpf_eg_shrink_graph.c	/^mpf_EGsrkNode_t *mpf_EGsrkIdentifyNodes (mpf_EGsrkGraph_t * const G,$/;"	f
mpf_EGsrkNodeClear	TEmplate/mpf_eg_shrink_graph.h	158;"	d
mpf_EGsrkNodeInit	TEmplate/mpf_eg_shrink_graph.h	144;"	d
mpf_EGsrkNode_t	TEmplate/mpf_eg_shrink_graph.h	/^mpf_EGsrkNode_t;$/;"	t	typeref:struct:mpf_EGsrkNode_t
mpf_EGsrkNode_t	TEmplate/mpf_eg_shrink_graph.h	/^typedef struct mpf_EGsrkNode_t$/;"	s
mpf_EGutilPermSort	TEmplate/mpf_eg_numutil.c	/^void mpf_EGutilPermSort (const size_t sz,$/;"	f
mpf_EGutilPermSort2	TEmplate/mpf_eg_numutil.c	/^void mpf_EGutilPermSort2 (const size_t sz,$/;"	f
mpf_HILBERT_TABLE_SIZE	TEmplate/mpf_eg_dmatrix.ex.c	45;"	d	file:
mpf_MaxLpNum	src/eg_lpnum.mpf.h	44;"	d
mpf_MinLpNum	src/eg_lpnum.mpf.h	45;"	d
mpf_UPDATE	TEmplate/mpf_eg_min_cut.c	50;"	d	file:
mpf_UPDATE	TEmplate/mpf_eg_min_cut.c	52;"	d	file:
mpf_UPDATE	TEmplate/mpf_eg_push_relabel.c	51;"	d	file:
mpf_UPDATE	TEmplate/mpf_eg_push_relabel.c	53;"	d	file:
mpf__EG_MIN_CUT_H	TEmplate/mpf_eg_min_cut.h	65;"	d
mpf__EGalgMChitNeighbours	TEmplate/mpf_eg_min_cut.c	135;"	d	file:
mpf__EGalgMCunhitNeighbours	TEmplate/mpf_eg_min_cut.c	154;"	d	file:
mpf__EGshrinkGraph_h__	TEmplate/mpf_eg_shrink_graph.h	51;"	d
mpf___EG_ABHEAP__	TEmplate/mpf_eg_abheap.h	49;"	d
mpf___EG_ABKHEAP__	TEmplate/mpf_eg_abkheap.h	49;"	d
mpf___EG_AHEAP__	TEmplate/mpf_eg_aheap.h	48;"	d
mpf___EG_DBASIS_REDUCTION__	TEmplate/mpf_eg_dbasis_red.h	24;"	d
mpf___EG_DIJKSTRA_H	TEmplate/mpf_eg_dijkstra.h	34;"	d
mpf___EG_DMATRIX_H__	TEmplate/mpf_eg_dmatrix.h	24;"	d
mpf___EG_EHEAP__	TEmplate/mpf_eg_eheap.h	62;"	d
mpf___EG_EKHEAP__	TEmplate/mpf_eg_ekheap.h	56;"	d
mpf___EG_NUMUTIL_H__	TEmplate/mpf_eg_numutil.h	24;"	d
mpf___EG_PUSH_RELABEL_H__	TEmplate/mpf_eg_push_relabel.h	79;"	d
mpf___EGaBKheapSiftDown	TEmplate/mpf_eg_abkheap.h	269;"	d
mpf___EGaBKheapSiftUp	TEmplate/mpf_eg_abkheap.h	214;"	d
mpf___EGaBheapSiftDown	TEmplate/mpf_eg_abheap.h	244;"	d
mpf___EGaBheapSiftUp	TEmplate/mpf_eg_abheap.h	189;"	d
mpf___EGaHeapSiftDown	TEmplate/mpf_eg_aheap.h	256;"	d
mpf___EGaHeapSiftUp	TEmplate/mpf_eg_aheap.h	201;"	d
mpf___EGlpNumInnProd	TEmplate/mpf_eg_numutil.c	/^void mpf___EGlpNumInnProd(mpf_t*rop,$/;"	f
mpf___MC_DEBUG_	TEmplate/mpf_eg_min_cut.h	81;"	d
mpf___MC_PROFILE_	TEmplate/mpf_eg_min_cut.h	85;"	d
mpf___MC_VRBLVL_	TEmplate/mpf_eg_min_cut.h	77;"	d
mpf___MC_profile_lvl	TEmplate/mpf_eg_min_cut.c	/^static unsigned long long mpf___MC_profile_lvl[5] = { 0, 0, 0, 0, 0 };$/;"	v	file:
mpf___MC_profile_tn	TEmplate/mpf_eg_min_cut.c	/^static unsigned long long mpf___MC_profile_tn = 0;\/**<Number of calls to #mpf_EGalgMCtestNode*\/$/;"	v	file:
mpf___MC_profile_up	TEmplate/mpf_eg_min_cut.c	/^static unsigned long long mpf___MC_profile_up = 0;\/**< Number of improving cuts found *\/$/;"	v	file:
mpf___PR_DEBUGL__	TEmplate/mpf_eg_push_relabel.h	89;"	d
mpf___PR_PROFILE__	TEmplate/mpf_eg_push_relabel.h	101;"	d
mpf___PR_TEST_VERBOSE__	TEmplate/mpf_eg_push_relabel.h	93;"	d
mpf___PR_VERBOSE__	TEmplate/mpf_eg_push_relabel.h	97;"	d
mpf___PR_profile_lvel	TEmplate/mpf_eg_push_relabel.c	/^static unsigned long long mpf___PR_profile_lvel = 0;$/;"	v	file:
mpf___PR_profile_move	TEmplate/mpf_eg_push_relabel.c	/^static unsigned long long mpf___PR_profile_move = 0;$/;"	v	file:
mpf___PR_profile_numb	TEmplate/mpf_eg_push_relabel.c	/^static unsigned long long mpf___PR_profile_numb = 0;$/;"	v	file:
mpf___PR_profile_push	TEmplate/mpf_eg_push_relabel.c	/^static unsigned long long mpf___PR_profile_push = 0;$/;"	v	file:
mpf___PR_profile_rela	TEmplate/mpf_eg_push_relabel.c	/^static unsigned long long mpf___PR_profile_rela = 0;$/;"	v	file:
mpf___last_global	TEmplate/mpf_eg_push_relabel.c	/^static unsigned long long mpf___last_global = 0;$/;"	v	file:
mpf_aheap_parseargs	TEmplate/mpf_eg_abheap.ex.c	/^int mpf_aheap_parseargs (int argc,$/;"	f
mpf_aheap_parseargs	TEmplate/mpf_eg_abkheap.ex.c	/^int mpf_aheap_parseargs (int argc,$/;"	f
mpf_aheap_parseargs	TEmplate/mpf_eg_aheap.ex.c	/^int mpf_aheap_parseargs (int argc,$/;"	f
mpf_aheap_usage	TEmplate/mpf_eg_abheap.ex.c	/^void mpf_aheap_usage (char *program)$/;"	f
mpf_aheap_usage	TEmplate/mpf_eg_abkheap.ex.c	/^void mpf_aheap_usage (char *program)$/;"	f
mpf_aheap_usage	TEmplate/mpf_eg_aheap.ex.c	/^void mpf_aheap_usage (char *program)$/;"	f
mpf_display_srkG	TEmplate/mpf_eg_shrink_graph.ex.c	/^static inline void mpf_display_srkG (mpf_EGsrkGraph_t * G,$/;"	f	file:
mpf_djk_parseargs	TEmplate/mpf_eg_dijkstra.ex.c	/^static inline void mpf_djk_parseargs(int argc,char**argv)$/;"	f	file:
mpf_djk_usage	TEmplate/mpf_eg_dijkstra.ex.c	/^static inline void mpf_djk_usage(const char*const progname)$/;"	f	file:
mpf_dmatrix_hilbert_eigenvalues	TEmplate/mpf_eg_dmatrix.ex.c	/^static unsigned mpf_dmatrix_hilbert_eigenvalues[mpf_HILBERT_TABLE_SIZE] = {$/;"	v	file:
mpf_dmatrix_parseargs	TEmplate/mpf_eg_dmatrix.ex.c	/^int mpf_dmatrix_parseargs (int argc,$/;"	f
mpf_dmatrix_usage	TEmplate/mpf_eg_dmatrix.ex.c	/^void mpf_dmatrix_usage (char *program)$/;"	f
mpf_eheap_parseargs	TEmplate/mpf_eg_eheap.ex.c	/^int mpf_eheap_parseargs (int argc,$/;"	f
mpf_eheap_usage	TEmplate/mpf_eg_eheap.ex.c	/^void mpf_eheap_usage (char *program)$/;"	f
mpf_ekheap_parseargs	TEmplate/mpf_eg_ekheap.ex.c	/^int mpf_ekheap_parseargs (int argc,$/;"	f
mpf_ekheap_usage	TEmplate/mpf_eg_ekheap.ex.c	/^void mpf_ekheap_usage (char *program)$/;"	f
mpf_eps	src/eg_lpnum.c	/^mpf_t mpf_eps;$/;"	v
mpf_epsLpNum	src/eg_lpnum.mpf.h	43;"	d
mpf_file_name	TEmplate/mpf_eg_min_cut.ex.c	/^static char *mpf_file_name = 0;$/;"	v	file:
mpf_fname	TEmplate/mpf_eg_dijkstra.ex.c	/^static char mpf_fname[1024];$/;"	v	file:
mpf_lvl	TEmplate/mpf_eg_min_cut.ex.c	/^static unsigned int mpf_lvl = 5;$/;"	v	file:
mpf_lvl	TEmplate/mpf_eg_min_cut.h	/^	unsigned int mpf_lvl;		\/**< Current node level test to be performed *\/$/;"	m	struct:mpf_EGalgMCnode_t
mpf_mc_all_cuts_t	TEmplate/mpf_eg_min_cut.ex.c	/^mpf_mc_all_cuts_t;$/;"	t	typeref:struct:mpf_mc_all_cuts_t	file:
mpf_mc_all_cuts_t	TEmplate/mpf_eg_min_cut.ex.c	/^typedef struct mpf_mc_all_cuts_t$/;"	s	file:
mpf_mc_parseargs	TEmplate/mpf_eg_min_cut.ex.c	/^static inline int mpf_mc_parseargs (int argc,$/;"	f	file:
mpf_mc_store_cuts	TEmplate/mpf_eg_min_cut.ex.c	/^int mpf_mc_store_cuts (mpf_t value,$/;"	f
mpf_mc_usage	TEmplate/mpf_eg_min_cut.ex.c	/^static void mpf_mc_usage (char **argv)$/;"	f	file:
mpf_my_constr	TEmplate/mpf_eg_memslab.ex.c	/^static void mpf_my_constr (void *ptr)$/;"	f	file:
mpf_my_dest	TEmplate/mpf_eg_memslab.ex.c	/^static void mpf_my_dest (void *ptr)$/;"	f	file:
mpf_oneLpNum	src/eg_lpnum.mpf.h	42;"	d
mpf_pr_usage	TEmplate/mpf_eg_push_relabel.ex.c	/^static inline void mpf_pr_usage (char **argv)$/;"	f	file:
mpf_source	TEmplate/mpf_eg_dijkstra.ex.c	/^static int32_t mpf_source=0;$/;"	v	file:
mpf_srk_usage	TEmplate/mpf_eg_shrink_graph.ex.c	/^static inline void mpf_srk_usage (char **argv)$/;"	f	file:
mpf_verbose	TEmplate/mpf_eg_dijkstra.ex.c	/^static int mpf_verbose=1;$/;"	v	file:
mpf_zeroLpNum	src/eg_lpnum.mpf.h	41;"	d
mpq_DJK_DEBUG_	TEmplate/mpq_eg_dijkstra.h	47;"	d
mpq_DJK_VRBLVL_	TEmplate/mpq_eg_dijkstra.h	43;"	d
mpq_EG_ABHEAP_DEBUG	TEmplate/mpq_eg_abheap.h	56;"	d
mpq_EG_ABHEAP_POISON	TEmplate/mpq_eg_abheap.h	84;"	d
mpq_EG_ABKHEAP_DEBUG	TEmplate/mpq_eg_abkheap.h	56;"	d
mpq_EG_ABKHEAP_ENTRY	TEmplate/mpq_eg_abkheap.h	73;"	d
mpq_EG_ABKHEAP_POISON	TEmplate/mpq_eg_abkheap.h	88;"	d
mpq_EG_AHEAP_DEBUG	TEmplate/mpq_eg_aheap.h	55;"	d
mpq_EG_AHEAP_POISON	TEmplate/mpq_eg_aheap.h	83;"	d
mpq_EG_BSRED_CALLS	TEmplate/mpq_eg_dbasis_red.h	65;"	d
mpq_EG_BSRED_INTR	TEmplate/mpq_eg_dbasis_red.h	75;"	d
mpq_EG_BSRED_ITT	TEmplate/mpq_eg_dbasis_red.h	80;"	d
mpq_EG_BSRED_SZRED	TEmplate/mpq_eg_dbasis_red.h	70;"	d
mpq_EG_DBSRED_ALPHA	TEmplate/mpq_eg_dbasis_red.h	100;"	d
mpq_EG_DBSRED_VERBOSE	TEmplate/mpq_eg_dbasis_red.h	53;"	d
mpq_EG_EHEAP_DEBUG	TEmplate/mpq_eg_eheap.h	69;"	d
mpq_EG_EHEAP_POISON	TEmplate/mpq_eg_eheap.h	97;"	d
mpq_EG_EKHEAP_DEBUG	TEmplate/mpq_eg_ekheap.h	63;"	d
mpq_EG_EKHEAP_ENTRY	TEmplate/mpq_eg_ekheap.h	80;"	d
mpq_EG_EKHEAP_POISON	TEmplate/mpq_eg_ekheap.h	96;"	d
mpq_EG_PR_RELABEL	TEmplate/mpq_eg_push_relabel.h	117;"	d
mpq_EG_PR_RELABEL_FREC	TEmplate/mpq_eg_push_relabel.h	123;"	d
mpq_EG_SRK_DEBUG	TEmplate/mpq_eg_shrink_graph.h	60;"	d
mpq_EGaBKheapAdd	TEmplate/mpq_eg_abkheap.h	243;"	d
mpq_EGaBKheapCHECK_CN	TEmplate/mpq_eg_abkheap.h	63;"	d
mpq_EGaBKheapCHECK_CN	TEmplate/mpq_eg_abkheap.h	66;"	d
mpq_EGaBKheapCHECK_NF	TEmplate/mpq_eg_abkheap.h	64;"	d
mpq_EGaBKheapCHECK_NF	TEmplate/mpq_eg_abkheap.h	67;"	d
mpq_EGaBKheapChangeVal	TEmplate/mpq_eg_abkheap.h	321;"	d
mpq_EGaBKheapClear	TEmplate/mpq_eg_abkheap.h	173;"	d
mpq_EGaBKheapCnClear	TEmplate/mpq_eg_abkheap.h	130;"	d
mpq_EGaBKheapCnInit	TEmplate/mpq_eg_abkheap.h	113;"	d
mpq_EGaBKheapCnReset	TEmplate/mpq_eg_abkheap.h	124;"	d
mpq_EGaBKheapCn_t	TEmplate/mpq_eg_abkheap.h	/^mpq_EGaBKheapCn_t;$/;"	t	typeref:struct:__anon54
mpq_EGaBKheapCopyVal	TEmplate/mpq_eg_abkheap.h	308;"	d
mpq_EGaBKheapDel	TEmplate/mpq_eg_abkheap.h	342;"	d
mpq_EGaBKheapEmpty	TEmplate/mpq_eg_abkheap.h	153;"	d
mpq_EGaBKheapFatherId	TEmplate/mpq_eg_abkheap.h	202;"	d
mpq_EGaBKheapFirstChildId	TEmplate/mpq_eg_abkheap.h	257;"	d
mpq_EGaBKheapGetMin	TEmplate/mpq_eg_abkheap.h	181;"	d
mpq_EGaBKheapInit	TEmplate/mpq_eg_abkheap.h	159;"	d
mpq_EGaBKheapIsFull	TEmplate/mpq_eg_abkheap.h	147;"	d
mpq_EGaBKheapIsLess	TEmplate/mpq_eg_abkheap.h	95;"	d
mpq_EGaBKheapReset	TEmplate/mpq_eg_abkheap.h	166;"	d
mpq_EGaBKheapResize	TEmplate/mpq_eg_abkheap.h	192;"	d
mpq_EGaBKheap_t	TEmplate/mpq_eg_abkheap.h	/^mpq_EGaBKheap_t;$/;"	t	typeref:struct:__anon55
mpq_EGaBheapAdd	TEmplate/mpq_eg_abheap.h	218;"	d
mpq_EGaBheapCHECK_CN	TEmplate/mpq_eg_abheap.h	63;"	d
mpq_EGaBheapCHECK_CN	TEmplate/mpq_eg_abheap.h	66;"	d
mpq_EGaBheapCHECK_NF	TEmplate/mpq_eg_abheap.h	64;"	d
mpq_EGaBheapCHECK_NF	TEmplate/mpq_eg_abheap.h	67;"	d
mpq_EGaBheapChangeVal	TEmplate/mpq_eg_abheap.h	286;"	d
mpq_EGaBheapClear	TEmplate/mpq_eg_abheap.h	148;"	d
mpq_EGaBheapCnClear	TEmplate/mpq_eg_abheap.h	106;"	d
mpq_EGaBheapCnInit	TEmplate/mpq_eg_abheap.h	92;"	d
mpq_EGaBheapCnReset	TEmplate/mpq_eg_abheap.h	99;"	d
mpq_EGaBheapCn_t	TEmplate/mpq_eg_abheap.h	/^mpq_EGaBheapCn_t;$/;"	t	typeref:struct:__anon56
mpq_EGaBheapDel	TEmplate/mpq_eg_abheap.h	309;"	d
mpq_EGaBheapEmpty	TEmplate/mpq_eg_abheap.h	128;"	d
mpq_EGaBheapFatherId	TEmplate/mpq_eg_abheap.h	177;"	d
mpq_EGaBheapFirstChildId	TEmplate/mpq_eg_abheap.h	232;"	d
mpq_EGaBheapGetMin	TEmplate/mpq_eg_abheap.h	156;"	d
mpq_EGaBheapInit	TEmplate/mpq_eg_abheap.h	134;"	d
mpq_EGaBheapIsFull	TEmplate/mpq_eg_abheap.h	122;"	d
mpq_EGaBheapReset	TEmplate/mpq_eg_abheap.h	141;"	d
mpq_EGaBheapResize	TEmplate/mpq_eg_abheap.h	167;"	d
mpq_EGaBheap_t	TEmplate/mpq_eg_abheap.h	/^mpq_EGaBheap_t;$/;"	t	typeref:struct:__anon57
mpq_EGaHeapAdd	TEmplate/mpq_eg_aheap.h	230;"	d
mpq_EGaHeapCHECK_CN	TEmplate/mpq_eg_aheap.h	62;"	d
mpq_EGaHeapCHECK_CN	TEmplate/mpq_eg_aheap.h	65;"	d
mpq_EGaHeapCHECK_NF	TEmplate/mpq_eg_aheap.h	63;"	d
mpq_EGaHeapCHECK_NF	TEmplate/mpq_eg_aheap.h	66;"	d
mpq_EGaHeapChangeVal	TEmplate/mpq_eg_aheap.h	299;"	d
mpq_EGaHeapClear	TEmplate/mpq_eg_aheap.h	149;"	d
mpq_EGaHeapCnClear	TEmplate/mpq_eg_aheap.h	105;"	d
mpq_EGaHeapCnInit	TEmplate/mpq_eg_aheap.h	91;"	d
mpq_EGaHeapCnReset	TEmplate/mpq_eg_aheap.h	98;"	d
mpq_EGaHeapCn_t	TEmplate/mpq_eg_aheap.h	/^mpq_EGaHeapCn_t;$/;"	t	typeref:struct:__anon58
mpq_EGaHeapDel	TEmplate/mpq_eg_aheap.h	322;"	d
mpq_EGaHeapEmpty	TEmplate/mpq_eg_aheap.h	128;"	d
mpq_EGaHeapFatherId	TEmplate/mpq_eg_aheap.h	189;"	d
mpq_EGaHeapFirstChildId	TEmplate/mpq_eg_aheap.h	244;"	d
mpq_EGaHeapGetMin	TEmplate/mpq_eg_aheap.h	167;"	d
mpq_EGaHeapGetMinVal	TEmplate/mpq_eg_aheap.h	157;"	d
mpq_EGaHeapInit	TEmplate/mpq_eg_aheap.h	135;"	d
mpq_EGaHeapIsFull	TEmplate/mpq_eg_aheap.h	122;"	d
mpq_EGaHeapReset	TEmplate/mpq_eg_aheap.h	142;"	d
mpq_EGaHeapResize	TEmplate/mpq_eg_aheap.h	178;"	d
mpq_EGaHeap_t	TEmplate/mpq_eg_aheap.h	/^mpq_EGaHeap_t;$/;"	t	typeref:struct:__anon59
mpq_EGalgDJK	TEmplate/mpq_eg_dijkstra.c	/^int mpq_EGalgDJK ($/;"	f
mpq_EGalgMC	TEmplate/mpq_eg_min_cut.c	/^int mpq_EGalgMC (mpq_EGalgMCgraph_t * const G,$/;"	f
mpq_EGalgMCbuildPRgraph	TEmplate/mpq_eg_min_cut.c	/^static inline int mpq_EGalgMCbuildPRgraph (mpq_EGalgMCgraph_t * const mcG,$/;"	f	file:
mpq_EGalgMCcbkClear	TEmplate/mpq_eg_min_cut.h	135;"	d
mpq_EGalgMCcbkInit	TEmplate/mpq_eg_min_cut.h	125;"	d
mpq_EGalgMCcbk_t	TEmplate/mpq_eg_min_cut.h	/^mpq_EGalgMCcbk_t;$/;"	t	typeref:struct:mpq_EGalgMCcbk_t
mpq_EGalgMCcbk_t	TEmplate/mpq_eg_min_cut.h	/^typedef struct mpq_EGalgMCcbk_t$/;"	s
mpq_EGalgMCcomputeT	TEmplate/mpq_eg_min_cut.c	/^static inline int mpq_EGalgMCcomputeT (mpq_EGalgPRgraph_t * const prG,$/;"	f	file:
mpq_EGalgMCdo_f	TEmplate/mpq_eg_min_cut.h	/^typedef int (*mpq_EGalgMCdo_f) (mpq_t,$/;"	t
mpq_EGalgMCedgeClear	TEmplate/mpq_eg_min_cut.h	189;"	d
mpq_EGalgMCedgeInit	TEmplate/mpq_eg_min_cut.h	180;"	d
mpq_EGalgMCedge_t	TEmplate/mpq_eg_min_cut.h	/^mpq_EGalgMCedge_t;$/;"	t	typeref:struct:mpq_EGalgMCedge_t
mpq_EGalgMCedge_t	TEmplate/mpq_eg_min_cut.h	/^typedef struct mpq_EGalgMCedge_t$/;"	s
mpq_EGalgMCexpandNode	TEmplate/mpq_eg_min_cut.c	/^static inline int mpq_EGalgMCexpandNode (unsigned int *const cut,$/;"	f	file:
mpq_EGalgMCgraphClear	TEmplate/mpq_eg_min_cut.h	249;"	d
mpq_EGalgMCgraphInit	TEmplate/mpq_eg_min_cut.h	228;"	d
mpq_EGalgMCgraph_t	TEmplate/mpq_eg_min_cut.h	/^mpq_EGalgMCgraph_t;$/;"	t	typeref:struct:mpq_EGalgMCgraph_t
mpq_EGalgMCgraph_t	TEmplate/mpq_eg_min_cut.h	/^typedef struct mpq_EGalgMCgraph_t$/;"	s
mpq_EGalgMCidentifyNodes	TEmplate/mpq_eg_min_cut.h	259;"	d
mpq_EGalgMCidentifyPRedges	TEmplate/mpq_eg_min_cut.c	/^int mpq_EGalgMCidentifyPRedges (mpq_EGalgMCgraph_t * const G,$/;"	f
mpq_EGalgMCnodeClear	TEmplate/mpq_eg_min_cut.h	166;"	d
mpq_EGalgMCnodeInit	TEmplate/mpq_eg_min_cut.h	153;"	d
mpq_EGalgMCnode_t	TEmplate/mpq_eg_min_cut.h	/^mpq_EGalgMCnode_t;$/;"	t	typeref:struct:mpq_EGalgMCnode_t
mpq_EGalgMCnode_t	TEmplate/mpq_eg_min_cut.h	/^typedef struct mpq_EGalgMCnode_t$/;"	s
mpq_EGalgMCprofile	TEmplate/mpq_eg_min_cut.c	/^void mpq_EGalgMCprofile(void)$/;"	f
mpq_EGalgMCtestNode	TEmplate/mpq_eg_min_cut.c	/^static inline int mpq_EGalgMCtestNode (mpq_EGalgMCgraph_t * const G,$/;"	f	file:
mpq_EGalgPRcomputeLabels	TEmplate/mpq_eg_push_relabel.c	/^static inline int mpq_EGalgPRcomputeLabels (mpq_EGalgPRgraph_t * const G,$/;"	f	file:
mpq_EGalgPRedgeClear	TEmplate/mpq_eg_push_relabel.h	239;"	d
mpq_EGalgPRedgeInit	TEmplate/mpq_eg_push_relabel.h	211;"	d
mpq_EGalgPRedgeReset	TEmplate/mpq_eg_push_relabel.h	228;"	d
mpq_EGalgPRedge_t	TEmplate/mpq_eg_push_relabel.h	/^mpq_EGalgPRedge_t;$/;"	t	typeref:struct:mpq_EGalgPRedge_t
mpq_EGalgPRedge_t	TEmplate/mpq_eg_push_relabel.h	/^typedef struct mpq_EGalgPRedge_t$/;"	s
mpq_EGalgPRglobalRelabel	TEmplate/mpq_eg_push_relabel.c	/^static inline int mpq_EGalgPRglobalRelabel (mpq_EGalgPRgraph_t * const G,$/;"	f	file:
mpq_EGalgPRgraphClear	TEmplate/mpq_eg_push_relabel.h	272;"	d
mpq_EGalgPRgraphInit	TEmplate/mpq_eg_push_relabel.h	259;"	d
mpq_EGalgPRgraphReset	TEmplate/mpq_eg_push_relabel.h	267;"	d
mpq_EGalgPRgraph_t	TEmplate/mpq_eg_push_relabel.h	/^mpq_EGalgPRgraph_t;$/;"	t	typeref:struct:mpq_EGalgPRgraph_t
mpq_EGalgPRgraph_t	TEmplate/mpq_eg_push_relabel.h	/^typedef struct mpq_EGalgPRgraph_t$/;"	s
mpq_EGalgPRmaxSTflow	TEmplate/mpq_eg_push_relabel.c	/^int mpq_EGalgPRmaxSTflow (mpq_EGalgPRgraph_t * const G,$/;"	f
mpq_EGalgPRminSTcut	TEmplate/mpq_eg_push_relabel.c	/^int mpq_EGalgPRminSTcut (mpq_EGalgPRgraph_t * const G,$/;"	f
mpq_EGalgPRnodeClear	TEmplate/mpq_eg_push_relabel.h	172;"	d
mpq_EGalgPRnodeInit	TEmplate/mpq_eg_push_relabel.h	156;"	d
mpq_EGalgPRnodeReset	TEmplate/mpq_eg_push_relabel.h	167;"	d
mpq_EGalgPRnode_t	TEmplate/mpq_eg_push_relabel.h	/^mpq_EGalgPRnode_t;$/;"	t	typeref:struct:mpq_EGalgPRnode_t
mpq_EGalgPRnode_t	TEmplate/mpq_eg_push_relabel.h	/^typedef struct mpq_EGalgPRnode_t$/;"	s
mpq_EGalgPRnumb	TEmplate/mpq_eg_push_relabel.c	/^static inline int mpq_EGalgPRnumb (const unsigned int hole,$/;"	f	file:
mpq_EGalgPRoptimalityTest	TEmplate/mpq_eg_push_relabel.c	/^int mpq_EGalgPRoptimalityTest (mpq_EGalgPRgraph_t * const G,$/;"	f
mpq_EGalgPRpreprocess	TEmplate/mpq_eg_push_relabel.c	/^static inline int mpq_EGalgPRpreprocess (mpq_EGalgPRgraph_t * const G,$/;"	f	file:
mpq_EGalgPRprofile	TEmplate/mpq_eg_push_relabel.c	/^void mpq_EGalgPRprofile(void)$/;"	f
mpq_EGalgPRpush	TEmplate/mpq_eg_push_relabel.c	/^static inline int mpq_EGalgPRpush (mpq_EGalgPRse_t * const edge_pt,$/;"	f	file:
mpq_EGalgPRpushRelabel	TEmplate/mpq_eg_push_relabel.c	/^static int mpq_EGalgPRpushRelabel (mpq_EGalgPRnode_t * const node_pt,$/;"	f	file:
mpq_EGalgPRse_t	TEmplate/mpq_eg_push_relabel.h	/^mpq_EGalgPRse_t;$/;"	t	typeref:struct:mpq_EGalgPRse_t
mpq_EGalgPRse_t	TEmplate/mpq_eg_push_relabel.h	/^typedef struct mpq_EGalgPRse_t$/;"	s
mpq_EGdBsRed	TEmplate/mpq_eg_dbasis_red.c	/^int mpq_EGdBsRed (mpq_EGdBsRed_t * const bsred,$/;"	f
mpq_EGdBsRedAddElement	TEmplate/mpq_eg_dbasis_red.h	162;"	d
mpq_EGdBsRedBuildGM	TEmplate/mpq_eg_dbasis_red.c	/^static void mpq_EGdBsRedBuildGM (mpq_EGdMatrix_t * const GM,$/;"	f	file:
mpq_EGdBsRedClear	TEmplate/mpq_eg_dbasis_red.h	136;"	d
mpq_EGdBsRedInit	TEmplate/mpq_eg_dbasis_red.h	127;"	d
mpq_EGdBsRedProfile	TEmplate/mpq_eg_dbasis_red.h	86;"	d
mpq_EGdBsRedReset	TEmplate/mpq_eg_dbasis_red.h	147;"	d
mpq_EGdBsRedSetLength	TEmplate/mpq_eg_dbasis_red.h	155;"	d
mpq_EGdBsRedStats	TEmplate/mpq_eg_dbasis_red.c	/^uintmax_t mpq_EGdBsRedStats[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
mpq_EGdBsRed_t	TEmplate/mpq_eg_dbasis_red.h	/^mpq_EGdBsRed_t;$/;"	t	typeref:struct:mpq_EGdBsRed_t
mpq_EGdBsRed_t	TEmplate/mpq_eg_dbasis_red.h	/^typedef struct mpq_EGdBsRed_t$/;"	s
mpq_EGdMatrixAddColMultiple	TEmplate/mpq_eg_dmatrix.h	241;"	d
mpq_EGdMatrixAddRowMultiple	TEmplate/mpq_eg_dmatrix.h	168;"	d
mpq_EGdMatrixClear	TEmplate/mpq_eg_dmatrix.h	85;"	d
mpq_EGdMatrixDisplay	TEmplate/mpq_eg_dmatrix.h	127;"	d
mpq_EGdMatrixGaussianElimination	TEmplate/mpq_eg_dmatrix.c	/^int mpq_EGdMatrixGaussianElimination (mpq_EGdMatrix_t * const dmatrix,$/;"	f
mpq_EGdMatrixInit	TEmplate/mpq_eg_dmatrix.h	77;"	d
mpq_EGdMatrixMultiplyCol	TEmplate/mpq_eg_dmatrix.h	290;"	d
mpq_EGdMatrixMultiplyRow	TEmplate/mpq_eg_dmatrix.h	216;"	d
mpq_EGdMatrixSetDimension	TEmplate/mpq_eg_dmatrix.h	101;"	d
mpq_EGdMatrixSubColMultiple	TEmplate/mpq_eg_dmatrix.h	269;"	d
mpq_EGdMatrixSubRowMultiple	TEmplate/mpq_eg_dmatrix.h	196;"	d
mpq_EGdMatrix_t	TEmplate/mpq_eg_dmatrix.h	/^mpq_EGdMatrix_t;$/;"	t	typeref:struct:mpq_EGdMatrix_t
mpq_EGdMatrix_t	TEmplate/mpq_eg_dmatrix.h	/^typedef struct mpq_EGdMatrix_t$/;"	s
mpq_EGeHeapAdd	TEmplate/mpq_eg_eheap.h	236;"	d
mpq_EGeHeapCHECK_CN	TEmplate/mpq_eg_eheap.h	76;"	d
mpq_EGeHeapCHECK_CN	TEmplate/mpq_eg_eheap.h	79;"	d
mpq_EGeHeapCHECK_NF	TEmplate/mpq_eg_eheap.h	77;"	d
mpq_EGeHeapCHECK_NF	TEmplate/mpq_eg_eheap.h	80;"	d
mpq_EGeHeapChangeD	TEmplate/mpq_eg_eheap.h	356;"	d
mpq_EGeHeapChangeVal	TEmplate/mpq_eg_eheap.h	301;"	d
mpq_EGeHeapCheck	TEmplate/mpq_eg_eheap.h	330;"	d
mpq_EGeHeapCheck	TEmplate/mpq_eg_eheap.h	346;"	d
mpq_EGeHeapClear	TEmplate/mpq_eg_eheap.h	162;"	d
mpq_EGeHeapCnClear	TEmplate/mpq_eg_eheap.h	119;"	d
mpq_EGeHeapCnInit	TEmplate/mpq_eg_eheap.h	105;"	d
mpq_EGeHeapCnReset	TEmplate/mpq_eg_eheap.h	112;"	d
mpq_EGeHeapCn_t	TEmplate/mpq_eg_eheap.h	/^mpq_EGeHeapCn_t;$/;"	t	typeref:struct:__anon60
mpq_EGeHeapDel	TEmplate/mpq_eg_eheap.h	311;"	d
mpq_EGeHeapEmpty	TEmplate/mpq_eg_eheap.h	142;"	d
mpq_EGeHeapFatherId	TEmplate/mpq_eg_eheap.h	202;"	d
mpq_EGeHeapFirstChildId	TEmplate/mpq_eg_eheap.h	249;"	d
mpq_EGeHeapGetMin	TEmplate/mpq_eg_eheap.h	180;"	d
mpq_EGeHeapGetMinVal	TEmplate/mpq_eg_eheap.h	170;"	d
mpq_EGeHeapInit	TEmplate/mpq_eg_eheap.h	148;"	d
mpq_EGeHeapIsFull	TEmplate/mpq_eg_eheap.h	136;"	d
mpq_EGeHeapResize	TEmplate/mpq_eg_eheap.h	191;"	d
mpq_EGeHeapSiftDown	TEmplate/mpq_eg_eheap.h	259;"	d
mpq_EGeHeapSiftUp	TEmplate/mpq_eg_eheap.h	210;"	d
mpq_EGeHeap_t	TEmplate/mpq_eg_eheap.h	/^mpq_EGeHeap_t;$/;"	t	typeref:struct:__anon61
mpq_EGeHepReset	TEmplate/mpq_eg_eheap.h	155;"	d
mpq_EGeKHeapAdd	TEmplate/mpq_eg_ekheap.h	288;"	d
mpq_EGeKHeapCHECK_CN	TEmplate/mpq_eg_ekheap.h	70;"	d
mpq_EGeKHeapCHECK_CN	TEmplate/mpq_eg_ekheap.h	73;"	d
mpq_EGeKHeapCHECK_NF	TEmplate/mpq_eg_ekheap.h	71;"	d
mpq_EGeKHeapCHECK_NF	TEmplate/mpq_eg_ekheap.h	74;"	d
mpq_EGeKHeapChangeD	TEmplate/mpq_eg_ekheap.h	411;"	d
mpq_EGeKHeapChangeVal	TEmplate/mpq_eg_ekheap.h	354;"	d
mpq_EGeKHeapCheck	TEmplate/mpq_eg_ekheap.h	384;"	d
mpq_EGeKHeapCheck	TEmplate/mpq_eg_ekheap.h	401;"	d
mpq_EGeKHeapClear	TEmplate/mpq_eg_ekheap.h	169;"	d
mpq_EGeKHeapCnClear	TEmplate/mpq_eg_ekheap.h	123;"	d
mpq_EGeKHeapCnInit	TEmplate/mpq_eg_ekheap.h	104;"	d
mpq_EGeKHeapCnReset	TEmplate/mpq_eg_ekheap.h	116;"	d
mpq_EGeKHeapCn_t	TEmplate/mpq_eg_ekheap.h	/^mpq_EGeKHeapCn_t;$/;"	t	typeref:struct:__anon62
mpq_EGeKHeapCopyVal	TEmplate/mpq_eg_ekheap.c	/^void mpq_EGeKHeapCopyVal(mpq_t*const dst, const mpq_t*const src)$/;"	f
mpq_EGeKHeapDel	TEmplate/mpq_eg_ekheap.h	365;"	d
mpq_EGeKHeapEmpty	TEmplate/mpq_eg_ekheap.h	149;"	d
mpq_EGeKHeapFatherId	TEmplate/mpq_eg_ekheap.h	226;"	d
mpq_EGeKHeapFirstChildId	TEmplate/mpq_eg_ekheap.h	301;"	d
mpq_EGeKHeapGetMin	TEmplate/mpq_eg_ekheap.h	204;"	d
mpq_EGeKHeapGetMinKVal	TEmplate/mpq_eg_ekheap.h	191;"	d
mpq_EGeKHeapGetMinVal	TEmplate/mpq_eg_ekheap.h	180;"	d
mpq_EGeKHeapInit	TEmplate/mpq_eg_ekheap.h	155;"	d
mpq_EGeKHeapIsFull	TEmplate/mpq_eg_ekheap.h	143;"	d
mpq_EGeKHeapIsLess	TEmplate/mpq_eg_ekheap.h	234;"	d
mpq_EGeKHeapResize	TEmplate/mpq_eg_ekheap.h	215;"	d
mpq_EGeKHeapSiftDown	TEmplate/mpq_eg_ekheap.h	311;"	d
mpq_EGeKHeapSiftUp	TEmplate/mpq_eg_ekheap.h	262;"	d
mpq_EGeKHeap_t	TEmplate/mpq_eg_ekheap.h	/^mpq_EGeKHeap_t;$/;"	t	typeref:struct:__anon63
mpq_EGeKHepReset	TEmplate/mpq_eg_ekheap.h	162;"	d
mpq_EGguReadXgraph	TEmplate/mpq_eg_dijkstra.c	/^int mpq_EGguReadXgraph($/;"	f
mpq_EGlpNumAddInnProdTo	src/eg_lpnum.mpq.h	456;"	d
mpq_EGlpNumAddTo	src/eg_lpnum.mpq.h	491;"	d
mpq_EGlpNumAddUiTo	src/eg_lpnum.mpq.h	481;"	d
mpq_EGlpNumAllocArray	src/eg_lpnum.mpq.h	119;"	d
mpq_EGlpNumCeil	src/eg_lpnum.mpq.h	157;"	d
mpq_EGlpNumClearVar	src/eg_lpnum.mpq.h	587;"	d
mpq_EGlpNumCopy	src/eg_lpnum.mpq.h	335;"	d
mpq_EGlpNumCopyAbs	src/eg_lpnum.mpq.h	385;"	d
mpq_EGlpNumCopyArray	src/eg_lpnum.mpq.h	423;"	d
mpq_EGlpNumCopyDiff	src/eg_lpnum.mpq.h	317;"	d
mpq_EGlpNumCopyDiffRatio	src/eg_lpnum.mpq.h	305;"	d
mpq_EGlpNumCopyFrac	src/eg_lpnum.mpq.h	407;"	d
mpq_EGlpNumCopyNeg	src/eg_lpnum.mpq.h	397;"	d
mpq_EGlpNumCopySqrOver	src/eg_lpnum.mpq.h	370;"	d
mpq_EGlpNumCopySum	src/eg_lpnum.mpq.h	326;"	d
mpq_EGlpNumDivTo	src/eg_lpnum.mpq.h	524;"	d
mpq_EGlpNumDivUiTo	src/eg_lpnum.mpq.h	535;"	d
mpq_EGlpNumFloor	src/eg_lpnum.mpq.h	165;"	d
mpq_EGlpNumFreeArray	src/eg_lpnum.mpq.h	80;"	d
mpq_EGlpNumGetStr	src/eg_lpnum.mpq.h	72;"	d
mpq_EGlpNumInitVar	src/eg_lpnum.mpq.h	583;"	d
mpq_EGlpNumInnProd	TEmplate/mpq_eg_numutil.h	57;"	d
mpq_EGlpNumInv	src/eg_lpnum.mpq.h	174;"	d
mpq_EGlpNumIsDiffLess	src/eg_lpnum.mpq.h	256;"	d
mpq_EGlpNumIsEqqual	src/eg_lpnum.mpq.h	184;"	d
mpq_EGlpNumIsEqual	src/eg_lpnum.mpq.h	197;"	d
mpq_EGlpNumIsGreaDbl	src/eg_lpnum.mpq.h	284;"	d
mpq_EGlpNumIsGreatZero	src/eg_lpnum.mpq.h	219;"	d
mpq_EGlpNumIsLeq	src/eg_lpnum.mpq.h	295;"	d
mpq_EGlpNumIsLess	src/eg_lpnum.mpq.h	212;"	d
mpq_EGlpNumIsLessDbl	src/eg_lpnum.mpq.h	273;"	d
mpq_EGlpNumIsLessZero	src/eg_lpnum.mpq.h	226;"	d
mpq_EGlpNumIsNeq	src/eg_lpnum.mpq.h	198;"	d
mpq_EGlpNumIsNeqZero	src/eg_lpnum.mpq.h	200;"	d
mpq_EGlpNumIsNeqq	src/eg_lpnum.mpq.h	199;"	d
mpq_EGlpNumIsNeqqZero	src/eg_lpnum.mpq.h	201;"	d
mpq_EGlpNumIsSumLess	src/eg_lpnum.mpq.h	238;"	d
mpq_EGlpNumMultTo	src/eg_lpnum.mpq.h	513;"	d
mpq_EGlpNumMultUiTo	src/eg_lpnum.mpq.h	546;"	d
mpq_EGlpNumOne	src/eg_lpnum.mpq.h	562;"	d
mpq_EGlpNumReadStr	src/eg_lpnum.mpq.h	67;"	d
mpq_EGlpNumReadStrXc	src/eg_lpnum.c	/^int mpq_EGlpNumReadStrXc (mpq_t var,$/;"	f
mpq_EGlpNumReallocArray	src/eg_lpnum.mpq.h	90;"	d
mpq_EGlpNumSet	src/eg_lpnum.c	/^void mpq_EGlpNumSet (mpq_t var,$/;"	f
mpq_EGlpNumSetToMaxAbs	src/eg_lpnum.mpq.h	345;"	d
mpq_EGlpNumSetToMinAbs	src/eg_lpnum.mpq.h	353;"	d
mpq_EGlpNumSet_mpf	src/eg_lpnum.c	/^void mpq_EGlpNumSet_mpf (mpq_t var,$/;"	f
mpq_EGlpNumSign	src/eg_lpnum.mpq.h	570;"	d
mpq_EGlpNumSubInnProdTo	src/eg_lpnum.mpq.h	440;"	d
mpq_EGlpNumSubTo	src/eg_lpnum.mpq.h	502;"	d
mpq_EGlpNumSubUiTo	src/eg_lpnum.mpq.h	471;"	d
mpq_EGlpNumToLf	src/eg_lpnum.mpq.h	579;"	d
mpq_EGlpNumZero	src/eg_lpnum.mpq.h	554;"	d
mpq_EGsrkAddEdge	TEmplate/mpq_eg_shrink_graph.h	180;"	d
mpq_EGsrkAddNode	TEmplate/mpq_eg_shrink_graph.h	168;"	d
mpq_EGsrkEdgeClear	TEmplate/mpq_eg_shrink_graph.h	123;"	d
mpq_EGsrkEdgeInit	TEmplate/mpq_eg_shrink_graph.h	111;"	d
mpq_EGsrkEdge_t	TEmplate/mpq_eg_shrink_graph.h	/^mpq_EGsrkEdge_t;$/;"	t	typeref:struct:mpq_EGsrkEdge_t
mpq_EGsrkEdge_t	TEmplate/mpq_eg_shrink_graph.h	/^typedef struct mpq_EGsrkEdge_t$/;"	s
mpq_EGsrkGraphClear	TEmplate/mpq_eg_shrink_graph.h	139;"	d
mpq_EGsrkGraphInit	TEmplate/mpq_eg_shrink_graph.h	130;"	d
mpq_EGsrkGraph_t	TEmplate/mpq_eg_shrink_graph.h	/^mpq_EGsrkGraph_t;$/;"	t	typeref:struct:mpq_EGsrkGraph_t
mpq_EGsrkGraph_t	TEmplate/mpq_eg_shrink_graph.h	/^typedef struct mpq_EGsrkGraph_t$/;"	s
mpq_EGsrkIdentifyNodes	TEmplate/mpq_eg_shrink_graph.c	/^mpq_EGsrkNode_t *mpq_EGsrkIdentifyNodes (mpq_EGsrkGraph_t * const G,$/;"	f
mpq_EGsrkNodeClear	TEmplate/mpq_eg_shrink_graph.h	158;"	d
mpq_EGsrkNodeInit	TEmplate/mpq_eg_shrink_graph.h	144;"	d
mpq_EGsrkNode_t	TEmplate/mpq_eg_shrink_graph.h	/^mpq_EGsrkNode_t;$/;"	t	typeref:struct:mpq_EGsrkNode_t
mpq_EGsrkNode_t	TEmplate/mpq_eg_shrink_graph.h	/^typedef struct mpq_EGsrkNode_t$/;"	s
mpq_EGutilPermSort	TEmplate/mpq_eg_numutil.c	/^void mpq_EGutilPermSort (const size_t sz,$/;"	f
mpq_EGutilPermSort2	TEmplate/mpq_eg_numutil.c	/^void mpq_EGutilPermSort2 (const size_t sz,$/;"	f
mpq_HILBERT_TABLE_SIZE	TEmplate/mpq_eg_dmatrix.ex.c	45;"	d	file:
mpq_MaxLpNum	src/eg_lpnum.mpq.h	42;"	d
mpq_MinLpNum	src/eg_lpnum.mpq.h	43;"	d
mpq_UPDATE	TEmplate/mpq_eg_min_cut.c	50;"	d	file:
mpq_UPDATE	TEmplate/mpq_eg_min_cut.c	52;"	d	file:
mpq_UPDATE	TEmplate/mpq_eg_push_relabel.c	51;"	d	file:
mpq_UPDATE	TEmplate/mpq_eg_push_relabel.c	53;"	d	file:
mpq__EG_MIN_CUT_H	TEmplate/mpq_eg_min_cut.h	65;"	d
mpq__EGalgMChitNeighbours	TEmplate/mpq_eg_min_cut.c	135;"	d	file:
mpq__EGalgMCunhitNeighbours	TEmplate/mpq_eg_min_cut.c	154;"	d	file:
mpq__EGshrinkGraph_h__	TEmplate/mpq_eg_shrink_graph.h	51;"	d
mpq___EG_ABHEAP__	TEmplate/mpq_eg_abheap.h	49;"	d
mpq___EG_ABKHEAP__	TEmplate/mpq_eg_abkheap.h	49;"	d
mpq___EG_AHEAP__	TEmplate/mpq_eg_aheap.h	48;"	d
mpq___EG_DBASIS_REDUCTION__	TEmplate/mpq_eg_dbasis_red.h	24;"	d
mpq___EG_DIJKSTRA_H	TEmplate/mpq_eg_dijkstra.h	34;"	d
mpq___EG_DMATRIX_H__	TEmplate/mpq_eg_dmatrix.h	24;"	d
mpq___EG_EHEAP__	TEmplate/mpq_eg_eheap.h	62;"	d
mpq___EG_EKHEAP__	TEmplate/mpq_eg_ekheap.h	56;"	d
mpq___EG_NUMUTIL_H__	TEmplate/mpq_eg_numutil.h	24;"	d
mpq___EG_PUSH_RELABEL_H__	TEmplate/mpq_eg_push_relabel.h	79;"	d
mpq___EGaBKheapSiftDown	TEmplate/mpq_eg_abkheap.h	269;"	d
mpq___EGaBKheapSiftUp	TEmplate/mpq_eg_abkheap.h	214;"	d
mpq___EGaBheapSiftDown	TEmplate/mpq_eg_abheap.h	244;"	d
mpq___EGaBheapSiftUp	TEmplate/mpq_eg_abheap.h	189;"	d
mpq___EGaHeapSiftDown	TEmplate/mpq_eg_aheap.h	256;"	d
mpq___EGaHeapSiftUp	TEmplate/mpq_eg_aheap.h	201;"	d
mpq___EGlpNumInnProd	TEmplate/mpq_eg_numutil.c	/^void mpq___EGlpNumInnProd(mpq_t*rop,$/;"	f
mpq___MC_DEBUG_	TEmplate/mpq_eg_min_cut.h	81;"	d
mpq___MC_PROFILE_	TEmplate/mpq_eg_min_cut.h	85;"	d
mpq___MC_VRBLVL_	TEmplate/mpq_eg_min_cut.h	77;"	d
mpq___MC_profile_lvl	TEmplate/mpq_eg_min_cut.c	/^static unsigned long long mpq___MC_profile_lvl[5] = { 0, 0, 0, 0, 0 };$/;"	v	file:
mpq___MC_profile_tn	TEmplate/mpq_eg_min_cut.c	/^static unsigned long long mpq___MC_profile_tn = 0;\/**<Number of calls to #mpq_EGalgMCtestNode*\/$/;"	v	file:
mpq___MC_profile_up	TEmplate/mpq_eg_min_cut.c	/^static unsigned long long mpq___MC_profile_up = 0;\/**< Number of improving cuts found *\/$/;"	v	file:
mpq___PR_DEBUGL__	TEmplate/mpq_eg_push_relabel.h	89;"	d
mpq___PR_PROFILE__	TEmplate/mpq_eg_push_relabel.h	101;"	d
mpq___PR_TEST_VERBOSE__	TEmplate/mpq_eg_push_relabel.h	93;"	d
mpq___PR_VERBOSE__	TEmplate/mpq_eg_push_relabel.h	97;"	d
mpq___PR_profile_lvel	TEmplate/mpq_eg_push_relabel.c	/^static unsigned long long mpq___PR_profile_lvel = 0;$/;"	v	file:
mpq___PR_profile_move	TEmplate/mpq_eg_push_relabel.c	/^static unsigned long long mpq___PR_profile_move = 0;$/;"	v	file:
mpq___PR_profile_numb	TEmplate/mpq_eg_push_relabel.c	/^static unsigned long long mpq___PR_profile_numb = 0;$/;"	v	file:
mpq___PR_profile_push	TEmplate/mpq_eg_push_relabel.c	/^static unsigned long long mpq___PR_profile_push = 0;$/;"	v	file:
mpq___PR_profile_rela	TEmplate/mpq_eg_push_relabel.c	/^static unsigned long long mpq___PR_profile_rela = 0;$/;"	v	file:
mpq___last_global	TEmplate/mpq_eg_push_relabel.c	/^static unsigned long long mpq___last_global = 0;$/;"	v	file:
mpq_aheap_parseargs	TEmplate/mpq_eg_abheap.ex.c	/^int mpq_aheap_parseargs (int argc,$/;"	f
mpq_aheap_parseargs	TEmplate/mpq_eg_abkheap.ex.c	/^int mpq_aheap_parseargs (int argc,$/;"	f
mpq_aheap_parseargs	TEmplate/mpq_eg_aheap.ex.c	/^int mpq_aheap_parseargs (int argc,$/;"	f
mpq_aheap_usage	TEmplate/mpq_eg_abheap.ex.c	/^void mpq_aheap_usage (char *program)$/;"	f
mpq_aheap_usage	TEmplate/mpq_eg_abkheap.ex.c	/^void mpq_aheap_usage (char *program)$/;"	f
mpq_aheap_usage	TEmplate/mpq_eg_aheap.ex.c	/^void mpq_aheap_usage (char *program)$/;"	f
mpq_display_srkG	TEmplate/mpq_eg_shrink_graph.ex.c	/^static inline void mpq_display_srkG (mpq_EGsrkGraph_t * G,$/;"	f	file:
mpq_djk_parseargs	TEmplate/mpq_eg_dijkstra.ex.c	/^static inline void mpq_djk_parseargs(int argc,char**argv)$/;"	f	file:
mpq_djk_usage	TEmplate/mpq_eg_dijkstra.ex.c	/^static inline void mpq_djk_usage(const char*const progname)$/;"	f	file:
mpq_dmatrix_hilbert_eigenvalues	TEmplate/mpq_eg_dmatrix.ex.c	/^static unsigned mpq_dmatrix_hilbert_eigenvalues[mpq_HILBERT_TABLE_SIZE] = {$/;"	v	file:
mpq_dmatrix_parseargs	TEmplate/mpq_eg_dmatrix.ex.c	/^int mpq_dmatrix_parseargs (int argc,$/;"	f
mpq_dmatrix_usage	TEmplate/mpq_eg_dmatrix.ex.c	/^void mpq_dmatrix_usage (char *program)$/;"	f
mpq_eheap_parseargs	TEmplate/mpq_eg_eheap.ex.c	/^int mpq_eheap_parseargs (int argc,$/;"	f
mpq_eheap_usage	TEmplate/mpq_eg_eheap.ex.c	/^void mpq_eheap_usage (char *program)$/;"	f
mpq_ekheap_parseargs	TEmplate/mpq_eg_ekheap.ex.c	/^int mpq_ekheap_parseargs (int argc,$/;"	f
mpq_ekheap_usage	TEmplate/mpq_eg_ekheap.ex.c	/^void mpq_ekheap_usage (char *program)$/;"	f
mpq_epsLpNum	src/eg_lpnum.mpq.h	41;"	d
mpq_file_name	TEmplate/mpq_eg_min_cut.ex.c	/^static char *mpq_file_name = 0;$/;"	v	file:
mpq_fname	TEmplate/mpq_eg_dijkstra.ex.c	/^static char mpq_fname[1024];$/;"	v	file:
mpq_lvl	TEmplate/mpq_eg_min_cut.ex.c	/^static unsigned int mpq_lvl = 5;$/;"	v	file:
mpq_lvl	TEmplate/mpq_eg_min_cut.h	/^	unsigned int mpq_lvl;		\/**< Current node level test to be performed *\/$/;"	m	struct:mpq_EGalgMCnode_t
mpq_mc_all_cuts_t	TEmplate/mpq_eg_min_cut.ex.c	/^mpq_mc_all_cuts_t;$/;"	t	typeref:struct:mpq_mc_all_cuts_t	file:
mpq_mc_all_cuts_t	TEmplate/mpq_eg_min_cut.ex.c	/^typedef struct mpq_mc_all_cuts_t$/;"	s	file:
mpq_mc_parseargs	TEmplate/mpq_eg_min_cut.ex.c	/^static inline int mpq_mc_parseargs (int argc,$/;"	f	file:
mpq_mc_store_cuts	TEmplate/mpq_eg_min_cut.ex.c	/^int mpq_mc_store_cuts (mpq_t value,$/;"	f
mpq_mc_usage	TEmplate/mpq_eg_min_cut.ex.c	/^static void mpq_mc_usage (char **argv)$/;"	f	file:
mpq_my_constr	TEmplate/mpq_eg_memslab.ex.c	/^static void mpq_my_constr (void *ptr)$/;"	f	file:
mpq_my_dest	TEmplate/mpq_eg_memslab.ex.c	/^static void mpq_my_dest (void *ptr)$/;"	f	file:
mpq_oneLpNum	src/eg_lpnum.mpq.h	40;"	d
mpq_pr_usage	TEmplate/mpq_eg_push_relabel.ex.c	/^static inline void mpq_pr_usage (char **argv)$/;"	f	file:
mpq_source	TEmplate/mpq_eg_dijkstra.ex.c	/^static int32_t mpq_source=0;$/;"	v	file:
mpq_srk_usage	TEmplate/mpq_eg_shrink_graph.ex.c	/^static inline void mpq_srk_usage (char **argv)$/;"	f	file:
mpq_verbose	TEmplate/mpq_eg_dijkstra.ex.c	/^static int mpq_verbose=1;$/;"	v	file:
mpq_zeroLpNum	src/eg_lpnum.mpq.h	39;"	d
mpz_EGlpNumAddInnProdTo	src/eg_lpnum.mpz.h	407;"	d
mpz_EGlpNumAddTo	src/eg_lpnum.mpz.h	437;"	d
mpz_EGlpNumAddUiTo	src/eg_lpnum.mpz.h	427;"	d
mpz_EGlpNumAllocArray	src/eg_lpnum.mpz.h	98;"	d
mpz_EGlpNumCeil	src/eg_lpnum.mpz.h	121;"	d
mpz_EGlpNumClearVar	src/eg_lpnum.mpz.h	533;"	d
mpz_EGlpNumCopy	src/eg_lpnum.mpz.h	297;"	d
mpz_EGlpNumCopyAbs	src/eg_lpnum.mpz.h	341;"	d
mpz_EGlpNumCopyArray	src/eg_lpnum.mpz.h	379;"	d
mpz_EGlpNumCopyDiff	src/eg_lpnum.mpz.h	279;"	d
mpz_EGlpNumCopyDiffRatio	src/eg_lpnum.mpz.h	267;"	d
mpz_EGlpNumCopyFrac	src/eg_lpnum.mpz.h	363;"	d
mpz_EGlpNumCopyNeg	src/eg_lpnum.mpz.h	353;"	d
mpz_EGlpNumCopySqrOver	src/eg_lpnum.mpz.h	326;"	d
mpz_EGlpNumCopySum	src/eg_lpnum.mpz.h	288;"	d
mpz_EGlpNumDivTo	src/eg_lpnum.mpz.h	470;"	d
mpz_EGlpNumDivUiTo	src/eg_lpnum.mpz.h	481;"	d
mpz_EGlpNumFloor	src/eg_lpnum.mpz.h	129;"	d
mpz_EGlpNumFreeArray	src/eg_lpnum.mpz.h	59;"	d
mpz_EGlpNumGetStr	src/eg_lpnum.mpz.h	50;"	d
mpz_EGlpNumInitVar	src/eg_lpnum.mpz.h	529;"	d
mpz_EGlpNumInv	src/eg_lpnum.mpz.h	138;"	d
mpz_EGlpNumIsDiffLess	src/eg_lpnum.mpz.h	219;"	d
mpz_EGlpNumIsEqqual	src/eg_lpnum.mpz.h	148;"	d
mpz_EGlpNumIsEqual	src/eg_lpnum.mpz.h	161;"	d
mpz_EGlpNumIsGreaDbl	src/eg_lpnum.mpz.h	246;"	d
mpz_EGlpNumIsGreatZero	src/eg_lpnum.mpz.h	172;"	d
mpz_EGlpNumIsLeq	src/eg_lpnum.mpz.h	257;"	d
mpz_EGlpNumIsLess	src/eg_lpnum.mpz.h	190;"	d
mpz_EGlpNumIsLessDbl	src/eg_lpnum.mpz.h	235;"	d
mpz_EGlpNumIsLessZero	src/eg_lpnum.mpz.h	179;"	d
mpz_EGlpNumIsNeq	src/eg_lpnum.mpz.h	162;"	d
mpz_EGlpNumIsNeqZero	src/eg_lpnum.mpz.h	164;"	d
mpz_EGlpNumIsNeqq	src/eg_lpnum.mpz.h	163;"	d
mpz_EGlpNumIsNeqqZero	src/eg_lpnum.mpz.h	165;"	d
mpz_EGlpNumIsSumLess	src/eg_lpnum.mpz.h	202;"	d
mpz_EGlpNumMultTo	src/eg_lpnum.mpz.h	459;"	d
mpz_EGlpNumMultUiTo	src/eg_lpnum.mpz.h	492;"	d
mpz_EGlpNumOne	src/eg_lpnum.mpz.h	508;"	d
mpz_EGlpNumReadStr	src/eg_lpnum.c	/^int mpz_EGlpNumReadStr (mpz_t var,$/;"	f
mpz_EGlpNumReallocArray	src/eg_lpnum.mpz.h	69;"	d
mpz_EGlpNumSet	src/eg_lpnum.mpz.h	116;"	d
mpz_EGlpNumSetToMaxAbs	src/eg_lpnum.mpz.h	307;"	d
mpz_EGlpNumSetToMinAbs	src/eg_lpnum.mpz.h	312;"	d
mpz_EGlpNumSign	src/eg_lpnum.mpz.h	516;"	d
mpz_EGlpNumSubInnProdTo	src/eg_lpnum.mpz.h	396;"	d
mpz_EGlpNumSubTo	src/eg_lpnum.mpz.h	448;"	d
mpz_EGlpNumSubUiTo	src/eg_lpnum.mpz.h	417;"	d
mpz_EGlpNumToLf	src/eg_lpnum.mpz.h	525;"	d
mpz_EGlpNumZero	src/eg_lpnum.mpz.h	500;"	d
mpz_MaxLpNum	src/eg_lpnum.mpz.h	37;"	d
mpz_MinLpNum	src/eg_lpnum.mpz.h	38;"	d
mpz_epsLpNum	src/eg_lpnum.mpz.h	39;"	d
mpz_oneLpNum	src/eg_lpnum.mpz.h	36;"	d
mpz_zeroLpNum	src/eg_lpnum.mpz.h	35;"	d
mt	src/eg_memslab.h	/^	pthread_mutex_t mt;			\/**< mutex for memory slab manager *\/$/;"	m	struct:EGmemSlabPool_t
must_sort	src/eg_symtab.h	/^	int must_sort;			\/**< @brief flag to indicate whether or not we should $/;"	m	struct:EGsymtab_t
my_adedge_t	src/eg_adgraph.ex.c	/^typedef struct my_adedge_t$/;"	s	file:
my_adgraph_t	src/eg_adgraph.ex.c	/^typedef struct my_adgraph_t$/;"	s	file:
my_adnode_t	src/eg_adgraph.ex.c	/^typedef struct my_adnode_t$/;"	s	file:
my_dedge_t	src/eg_edgraph.ex.c	/^my_dedge_t;$/;"	t	typeref:struct:my_dedge_t	file:
my_dedge_t	src/eg_edgraph.ex.c	/^typedef struct my_dedge_t$/;"	s	file:
my_dgraph_t	src/eg_edgraph.ex.c	/^my_dgraph_t;$/;"	t	typeref:struct:my_dgraph_t	file:
my_dgraph_t	src/eg_edgraph.ex.c	/^typedef struct my_dgraph_t$/;"	s	file:
my_dnode_t	src/eg_edgraph.ex.c	/^my_dnode_t;$/;"	t	typeref:struct:my_dnode_t	file:
my_dnode_t	src/eg_edgraph.ex.c	/^typedef struct my_dnode_t$/;"	s	file:
my_uedge_t	src/eg_eugraph.ex.c	/^my_uedge_t;$/;"	t	typeref:struct:my_uedge_t	file:
my_uedge_t	src/eg_eugraph.ex.c	/^typedef struct my_uedge_t$/;"	s	file:
my_ugraph_t	src/eg_eugraph.ex.c	/^my_ugraph_t;$/;"	t	typeref:struct:my_ugraph_t	file:
my_ugraph_t	src/eg_eugraph.ex.c	/^typedef struct my_ugraph_t$/;"	s	file:
my_unode_t	src/eg_eugraph.ex.c	/^my_unode_t;$/;"	t	typeref:struct:my_unode_t	file:
my_unode_t	src/eg_eugraph.ex.c	/^typedef struct my_unode_t$/;"	s	file:
n	TEmplate/uint16_eg_idxlist.ex.c	/^	uint16_EGidx_t n;			\/**< actual information contained in the list *\/$/;"	m	struct:__anon79	file:
n	TEmplate/uint32_eg_idxlist.ex.c	/^	uint32_EGidx_t n;			\/**< actual information contained in the list *\/$/;"	m	struct:__anon80	file:
n	TEmplate/uint64_eg_idxlist.ex.c	/^	uint64_EGidx_t n;			\/**< actual information contained in the list *\/$/;"	m	struct:__anon81	file:
n	TEmplate/uint8_eg_idxlist.ex.c	/^	uint8_EGidx_t n;			\/**< actual information contained in the list *\/$/;"	m	struct:__anon78	file:
n	src/eg_a16list.ex.c	/^	unsigned n;				\/**< actual information contained in the list *\/$/;"	m	struct:__anon75	file:
n	src/eg_a32list.ex.c	/^	unsigned n;				\/**< actual information contained in the list *\/$/;"	m	struct:__anon74	file:
n	src/eg_alist.ex.c	/^	unsigned n;				\/**< actual information contained in the list *\/$/;"	m	struct:__anon76	file:
n	src/eg_astack.h	/^	int n;			\/**< @brief top of the stack, -1 is an empty stack *\/$/;"	m	struct:__anon82
n	src/eg_elist.ex.c	/^	uint32_t n;				\/**< actual information contained in the list *\/$/;"	m	struct:__anon77	file:
n_allocs	src/eg_memslab.h	/^	uint64_t n_allocs;			\/**< number slab alloc calls *\/$/;"	m	struct:EGmemSlabPool_t
n_edges	src/eg_adgraph.h	/^	uint32_t n_edges;	\/**< @brief number of edges in the graph *\/$/;"	m	struct:__anon94
n_edges	src/eg_edgraph.h	/^	unsigned n_edges;	\/**< number of edges in the graph *\/$/;"	m	struct:__anon84
n_edges	src/eg_eugraph.h	/^	unsigned n_edges;	\/**< number of edges in the graph *\/$/;"	m	struct:EGeUgraph_t
n_elem	src/eg_memslab.h	/^	size_t n_elem;						\/**< @brief number of used elements *\/$/;"	m	struct:__anon101
n_elem	src/eg_memslab.h	/^	uint8_t n_elem;					\/**< Total number of elements in each slab *\/$/;"	m	struct:EGmemSlabPool_t
n_iter	src/eg_thread.ex.c	/^static int n_iter = 1000;	\/**< number of operations to perform in each thread *\/$/;"	v	file:
n_nodes	src/eg_adgraph.h	/^	uint32_t n_nodes;	\/**< @brief number of nodes in the graph *\/$/;"	m	struct:__anon94
n_nodes	src/eg_edgraph.h	/^	unsigned n_nodes;	\/**< number of nodes in the graph *\/$/;"	m	struct:__anon84
n_nodes	src/eg_eugraph.h	/^	unsigned n_nodes;	\/**< number of nodes in the graph *\/$/;"	m	struct:EGeUgraph_t
n_oedges	TEmplate/dbl_eg_shrink_graph.h	/^	unsigned n_oedges;			\/**< Number of original edges *\/$/;"	m	struct:dbl_EGsrkGraph_t
n_oedges	TEmplate/fp20_eg_shrink_graph.h	/^	unsigned n_oedges;			\/**< Number of original edges *\/$/;"	m	struct:fp20_EGsrkGraph_t
n_oedges	TEmplate/int32_eg_shrink_graph.h	/^	unsigned n_oedges;			\/**< Number of original edges *\/$/;"	m	struct:int32_EGsrkGraph_t
n_oedges	TEmplate/int_eg_shrink_graph.h	/^	unsigned n_oedges;			\/**< Number of original edges *\/$/;"	m	struct:int_EGsrkGraph_t
n_oedges	TEmplate/ldbl_eg_shrink_graph.h	/^	unsigned n_oedges;			\/**< Number of original edges *\/$/;"	m	struct:ldbl_EGsrkGraph_t
n_oedges	TEmplate/mpf_eg_shrink_graph.h	/^	unsigned n_oedges;			\/**< Number of original edges *\/$/;"	m	struct:mpf_EGsrkGraph_t
n_oedges	TEmplate/mpq_eg_shrink_graph.h	/^	unsigned n_oedges;			\/**< Number of original edges *\/$/;"	m	struct:mpq_EGsrkGraph_t
n_onodes	TEmplate/dbl_eg_shrink_graph.h	/^	unsigned n_onodes;			\/**< Number of original nodes *\/$/;"	m	struct:dbl_EGsrkGraph_t
n_onodes	TEmplate/fp20_eg_shrink_graph.h	/^	unsigned n_onodes;			\/**< Number of original nodes *\/$/;"	m	struct:fp20_EGsrkGraph_t
n_onodes	TEmplate/int32_eg_shrink_graph.h	/^	unsigned n_onodes;			\/**< Number of original nodes *\/$/;"	m	struct:int32_EGsrkGraph_t
n_onodes	TEmplate/int_eg_shrink_graph.h	/^	unsigned n_onodes;			\/**< Number of original nodes *\/$/;"	m	struct:int_EGsrkGraph_t
n_onodes	TEmplate/ldbl_eg_shrink_graph.h	/^	unsigned n_onodes;			\/**< Number of original nodes *\/$/;"	m	struct:ldbl_EGsrkGraph_t
n_onodes	TEmplate/mpf_eg_shrink_graph.h	/^	unsigned n_onodes;			\/**< Number of original nodes *\/$/;"	m	struct:mpf_EGsrkGraph_t
n_onodes	TEmplate/mpq_eg_shrink_graph.h	/^	unsigned n_onodes;			\/**< Number of original nodes *\/$/;"	m	struct:mpq_EGsrkGraph_t
n_seeds	src/eg_simula.ex.c	/^static int n_seeds = 0; \/**< number of readed seeds *\/$/;"	v	file:
n_seeds	src/eg_simula2.ex.c	/^static int n_seeds = 0; \/**< number of readed seeds *\/$/;"	v	file:
n_seeds	src/eg_slk.ex.c	/^static int n_seeds = 0; \/**< @brief number of readed seeds *\/$/;"	v	file:
n_seeds	src/eg_thread.ex.c	/^static int n_seeds = 0; \/**< number of readed seeds *\/$/;"	v	file:
n_slabs	src/eg_memslab.h	/^	uint64_t n_slabs;				\/**< Number of slabs *\/$/;"	m	struct:EGmemSlabPool_t
n_threads	src/eg_thread.ex.c	/^static int n_threads = 5; \/**< number of threads to use *\/$/;"	v	file:
n_tot	src/eg_memslab.h	/^	uint64_t n_tot;					\/**< Total number of elements in use by the user *\/$/;"	m	struct:EGmemSlabPool_t
ncals	src/eg_memslab.h	/^	uint64_t ncals;					\/**< number to alloc calls *\/$/;"	m	struct:EGmemSlabPool_t
nchars	src/eg_net.ex.c	/^static unsigned int nchars = 0;$/;"	v	file:
nedges	src/eg_augraph.h	/^	uint32_t nedges;$/;"	m	struct:__anon3
net_usage	src/eg_net.ex.c	/^static void net_usage (char *program)$/;"	f	file:
new_id	TEmplate/dbl_eg_min_cut.h	/^	unsigned int new_id;\/**< internal data, it's values can be discarded *\/$/;"	m	struct:dbl_EGalgMCnode_t
new_id	TEmplate/fp20_eg_min_cut.h	/^	unsigned int new_id;\/**< internal data, it's values can be discarded *\/$/;"	m	struct:fp20_EGalgMCnode_t
new_id	TEmplate/int32_eg_min_cut.h	/^	unsigned int new_id;\/**< internal data, it's values can be discarded *\/$/;"	m	struct:int32_EGalgMCnode_t
new_id	TEmplate/int_eg_min_cut.h	/^	unsigned int new_id;\/**< internal data, it's values can be discarded *\/$/;"	m	struct:int_EGalgMCnode_t
new_id	TEmplate/ldbl_eg_min_cut.h	/^	unsigned int new_id;\/**< internal data, it's values can be discarded *\/$/;"	m	struct:ldbl_EGalgMCnode_t
new_id	TEmplate/mpf_eg_min_cut.h	/^	unsigned int new_id;\/**< internal data, it's values can be discarded *\/$/;"	m	struct:mpf_EGalgMCnode_t
new_id	TEmplate/mpq_eg_min_cut.h	/^	unsigned int new_id;\/**< internal data, it's values can be discarded *\/$/;"	m	struct:mpq_EGalgMCnode_t
next	TEmplate/uint16_eg_idxlist.h	/^	uint16_EGidx_t next;\/**< position in the array of the next structure in the list *\/$/;"	m	struct:uint16_EGidxLst_t
next	TEmplate/uint32_eg_idxlist.h	/^	uint32_EGidx_t next;\/**< position in the array of the next structure in the list *\/$/;"	m	struct:uint32_EGidxLst_t
next	TEmplate/uint64_eg_idxlist.h	/^	uint64_EGidx_t next;\/**< position in the array of the next structure in the list *\/$/;"	m	struct:uint64_EGidxLst_t
next	TEmplate/uint8_eg_idxlist.h	/^	uint8_EGidx_t next;\/**< position in the array of the next structure in the list *\/$/;"	m	struct:uint8_EGidxLst_t
next	src/eg_a16list.h	/^	uint16_t next;\/**< position in the array of the next structure in the list *\/$/;"	m	struct:EGa16List_t
next	src/eg_a32list.h	/^	uint32_t next;\/**< position in the array of the next structure in the list *\/$/;"	m	struct:EGa32List_t
next	src/eg_alist.h	/^	int next;\/**< position in the array of the next structure in the list *\/$/;"	m	struct:EGaList_t
next	src/eg_elist.h	/^	struct EGeList_t *next;\/**< Pointer to the next structure in the list *\/$/;"	m	struct:EGeList_t	typeref:struct:EGeList_t::EGeList_t
next	src/eg_keytab.h	/^	int next;						\/**< @brief next element in the hash list $/;"	m	struct:__anon88
next	src/eg_memslab.h	/^	size_t next;							\/**< @brief next free element *\/$/;"	m	struct:__anon101
nextSeed	src/eg_random.c	/^static double nextSeed[6] = { 12345, 12345, 12345, 12345, 12345, 12345 };$/;"	v	file:
next_list	src/eg_memslab.h	/^	uint8_t next_list[];		\/**< @brief list of free elements, the next $/;"	m	struct:__anon102
ngen	src/eg_simula.h	/^	size_t ngen;$/;"	m	struct:__anon107
ngen	src/eg_simula.h	/^	size_t* ngen;$/;"	m	struct:__anon106
nint	src/eg_simula.h	/^	size_t nint;			\/**< @brief number of rate changes *\/ $/;"	m	struct:__anon106
nkey	src/eg_keytab.h	/^	size_t nkey;				\/**< @brief number of keys in the table *\/$/;"	m	struct:__anon89
nkeys	src/eg_keytab.ex.c	/^static int nkeys = 100;$/;"	v	file:
nlookup	src/eg_keytab.ex.c	/^static int nlookup = 1000;$/;"	v	file:
nnodes	src/eg_augraph.h	/^	uint32_t nnodes;$/;"	m	struct:__anon3
node	TEmplate/dbl_eg_min_cut.h	/^	dbl_EGsrkNode_t node;		\/**< Actual shrinkable node *\/$/;"	m	struct:dbl_EGalgMCnode_t
node	TEmplate/dbl_eg_shrink_graph.h	/^	EGeUgraphNode_t node;	\/**< actual node structure for the graph *\/$/;"	m	struct:dbl_EGsrkNode_t
node	TEmplate/fp20_eg_min_cut.h	/^	fp20_EGsrkNode_t node;		\/**< Actual shrinkable node *\/$/;"	m	struct:fp20_EGalgMCnode_t
node	TEmplate/fp20_eg_shrink_graph.h	/^	EGeUgraphNode_t node;	\/**< actual node structure for the graph *\/$/;"	m	struct:fp20_EGsrkNode_t
node	TEmplate/int32_eg_min_cut.h	/^	int32_EGsrkNode_t node;		\/**< Actual shrinkable node *\/$/;"	m	struct:int32_EGalgMCnode_t
node	TEmplate/int32_eg_shrink_graph.h	/^	EGeUgraphNode_t node;	\/**< actual node structure for the graph *\/$/;"	m	struct:int32_EGsrkNode_t
node	TEmplate/int_eg_min_cut.h	/^	int_EGsrkNode_t node;		\/**< Actual shrinkable node *\/$/;"	m	struct:int_EGalgMCnode_t
node	TEmplate/int_eg_shrink_graph.h	/^	EGeUgraphNode_t node;	\/**< actual node structure for the graph *\/$/;"	m	struct:int_EGsrkNode_t
node	TEmplate/ldbl_eg_min_cut.h	/^	ldbl_EGsrkNode_t node;		\/**< Actual shrinkable node *\/$/;"	m	struct:ldbl_EGalgMCnode_t
node	TEmplate/ldbl_eg_shrink_graph.h	/^	EGeUgraphNode_t node;	\/**< actual node structure for the graph *\/$/;"	m	struct:ldbl_EGsrkNode_t
node	TEmplate/mpf_eg_min_cut.h	/^	mpf_EGsrkNode_t node;		\/**< Actual shrinkable node *\/$/;"	m	struct:mpf_EGalgMCnode_t
node	TEmplate/mpf_eg_shrink_graph.h	/^	EGeUgraphNode_t node;	\/**< actual node structure for the graph *\/$/;"	m	struct:mpf_EGsrkNode_t
node	TEmplate/mpq_eg_min_cut.h	/^	mpq_EGsrkNode_t node;		\/**< Actual shrinkable node *\/$/;"	m	struct:mpq_EGalgMCnode_t
node	TEmplate/mpq_eg_shrink_graph.h	/^	EGeUgraphNode_t node;	\/**< actual node structure for the graph *\/$/;"	m	struct:mpq_EGsrkNode_t
node	src/eg_eugraph.h	/^	EGeUgraphNode_t *node;\/**< Link to the actual node of this end point *\/$/;"	m	struct:EGeUgraphEP_t
node	src/eg_simula.h	/^	EGeDgraphNode_t node;	\/**< @brief Actual node storing the network information *\/$/;"	m	struct:__anon108
node	src/eg_simula.h	/^	EGsimNode_t* node;		\/**< Node where this agent is being served or queue *\/$/;"	m	struct:__anon109
node	src/eg_slk.ex.c	/^	unsigned node;$/;"	m	struct:SlkHcn_t	file:
node_cn	src/eg_edgraph.h	/^	EGeList_t node_cn;	\/**< List member of the list of all nodes in the graph, $/;"	m	struct:EGeDgraphNode_t
node_cn	src/eg_eugraph.h	/^	EGeList_t node_cn;	\/**< List member of the list of all nodes in the graph, $/;"	m	struct:EGeUgraphNode_t
nodes	src/eg_edgraph.h	/^	EGeList_t nodes;	\/**< List head for all nodes in the graph *\/$/;"	m	struct:__anon84
nodes	src/eg_eugraph.h	/^	EGeList_t nodes;	\/**< List head for all nodes in the graph *\/$/;"	m	struct:EGeUgraph_t
norm	src/eg_random.c	26;"	d	file:
nson	src/eg_octree.h	/^	uint16_t nson:4;	\/** @brief number of childrens for this node *\/$/;"	m	struct:EGeOctdata_st
nsym	src/eg_symtab.h	/^	size_t nsym;				\/**< @brief symbols in table *\/$/;"	m	struct:EGsymtab_t
nullConstructor	src/eg_mem.h	106;"	d
nullCopy	src/eg_macros.h	413;"	d
nullDestructor	src/eg_mem.h	118;"	d
nullFree	src/eg_mem.h	82;"	d
num	src/eg_simula.h	/^	unsigned num;					\/**< @brief Number of agents that have pass through the$/;"	m	struct:__anon108
o_focus	src/eg_perm_it.h	/^	int*o_focus;		\/**< @brief Internal information *\/$/;"	m	struct:EGpermIt_t
oalloc	src/eg_octree.h	/^	EGeOctalloc_f oalloc;	\/**<@brief user allocator function for branches *\/$/;"	m	struct:__anon91
oct_parseargs	src/eg_octree.ex.c	/^int oct_parseargs (int argc,$/;"	f
oct_usage	src/eg_octree.ex.c	/^void oct_usage (char *program)$/;"	f
ofree	src/eg_octree.h	/^	EGeOctfree_f ofree;		\/**<@brief user free function for branches *\/$/;"	m	struct:__anon91
oneEGidx	src/eg_idx.h	69;"	d
oneLpNum	src/eg_lpnum.h	289;"	d
out_beg	src/eg_adgraph.h	/^	uint32_t out_beg;	\/**< @brief beginning of index array of outgoing edges *\/$/;"	m	struct:__anon92
out_edge	src/eg_edgraph.h	/^	EGeList_t out_edge;	\/**< List head for a list of outgoing edges *\/$/;"	m	struct:EGeDgraphNode_t
out_size	src/eg_edgraph.h	/^	unsigned out_size;	\/**< Number of outgoing edges *\/$/;"	m	struct:EGeDgraphNode_t
out_sz	src/eg_adgraph.h	/^	uint32_t out_sz;	\/**< @brief number of outgoing edges *\/$/;"	m	struct:__anon92
out_sz	src/eg_net.h	/^	unsigned int out_sz;\/**< sended bytes without syncronization. *\/$/;"	m	struct:__anon85
p	src/eg_simula.h	/^	double p;	\/**< @brief Probability that we will use this (outgoing) edge. *\/$/;"	m	struct:__anon103
pad1	src/eg_memslab.h	/^	uint8_t pad1:7;					\/**< padding *\/$/;"	m	struct:EGmemSlabPool_t
pad2	src/eg_memslab.h	/^	uint16_t pad2;					\/**< padding *\/$/;"	m	struct:EGmemSlabPool_t
param	TEmplate/dbl_eg_min_cut.h	/^	void *param;			\/**< external parameter needed by the function *\/$/;"	m	struct:dbl_EGalgMCcbk_t
param	TEmplate/fp20_eg_min_cut.h	/^	void *param;			\/**< external parameter needed by the function *\/$/;"	m	struct:fp20_EGalgMCcbk_t
param	TEmplate/int32_eg_min_cut.h	/^	void *param;			\/**< external parameter needed by the function *\/$/;"	m	struct:int32_EGalgMCcbk_t
param	TEmplate/int_eg_min_cut.h	/^	void *param;			\/**< external parameter needed by the function *\/$/;"	m	struct:int_EGalgMCcbk_t
param	TEmplate/ldbl_eg_min_cut.h	/^	void *param;			\/**< external parameter needed by the function *\/$/;"	m	struct:ldbl_EGalgMCcbk_t
param	TEmplate/mpf_eg_min_cut.h	/^	void *param;			\/**< external parameter needed by the function *\/$/;"	m	struct:mpf_EGalgMCcbk_t
param	TEmplate/mpq_eg_min_cut.h	/^	void *param;			\/**< external parameter needed by the function *\/$/;"	m	struct:mpq_EGalgMCcbk_t
parent	TEmplate/dbl_eg_shrink_graph.h	/^	EGes_t parent;				\/**< If this node is the representant for its class, $/;"	m	struct:dbl_EGsrkNode_t
parent	TEmplate/fp20_eg_shrink_graph.h	/^	EGes_t parent;				\/**< If this node is the representant for its class, $/;"	m	struct:fp20_EGsrkNode_t
parent	TEmplate/int32_eg_shrink_graph.h	/^	EGes_t parent;				\/**< If this node is the representant for its class, $/;"	m	struct:int32_EGsrkNode_t
parent	TEmplate/int_eg_shrink_graph.h	/^	EGes_t parent;				\/**< If this node is the representant for its class, $/;"	m	struct:int_EGsrkNode_t
parent	TEmplate/ldbl_eg_shrink_graph.h	/^	EGes_t parent;				\/**< If this node is the representant for its class, $/;"	m	struct:ldbl_EGsrkNode_t
parent	TEmplate/mpf_eg_shrink_graph.h	/^	EGes_t parent;				\/**< If this node is the representant for its class, $/;"	m	struct:mpf_EGsrkNode_t
parent	TEmplate/mpq_eg_shrink_graph.h	/^	EGes_t parent;				\/**< If this node is the representant for its class, $/;"	m	struct:mpq_EGsrkNode_t
parseargs	src/eg_net.ex.c	/^static int parseargs (int argc,$/;"	f	file:
parseargs	src/eg_thread.ex.c	/^static int parseargs ($/;"	f	file:
pool	src/eg_memslab.h	/^	struct EGmemSlabPool_t *pool;	\/**< Pointer to the slab pool structure *\/$/;"	m	struct:__anon101	typeref:struct:__anon101::EGmemSlabPool_t
pool	src/eg_thread.ex.c	/^static EGms_t pool; \/**< global memory pool *\/$/;"	v	file:
port	src/eg_net.ex.c	/^static unsigned port = 0;$/;"	v	file:
port	src/eg_net.h	/^	unsigned port;			\/**< store the port of the connection. *\/$/;"	m	struct:__anon85
pos	TEmplate/dbl_eg_abheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon6
pos	TEmplate/dbl_eg_abkheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon4
pos	TEmplate/dbl_eg_aheap.h	/^	unsigned pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon8
pos	TEmplate/dbl_eg_eheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon10
pos	TEmplate/dbl_eg_ekheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon12
pos	TEmplate/fp20_eg_abheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon16
pos	TEmplate/fp20_eg_abkheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon14
pos	TEmplate/fp20_eg_aheap.h	/^	unsigned pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon18
pos	TEmplate/fp20_eg_eheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon20
pos	TEmplate/fp20_eg_ekheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon22
pos	TEmplate/int32_eg_abheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon36
pos	TEmplate/int32_eg_abkheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon34
pos	TEmplate/int32_eg_aheap.h	/^	unsigned pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon38
pos	TEmplate/int32_eg_eheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon40
pos	TEmplate/int32_eg_ekheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon42
pos	TEmplate/int_eg_abheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon26
pos	TEmplate/int_eg_abkheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon24
pos	TEmplate/int_eg_aheap.h	/^	unsigned pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon28
pos	TEmplate/int_eg_eheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon30
pos	TEmplate/int_eg_ekheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon32
pos	TEmplate/ldbl_eg_abheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon46
pos	TEmplate/ldbl_eg_abkheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon44
pos	TEmplate/ldbl_eg_aheap.h	/^	unsigned pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon48
pos	TEmplate/ldbl_eg_eheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon50
pos	TEmplate/ldbl_eg_ekheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon52
pos	TEmplate/mpf_eg_abheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon66
pos	TEmplate/mpf_eg_abkheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon64
pos	TEmplate/mpf_eg_aheap.h	/^	unsigned pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon68
pos	TEmplate/mpf_eg_eheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon70
pos	TEmplate/mpf_eg_ekheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon72
pos	TEmplate/mpq_eg_abheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon56
pos	TEmplate/mpq_eg_abkheap.h	/^	uint32_t pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon54
pos	TEmplate/mpq_eg_aheap.h	/^	unsigned pos;					\/**< Position in the heap-array for this node, if set to$/;"	m	struct:__anon58
pos	TEmplate/mpq_eg_eheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon60
pos	TEmplate/mpq_eg_ekheap.h	/^	unsigned int pos;	\/**< Position in the heap array for this node, if set to$/;"	m	struct:__anon62
pos	src/eg_keytab.h	/^	int pos;						\/**< @brief position for the asociated key *\/$/;"	m	struct:__anon88
prev	TEmplate/uint16_eg_idxlist.h	/^	uint16_EGidx_t prev;\/**< position in the array of the previous structure in the list *\/$/;"	m	struct:uint16_EGidxLst_t
prev	TEmplate/uint32_eg_idxlist.h	/^	uint32_EGidx_t prev;\/**< position in the array of the previous structure in the list *\/$/;"	m	struct:uint32_EGidxLst_t
prev	TEmplate/uint64_eg_idxlist.h	/^	uint64_EGidx_t prev;\/**< position in the array of the previous structure in the list *\/$/;"	m	struct:uint64_EGidxLst_t
prev	TEmplate/uint8_eg_idxlist.h	/^	uint8_EGidx_t prev;\/**< position in the array of the previous structure in the list *\/$/;"	m	struct:uint8_EGidxLst_t
prev	src/eg_a16list.h	/^	uint16_t prev;\/**< position in the array of the previous structure in the list *\/$/;"	m	struct:EGa16List_t
prev	src/eg_a32list.h	/^	uint32_t prev;\/**< position in the array of the previous structure in the list *\/$/;"	m	struct:EGa32List_t
prev	src/eg_alist.h	/^	int prev;\/**< position in the array of the previous structure in the list *\/$/;"	m	struct:EGaList_t
prev	src/eg_elist.h	/^	struct EGeList_t *prev;\/**< Pointer to the previous structure in the list *\/$/;"	m	struct:EGeList_t	typeref:struct:EGeList_t::EGeList_t
prit_usage	src/eg_perm_it.ex.c	/^void prit_usage (char *program)$/;"	f
queue	src/eg_simula.h	/^	EGeList_t queue;			\/**< @brief Head of the incomming queue *\/$/;"	m	struct:__anon108
queue_cn	src/eg_simula.h	/^	EGeList_t queue_cn;		\/**< Connector in the queue holding it *\/$/;"	m	struct:__anon109
queue_sz	src/eg_simula.h	/^	unsigned queue_sz;		\/**< @brief Current length of the input queue *\/	$/;"	m	struct:__anon108
queue_time	src/eg_simula.h	/^	double queue_time;		\/**< Time spend waiting on queue *\/$/;"	m	struct:__anon109
r	TEmplate/dbl_eg_push_relabel.h	/^	double r;				\/**< residual capacity of the edge. *\/$/;"	m	struct:dbl_EGalgPRse_t
r	TEmplate/fp20_eg_push_relabel.h	/^	EGfp20_t r;				\/**< residual capacity of the edge. *\/$/;"	m	struct:fp20_EGalgPRse_t
r	TEmplate/int32_eg_push_relabel.h	/^	int32_t r;				\/**< residual capacity of the edge. *\/$/;"	m	struct:int32_EGalgPRse_t
r	TEmplate/int_eg_push_relabel.h	/^	int r;				\/**< residual capacity of the edge. *\/$/;"	m	struct:int_EGalgPRse_t
r	TEmplate/ldbl_eg_push_relabel.h	/^	long double r;				\/**< residual capacity of the edge. *\/$/;"	m	struct:ldbl_EGalgPRse_t
r	TEmplate/mpf_eg_push_relabel.h	/^	mpf_t r;				\/**< residual capacity of the edge. *\/$/;"	m	struct:mpf_EGalgPRse_t
r	TEmplate/mpq_eg_push_relabel.h	/^	mpq_t r;				\/**< residual capacity of the edge. *\/$/;"	m	struct:mpq_EGalgPRse_t
rank	src/eg_eset.h	/^	unsigned int rank;		\/**> This is a lower bound on the number of $/;"	m	struct:EGes_t
rate	src/eg_simula.h	/^	double*rate;			\/**< @brief variable rate for the corresponding interval *\/$/;"	m	struct:__anon106
real_sz	src/eg_memslab.h	/^	uint64_t real_sz;				\/**< Actual size of the elements asked by the user *\/$/;"	m	struct:EGmemSlabPool_t
restrict	config.h	613;"	d
reverse	src/eg_slk.h	/^	unsigned reverse;\/**< if set to zero, then the tour has the real ordering, otherwise, it has the reverse ordering of the tour. *\/ $/;"	m	struct:EGflipper_t
root	src/eg_octree.h	/^	EGeOctbranch_t* root; \/**<@brief root of the octree *\/$/;"	m	struct:__anon91
row_ord	TEmplate/dbl_eg_dmatrix.h	/^	int *row_ord;			\/**< @brief Array of size at least #dbl_EGdMatrix_t::row_sz $/;"	m	struct:dbl_EGdMatrix_t
row_ord	TEmplate/fp20_eg_dmatrix.h	/^	int *row_ord;			\/**< @brief Array of size at least #fp20_EGdMatrix_t::row_sz $/;"	m	struct:fp20_EGdMatrix_t
row_ord	TEmplate/int32_eg_dmatrix.h	/^	int *row_ord;			\/**< @brief Array of size at least #int32_EGdMatrix_t::row_sz $/;"	m	struct:int32_EGdMatrix_t
row_ord	TEmplate/int_eg_dmatrix.h	/^	int *row_ord;			\/**< @brief Array of size at least #int_EGdMatrix_t::row_sz $/;"	m	struct:int_EGdMatrix_t
row_ord	TEmplate/ldbl_eg_dmatrix.h	/^	int *row_ord;			\/**< @brief Array of size at least #ldbl_EGdMatrix_t::row_sz $/;"	m	struct:ldbl_EGdMatrix_t
row_ord	TEmplate/mpf_eg_dmatrix.h	/^	int *row_ord;			\/**< @brief Array of size at least #mpf_EGdMatrix_t::row_sz $/;"	m	struct:mpf_EGdMatrix_t
row_ord	TEmplate/mpq_eg_dmatrix.h	/^	int *row_ord;			\/**< @brief Array of size at least #mpq_EGdMatrix_t::row_sz $/;"	m	struct:mpq_EGdMatrix_t
row_sz	TEmplate/dbl_eg_dmatrix.h	/^	size_t row_sz;		\/**< @brief Number of rows in the matrix *\/$/;"	m	struct:dbl_EGdMatrix_t
row_sz	TEmplate/fp20_eg_dmatrix.h	/^	size_t row_sz;		\/**< @brief Number of rows in the matrix *\/$/;"	m	struct:fp20_EGdMatrix_t
row_sz	TEmplate/int32_eg_dmatrix.h	/^	size_t row_sz;		\/**< @brief Number of rows in the matrix *\/$/;"	m	struct:int32_EGdMatrix_t
row_sz	TEmplate/int_eg_dmatrix.h	/^	size_t row_sz;		\/**< @brief Number of rows in the matrix *\/$/;"	m	struct:int_EGdMatrix_t
row_sz	TEmplate/ldbl_eg_dmatrix.h	/^	size_t row_sz;		\/**< @brief Number of rows in the matrix *\/$/;"	m	struct:ldbl_EGdMatrix_t
row_sz	TEmplate/mpf_eg_dmatrix.h	/^	size_t row_sz;		\/**< @brief Number of rows in the matrix *\/$/;"	m	struct:mpf_EGdMatrix_t
row_sz	TEmplate/mpq_eg_dmatrix.h	/^	size_t row_sz;		\/**< @brief Number of rows in the matrix *\/$/;"	m	struct:mpq_EGdMatrix_t
rtype	src/eg_simula.h	/^	EGsimRandomType_t rtype;\/**< @brief random variable type *\/$/;"	m	struct:__anon108
s_fd	src/eg_net.h	/^	int s_fd;						\/**< store the file descriptor asociated to the socket *\/$/;"	m	struct:__anon85
sample	src/eg_random.ex.c	19;"	d	file:
seed	src/eg_simula.ex.c	/^static unsigned long seed[6] = {12345,12345,12345,12345,12345,12345}; \/**< default seed to use *\/$/;"	v	file:
seed	src/eg_simula2.ex.c	/^static unsigned long seed[6] = {12345,12345,12345,12345,12345,12345}; \/**< default seed to use *\/$/;"	v	file:
seed	src/eg_slk.ex.c	/^static unsigned long seed[6] = {12345,12345,12345,12345,12345,12345}; \/**< default seed to use *\/$/;"	v	file:
seed	src/eg_thread.ex.c	/^static unsigned long seed[6] = {12345,12345,12345,12345,12345,12345}; \/**< default seed to use *\/$/;"	v	file:
service_time	src/eg_simula.h	/^	double service_time;	\/**< Time spend being serviced on the network *\/$/;"	m	struct:__anon109
set	src/eg_raset.h	/^	int32_t*set;	\/**< @brief array of length EGrset_t::asz, it contains in $/;"	m	struct:__anon100
sim_parseargs	src/eg_simula.ex.c	/^static int sim_parseargs (int argc,$/;"	f	file:
sim_parseargs	src/eg_simula2.ex.c	/^static inline int sim_parseargs (int argc,$/;"	f	file:
sim_usage	src/eg_simula.ex.c	/^static void sim_usage (char **argv)$/;"	f	file:
sim_usage	src/eg_simula2.ex.c	/^static void sim_usage (char **argv)$/;"	f	file:
slab_cn	src/eg_memslab.h	/^	EGeList_t slab_cn;				\/**< @brief Connector into the list of slabs*\/$/;"	m	struct:__anon101
slk_parseargs	src/eg_slk.ex.c	/^static inline int slk_parseargs (int argc,$/;"	f	file:
slk_usage	src/eg_slk.ex.c	/^static void slk_usage (char **argv)$/;"	f	file:
sort_perm	src/eg_symtab.h	/^	int*sort_perm;			\/**< @brief permutation of sorted symbols (used to find $/;"	m	struct:EGsymtab_t
stack	src/eg_astack.h	/^	int*stack;	\/**< @brief array of length @ref EGaStack_t::sz storing $/;"	m	struct:__anon82
start_time	src/eg_simula.h	/^	double start_time;		\/**< @brief Time of first agent entering this node *\/$/;"	m	struct:__anon108
stime	src/eg_timer.h	/^	double stime;	\/**< hols the last time when we start counting, this is only $/;"	m	struct:__anon87
sumxi	src/eg_simula.h	/^	double sumxi;$/;"	m	struct:__anon107
sumxi	src/eg_simula.h	/^	double* sumxi;$/;"	m	struct:__anon106
symbols	src/eg_symtab.h	/^	int*symbols;				\/**< @brief array of offsets of all symbols in table *\/ $/;"	m	struct:EGsymtab_t
symtab_parse	src/eg_symtab.ex.c	/^int symtab_parse(int argc,char**argv)$/;"	f
symtab_usage	src/eg_symtab.ex.c	/^void symtab_usage(char*program)$/;"	f
sz	TEmplate/dbl_eg_abheap.h	/^	uint32_t sz;$/;"	m	struct:__anon7
sz	TEmplate/dbl_eg_abkheap.h	/^	uint32_t sz;$/;"	m	struct:__anon5
sz	TEmplate/dbl_eg_aheap.h	/^	unsigned sz;$/;"	m	struct:__anon9
sz	TEmplate/dbl_eg_eheap.h	/^	unsigned int sz;$/;"	m	struct:__anon11
sz	TEmplate/dbl_eg_ekheap.h	/^	unsigned int sz;$/;"	m	struct:__anon13
sz	TEmplate/dbl_eg_min_cut.ex.c	/^	unsigned int sz;$/;"	m	struct:dbl_mc_all_cuts_t	file:
sz	TEmplate/fp20_eg_abheap.h	/^	uint32_t sz;$/;"	m	struct:__anon17
sz	TEmplate/fp20_eg_abkheap.h	/^	uint32_t sz;$/;"	m	struct:__anon15
sz	TEmplate/fp20_eg_aheap.h	/^	unsigned sz;$/;"	m	struct:__anon19
sz	TEmplate/fp20_eg_eheap.h	/^	unsigned int sz;$/;"	m	struct:__anon21
sz	TEmplate/fp20_eg_ekheap.h	/^	unsigned int sz;$/;"	m	struct:__anon23
sz	TEmplate/fp20_eg_min_cut.ex.c	/^	unsigned int sz;$/;"	m	struct:fp20_mc_all_cuts_t	file:
sz	TEmplate/int32_eg_abheap.h	/^	uint32_t sz;$/;"	m	struct:__anon37
sz	TEmplate/int32_eg_abkheap.h	/^	uint32_t sz;$/;"	m	struct:__anon35
sz	TEmplate/int32_eg_aheap.h	/^	unsigned sz;$/;"	m	struct:__anon39
sz	TEmplate/int32_eg_eheap.h	/^	unsigned int sz;$/;"	m	struct:__anon41
sz	TEmplate/int32_eg_ekheap.h	/^	unsigned int sz;$/;"	m	struct:__anon43
sz	TEmplate/int32_eg_min_cut.ex.c	/^	unsigned int sz;$/;"	m	struct:int32_mc_all_cuts_t	file:
sz	TEmplate/int_eg_abheap.h	/^	uint32_t sz;$/;"	m	struct:__anon27
sz	TEmplate/int_eg_abkheap.h	/^	uint32_t sz;$/;"	m	struct:__anon25
sz	TEmplate/int_eg_aheap.h	/^	unsigned sz;$/;"	m	struct:__anon29
sz	TEmplate/int_eg_eheap.h	/^	unsigned int sz;$/;"	m	struct:__anon31
sz	TEmplate/int_eg_ekheap.h	/^	unsigned int sz;$/;"	m	struct:__anon33
sz	TEmplate/int_eg_min_cut.ex.c	/^	unsigned int sz;$/;"	m	struct:int_mc_all_cuts_t	file:
sz	TEmplate/ldbl_eg_abheap.h	/^	uint32_t sz;$/;"	m	struct:__anon47
sz	TEmplate/ldbl_eg_abkheap.h	/^	uint32_t sz;$/;"	m	struct:__anon45
sz	TEmplate/ldbl_eg_aheap.h	/^	unsigned sz;$/;"	m	struct:__anon49
sz	TEmplate/ldbl_eg_eheap.h	/^	unsigned int sz;$/;"	m	struct:__anon51
sz	TEmplate/ldbl_eg_ekheap.h	/^	unsigned int sz;$/;"	m	struct:__anon53
sz	TEmplate/ldbl_eg_min_cut.ex.c	/^	unsigned int sz;$/;"	m	struct:ldbl_mc_all_cuts_t	file:
sz	TEmplate/mpf_eg_abheap.h	/^	uint32_t sz;$/;"	m	struct:__anon67
sz	TEmplate/mpf_eg_abkheap.h	/^	uint32_t sz;$/;"	m	struct:__anon65
sz	TEmplate/mpf_eg_aheap.h	/^	unsigned sz;$/;"	m	struct:__anon69
sz	TEmplate/mpf_eg_eheap.h	/^	unsigned int sz;$/;"	m	struct:__anon71
sz	TEmplate/mpf_eg_ekheap.h	/^	unsigned int sz;$/;"	m	struct:__anon73
sz	TEmplate/mpf_eg_min_cut.ex.c	/^	unsigned int sz;$/;"	m	struct:mpf_mc_all_cuts_t	file:
sz	TEmplate/mpq_eg_abheap.h	/^	uint32_t sz;$/;"	m	struct:__anon57
sz	TEmplate/mpq_eg_abkheap.h	/^	uint32_t sz;$/;"	m	struct:__anon55
sz	TEmplate/mpq_eg_aheap.h	/^	unsigned sz;$/;"	m	struct:__anon59
sz	TEmplate/mpq_eg_eheap.h	/^	unsigned int sz;$/;"	m	struct:__anon61
sz	TEmplate/mpq_eg_ekheap.h	/^	unsigned int sz;$/;"	m	struct:__anon63
sz	TEmplate/mpq_eg_min_cut.ex.c	/^	unsigned int sz;$/;"	m	struct:mpq_mc_all_cuts_t	file:
sz	src/eg_a32hash.h	/^	size_t sz;			\/**< @brief Number of elements in the hash table *\/$/;"	m	struct:EGa32HashTable_t
sz	src/eg_ahash.h	/^	size_t sz;			\/**< @brief Number of elements in the hash table *\/$/;"	m	struct:EGaHashTable_t
sz	src/eg_astack.h	/^	int sz;			\/**< @brief actual size of the stack array *\/$/;"	m	struct:__anon82
sz	src/eg_ehash.h	/^	size_t sz;			\/**< @brief Number of elements in the hash table *\/$/;"	m	struct:EGeHashTable_t
sz	src/eg_gcit.h	/^	int sz;					\/**< @brief Number of bits in the code *\/$/;"	m	struct:EGgcIt_t
sz	src/eg_keytab.h	/^	size_t sz;					\/**< @brief actual size of #EGkeytab_t::key *\/$/;"	m	struct:__anon89
sz	src/eg_perm_it.h	/^	int sz;					\/**< @brief Number of elements to permute *\/$/;"	m	struct:EGpermIt_t
sz	src/eg_raset.h	/^	int32_t sz;		\/**< @brief number of elements in the set *\/$/;"	m	struct:__anon100
sz	src/eg_slk.h	/^	size_t sz;	\/**< number of elements in this sub-tour *\/$/;"	m	struct:EGflipper_t
sz	src/eg_symtab.h	/^	size_t sz;					\/**< @brief actual size of some internal arrays (>=nsym) *\/$/;"	m	struct:EGsymtab_t
szof_edge	src/eg_adgraph.h	/^	size_t szof_edge;	\/**< @brief the idea is that all edges are allocated$/;"	m	struct:__anon94
szof_node	src/eg_adgraph.h	/^	size_t szof_node;	\/**< @brief the idea is that all nodes are allocated $/;"	m	struct:__anon94
table	src/eg_a32hash.h	/^	uint32_t*table;			\/**< @brief Array of size #EGa32HashTable_t::max_sz *\/$/;"	m	struct:EGa32HashTable_t
table	src/eg_ahash.h	/^	int*table;			\/**< @brief Array of size #EGaHashTable_t::max_sz *\/$/;"	m	struct:EGaHashTable_t
table	src/eg_ehash.h	/^	EGeList_t*table;\/**< @brief Array of size #EGeHashTable_t::max_sz *\/$/;"	m	struct:EGeHashTable_t
tail	src/eg_adgraph.h	/^	uint32_t tail;$/;"	m	struct:__anon93
tail	src/eg_edgraph.h	/^	EGeDgraphNode_t *tail;\/**< pointer to the tail node for this edge *\/$/;"	m	struct:EGeDgraphEdge_t
tail_cn	src/eg_edgraph.h	/^	EGeList_t tail_cn;		\/**< List member of the outgoing edge list in the $/;"	m	struct:EGeDgraphEdge_t
time	src/eg_timer.h	/^	double time;	\/**< hold the accumulated time *\/$/;"	m	struct:__anon87
tot_serv	src/eg_simula.h	/^	unsigned tot_serv;		\/**< @brief servers available at the node *\/$/;"	m	struct:__anon108
tour	src/eg_slk.h	/^	int* tour;	\/**< hold the order (or reverse order) of the elements in this $/;"	m	struct:EGflipper_t
tree	src/eg_octree.h	/^	EGeOctdata_t*tree[8];\/** @brief branches, they are numbered according to $/;"	m	struct:__anon90
tuple	src/eg_gcit.h	/^	int*tuple;			\/**< @brief Current binary tuple being visited *\/$/;"	m	struct:EGgcIt_t
tuple	src/eg_perm_it.h	/^	int*tuple;			\/**< @brief Current binary tuple being visited *\/$/;"	m	struct:EGpermIt_t
two17	src/eg_random.c	33;"	d	file:
two53	src/eg_random.c	34;"	d	file:
type	TEmplate/dbl_eg_push_relabel.h	/^	unsigned char type;	\/**< type of edge (0 for forward and 1 for backward *\/$/;"	m	struct:dbl_EGalgPRse_t
type	TEmplate/fp20_eg_push_relabel.h	/^	unsigned char type;	\/**< type of edge (0 for forward and 1 for backward *\/$/;"	m	struct:fp20_EGalgPRse_t
type	TEmplate/int32_eg_push_relabel.h	/^	unsigned char type;	\/**< type of edge (0 for forward and 1 for backward *\/$/;"	m	struct:int32_EGalgPRse_t
type	TEmplate/int_eg_push_relabel.h	/^	unsigned char type;	\/**< type of edge (0 for forward and 1 for backward *\/$/;"	m	struct:int_EGalgPRse_t
type	TEmplate/ldbl_eg_push_relabel.h	/^	unsigned char type;	\/**< type of edge (0 for forward and 1 for backward *\/$/;"	m	struct:ldbl_EGalgPRse_t
type	TEmplate/mpf_eg_push_relabel.h	/^	unsigned char type;	\/**< type of edge (0 for forward and 1 for backward *\/$/;"	m	struct:mpf_EGalgPRse_t
type	TEmplate/mpq_eg_push_relabel.h	/^	unsigned char type;	\/**< type of edge (0 for forward and 1 for backward *\/$/;"	m	struct:mpq_EGalgPRse_t
type	src/eg_eugraph.h	/^	unsigned char type;		\/**< either 0 or 1, zero for tail, one for head *\/$/;"	m	struct:EGeUgraphEP_t
type	src/eg_io.c	/^struct EGioFile_st {int type; void*file;};$/;"	m	struct:EGioFile_st	file:
type	src/eg_simula.h	/^	EGsimNodeType_t type;	\/**< @brief Type of the node *\/$/;"	m	struct:__anon108
u	TEmplate/dbl_eg_push_relabel.h	/^	double u;				\/**< maximum capacity on the edge. *\/$/;"	m	struct:dbl_EGalgPRse_t
u	TEmplate/fp20_eg_push_relabel.h	/^	EGfp20_t u;				\/**< maximum capacity on the edge. *\/$/;"	m	struct:fp20_EGalgPRse_t
u	TEmplate/int32_eg_push_relabel.h	/^	int32_t u;				\/**< maximum capacity on the edge. *\/$/;"	m	struct:int32_EGalgPRse_t
u	TEmplate/int_eg_push_relabel.h	/^	int u;				\/**< maximum capacity on the edge. *\/$/;"	m	struct:int_EGalgPRse_t
u	TEmplate/ldbl_eg_push_relabel.h	/^	long double u;				\/**< maximum capacity on the edge. *\/$/;"	m	struct:ldbl_EGalgPRse_t
u	TEmplate/mpf_eg_push_relabel.h	/^	mpf_t u;				\/**< maximum capacity on the edge. *\/$/;"	m	struct:mpf_EGalgPRse_t
u	TEmplate/mpq_eg_push_relabel.h	/^	mpq_t u;				\/**< maximum capacity on the edge. *\/$/;"	m	struct:mpq_EGalgPRse_t
u	src/eg_augraph.h	/^	uint32_t u,v;	\/**< @brief end points of the edge *\/$/;"	m	struct:__anon2
uint16_EGIDXLPRINT	TEmplate/uint16_eg_idxlist.ex.c	41;"	d	file:
uint16_EGIDXLPRINT	TEmplate/uint16_eg_idxlist.ex.c	43;"	d	file:
uint16_EGLMAXSZ	TEmplate/uint16_eg_idxlist.ex.c	36;"	d	file:
uint16_EGLMAXSZ	TEmplate/uint16_eg_idxlist.ex.c	38;"	d	file:
uint16_EG_IDXLIST_DEBUG	TEmplate/uint16_eg_idxlist.h	62;"	d
uint16_EG_UL2idx	src/eg_idx.uint16.h	50;"	d
uint16_EGidxAdd	src/eg_idx.uint16.h	79;"	d
uint16_EGidxDiv	src/eg_idx.uint16.h	101;"	d
uint16_EGidxIsEqqual	src/eg_idx.uint16.h	57;"	d
uint16_EGidxIsLeq	src/eg_idx.uint16.h	71;"	d
uint16_EGidxIsLess	src/eg_idx.uint16.h	64;"	d
uint16_EGidxLstAddAfter	TEmplate/uint16_eg_idxlist.h	123;"	d
uint16_EGidxLstAddBefore	TEmplate/uint16_eg_idxlist.h	139;"	d
uint16_EGidxLstDel	TEmplate/uint16_eg_idxlist.h	179;"	d
uint16_EGidxLstInit	TEmplate/uint16_eg_idxlist.h	85;"	d
uint16_EGidxLstMoveAfter	TEmplate/uint16_eg_idxlist.h	218;"	d
uint16_EGidxLstMoveBefore	TEmplate/uint16_eg_idxlist.h	236;"	d
uint16_EGidxLstNull	TEmplate/uint16_eg_idxlist.h	77;"	d
uint16_EGidxLstReplace	TEmplate/uint16_eg_idxlist.h	197;"	d
uint16_EGidxLstSplice	TEmplate/uint16_eg_idxlist.h	254;"	d
uint16_EGidxLst_t	TEmplate/uint16_eg_idxlist.h	/^typedef struct uint16_EGidxLst_t$/;"	s
uint16_EGidxLst_t	TEmplate/uint16_eg_idxlist.h	/^uint16_EGidxLst_t;$/;"	t	typeref:struct:uint16_EGidxLst_t
uint16_EGidxMult	src/eg_idx.uint16.h	94;"	d
uint16_EGidxOne	src/eg_idx.uint16.h	109;"	d
uint16_EGidxPP	src/eg_idx.uint16.h	112;"	d
uint16_EGidxSub	src/eg_idx.uint16.h	87;"	d
uint16_EGidxZero	src/eg_idx.uint16.h	104;"	d
uint16_EGidx_t	src/eg_idx.uint16.h	33;"	d
uint16_EGidxc_t	src/eg_idx.uint16.h	34;"	d
uint16_EGstrtoIdx	src/eg_idx.uint16.h	43;"	d
uint16_MaxEGidx	src/eg_idx.uint16.h	32;"	d
uint16_PRIuidxArg	src/eg_idx.uint16.h	118;"	d
uint16_PRIuidxFmt	src/eg_idx.uint16.h	117;"	d
uint16__EG_IDXNUM_H__	src/eg_idx.uint16.h	21;"	d
uint16___EG_IDXLIST_H__	TEmplate/uint16_eg_idxlist.h	55;"	d
uint16___EGidxLstAdd	TEmplate/uint16_eg_idxlist.h	104;"	d
uint16___EGidxLstLink	TEmplate/uint16_eg_idxlist.h	159;"	d
uint16_integer_list_t	TEmplate/uint16_eg_idxlist.ex.c	/^uint16_integer_list_t;$/;"	t	typeref:struct:__anon79	file:
uint16_oneEGidx	src/eg_idx.uint16.h	31;"	d
uint16_zeroEGidx	src/eg_idx.uint16.h	30;"	d
uint32_EGIDXLPRINT	TEmplate/uint32_eg_idxlist.ex.c	41;"	d	file:
uint32_EGIDXLPRINT	TEmplate/uint32_eg_idxlist.ex.c	43;"	d	file:
uint32_EGLMAXSZ	TEmplate/uint32_eg_idxlist.ex.c	36;"	d	file:
uint32_EGLMAXSZ	TEmplate/uint32_eg_idxlist.ex.c	38;"	d	file:
uint32_EG_IDXLIST_DEBUG	TEmplate/uint32_eg_idxlist.h	62;"	d
uint32_EG_UL2idx	src/eg_idx.uint32.h	50;"	d
uint32_EGidxAdd	src/eg_idx.uint32.h	79;"	d
uint32_EGidxDiv	src/eg_idx.uint32.h	101;"	d
uint32_EGidxIsEqqual	src/eg_idx.uint32.h	57;"	d
uint32_EGidxIsLeq	src/eg_idx.uint32.h	71;"	d
uint32_EGidxIsLess	src/eg_idx.uint32.h	64;"	d
uint32_EGidxLstAddAfter	TEmplate/uint32_eg_idxlist.h	123;"	d
uint32_EGidxLstAddBefore	TEmplate/uint32_eg_idxlist.h	139;"	d
uint32_EGidxLstDel	TEmplate/uint32_eg_idxlist.h	179;"	d
uint32_EGidxLstInit	TEmplate/uint32_eg_idxlist.h	85;"	d
uint32_EGidxLstMoveAfter	TEmplate/uint32_eg_idxlist.h	218;"	d
uint32_EGidxLstMoveBefore	TEmplate/uint32_eg_idxlist.h	236;"	d
uint32_EGidxLstNull	TEmplate/uint32_eg_idxlist.h	77;"	d
uint32_EGidxLstReplace	TEmplate/uint32_eg_idxlist.h	197;"	d
uint32_EGidxLstSplice	TEmplate/uint32_eg_idxlist.h	254;"	d
uint32_EGidxLst_t	TEmplate/uint32_eg_idxlist.h	/^typedef struct uint32_EGidxLst_t$/;"	s
uint32_EGidxLst_t	TEmplate/uint32_eg_idxlist.h	/^uint32_EGidxLst_t;$/;"	t	typeref:struct:uint32_EGidxLst_t
uint32_EGidxMult	src/eg_idx.uint32.h	94;"	d
uint32_EGidxOne	src/eg_idx.uint32.h	109;"	d
uint32_EGidxPP	src/eg_idx.uint32.h	112;"	d
uint32_EGidxSub	src/eg_idx.uint32.h	87;"	d
uint32_EGidxZero	src/eg_idx.uint32.h	104;"	d
uint32_EGidx_t	src/eg_idx.uint32.h	33;"	d
uint32_EGidxc_t	src/eg_idx.uint32.h	34;"	d
uint32_EGstrtoIdx	src/eg_idx.uint32.h	43;"	d
uint32_EGutilPermSort	src/eg_lpnum.c	/^void uint32_EGutilPermSort (const size_t sz,$/;"	f
uint32_EGutilPermSort2	src/eg_lpnum.c	/^void uint32_EGutilPermSort2 (const size_t sz,$/;"	f
uint32_MaxEGidx	src/eg_idx.uint32.h	32;"	d
uint32_PRIuidxArg	src/eg_idx.uint32.h	118;"	d
uint32_PRIuidxFmt	src/eg_idx.uint32.h	117;"	d
uint32__EG_IDXNUM_H__	src/eg_idx.uint32.h	21;"	d
uint32___EG_IDXLIST_H__	TEmplate/uint32_eg_idxlist.h	55;"	d
uint32___EGidxLstAdd	TEmplate/uint32_eg_idxlist.h	104;"	d
uint32___EGidxLstLink	TEmplate/uint32_eg_idxlist.h	159;"	d
uint32_integer_list_t	TEmplate/uint32_eg_idxlist.ex.c	/^uint32_integer_list_t;$/;"	t	typeref:struct:__anon80	file:
uint32_oneEGidx	src/eg_idx.uint32.h	31;"	d
uint32_zeroEGidx	src/eg_idx.uint32.h	30;"	d
uint64_EGIDXLPRINT	TEmplate/uint64_eg_idxlist.ex.c	41;"	d	file:
uint64_EGIDXLPRINT	TEmplate/uint64_eg_idxlist.ex.c	43;"	d	file:
uint64_EGLMAXSZ	TEmplate/uint64_eg_idxlist.ex.c	36;"	d	file:
uint64_EGLMAXSZ	TEmplate/uint64_eg_idxlist.ex.c	38;"	d	file:
uint64_EG_IDXLIST_DEBUG	TEmplate/uint64_eg_idxlist.h	62;"	d
uint64_EG_UL2idx	src/eg_idx.uint64.h	50;"	d
uint64_EGidxAdd	src/eg_idx.uint64.h	79;"	d
uint64_EGidxDiv	src/eg_idx.uint64.h	101;"	d
uint64_EGidxIsEqqual	src/eg_idx.uint64.h	57;"	d
uint64_EGidxIsLeq	src/eg_idx.uint64.h	71;"	d
uint64_EGidxIsLess	src/eg_idx.uint64.h	64;"	d
uint64_EGidxLstAddAfter	TEmplate/uint64_eg_idxlist.h	123;"	d
uint64_EGidxLstAddBefore	TEmplate/uint64_eg_idxlist.h	139;"	d
uint64_EGidxLstDel	TEmplate/uint64_eg_idxlist.h	179;"	d
uint64_EGidxLstInit	TEmplate/uint64_eg_idxlist.h	85;"	d
uint64_EGidxLstMoveAfter	TEmplate/uint64_eg_idxlist.h	218;"	d
uint64_EGidxLstMoveBefore	TEmplate/uint64_eg_idxlist.h	236;"	d
uint64_EGidxLstNull	TEmplate/uint64_eg_idxlist.h	77;"	d
uint64_EGidxLstReplace	TEmplate/uint64_eg_idxlist.h	197;"	d
uint64_EGidxLstSplice	TEmplate/uint64_eg_idxlist.h	254;"	d
uint64_EGidxLst_t	TEmplate/uint64_eg_idxlist.h	/^typedef struct uint64_EGidxLst_t$/;"	s
uint64_EGidxLst_t	TEmplate/uint64_eg_idxlist.h	/^uint64_EGidxLst_t;$/;"	t	typeref:struct:uint64_EGidxLst_t
uint64_EGidxMult	src/eg_idx.uint64.h	94;"	d
uint64_EGidxOne	src/eg_idx.uint64.h	109;"	d
uint64_EGidxPP	src/eg_idx.uint64.h	112;"	d
uint64_EGidxSub	src/eg_idx.uint64.h	87;"	d
uint64_EGidxZero	src/eg_idx.uint64.h	104;"	d
uint64_EGidx_t	src/eg_idx.uint64.h	33;"	d
uint64_EGidxc_t	src/eg_idx.uint64.h	34;"	d
uint64_EGstrtoIdx	src/eg_idx.uint64.h	43;"	d
uint64_MaxEGidx	src/eg_idx.uint64.h	32;"	d
uint64_PRIuidxArg	src/eg_idx.uint64.h	118;"	d
uint64_PRIuidxFmt	src/eg_idx.uint64.h	117;"	d
uint64__EG_IDXNUM_H__	src/eg_idx.uint64.h	21;"	d
uint64___EG_IDXLIST_H__	TEmplate/uint64_eg_idxlist.h	55;"	d
uint64___EGidxLstAdd	TEmplate/uint64_eg_idxlist.h	104;"	d
uint64___EGidxLstLink	TEmplate/uint64_eg_idxlist.h	159;"	d
uint64_integer_list_t	TEmplate/uint64_eg_idxlist.ex.c	/^uint64_integer_list_t;$/;"	t	typeref:struct:__anon81	file:
uint64_oneEGidx	src/eg_idx.uint64.h	31;"	d
uint64_zeroEGidx	src/eg_idx.uint64.h	30;"	d
uint8_EGIDXLPRINT	TEmplate/uint8_eg_idxlist.ex.c	41;"	d	file:
uint8_EGIDXLPRINT	TEmplate/uint8_eg_idxlist.ex.c	43;"	d	file:
uint8_EGLMAXSZ	TEmplate/uint8_eg_idxlist.ex.c	36;"	d	file:
uint8_EGLMAXSZ	TEmplate/uint8_eg_idxlist.ex.c	38;"	d	file:
uint8_EG_IDXLIST_DEBUG	TEmplate/uint8_eg_idxlist.h	62;"	d
uint8_EG_UL2idx	src/eg_idx.uint8.h	50;"	d
uint8_EGidxAdd	src/eg_idx.uint8.h	79;"	d
uint8_EGidxDiv	src/eg_idx.uint8.h	101;"	d
uint8_EGidxIsEqqual	src/eg_idx.uint8.h	57;"	d
uint8_EGidxIsLeq	src/eg_idx.uint8.h	71;"	d
uint8_EGidxIsLess	src/eg_idx.uint8.h	64;"	d
uint8_EGidxLstAddAfter	TEmplate/uint8_eg_idxlist.h	123;"	d
uint8_EGidxLstAddBefore	TEmplate/uint8_eg_idxlist.h	139;"	d
uint8_EGidxLstDel	TEmplate/uint8_eg_idxlist.h	179;"	d
uint8_EGidxLstInit	TEmplate/uint8_eg_idxlist.h	85;"	d
uint8_EGidxLstMoveAfter	TEmplate/uint8_eg_idxlist.h	218;"	d
uint8_EGidxLstMoveBefore	TEmplate/uint8_eg_idxlist.h	236;"	d
uint8_EGidxLstNull	TEmplate/uint8_eg_idxlist.h	77;"	d
uint8_EGidxLstReplace	TEmplate/uint8_eg_idxlist.h	197;"	d
uint8_EGidxLstSplice	TEmplate/uint8_eg_idxlist.h	254;"	d
uint8_EGidxLst_t	TEmplate/uint8_eg_idxlist.h	/^typedef struct uint8_EGidxLst_t$/;"	s
uint8_EGidxLst_t	TEmplate/uint8_eg_idxlist.h	/^uint8_EGidxLst_t;$/;"	t	typeref:struct:uint8_EGidxLst_t
uint8_EGidxMult	src/eg_idx.uint8.h	94;"	d
uint8_EGidxOne	src/eg_idx.uint8.h	109;"	d
uint8_EGidxPP	src/eg_idx.uint8.h	112;"	d
uint8_EGidxSub	src/eg_idx.uint8.h	87;"	d
uint8_EGidxZero	src/eg_idx.uint8.h	104;"	d
uint8_EGidx_t	src/eg_idx.uint8.h	33;"	d
uint8_EGidxc_t	src/eg_idx.uint8.h	34;"	d
uint8_EGstrtoIdx	src/eg_idx.uint8.h	43;"	d
uint8_MaxEGidx	src/eg_idx.uint8.h	32;"	d
uint8_PRIuidxArg	src/eg_idx.uint8.h	118;"	d
uint8_PRIuidxFmt	src/eg_idx.uint8.h	117;"	d
uint8__EG_IDXNUM_H__	src/eg_idx.uint8.h	21;"	d
uint8___EG_IDXLIST_H__	TEmplate/uint8_eg_idxlist.h	55;"	d
uint8___EGidxLstAdd	TEmplate/uint8_eg_idxlist.h	104;"	d
uint8___EGidxLstLink	TEmplate/uint8_eg_idxlist.h	159;"	d
uint8_integer_list_t	TEmplate/uint8_eg_idxlist.ex.c	/^uint8_integer_list_t;$/;"	t	typeref:struct:__anon78	file:
uint8_oneEGidx	src/eg_idx.uint8.h	31;"	d
uint8_zeroEGidx	src/eg_idx.uint8.h	30;"	d
unused	src/eg_octree.h	/^	uint16_t unused:5;\/** @brief unused bits (for now) *\/$/;"	m	struct:EGeOctdata_st
up	src/eg_octree.h	/^	struct EGeOctdata_st*up;\/** @brief pointer to up-level *\/$/;"	m	struct:EGeOctdata_st	typeref:struct:EGeOctdata_st::EGeOctdata_st
usage	src/eg_raset.ex.c	/^void usage (char *program)$/;"	f
usage	src/eg_thread.ex.c	/^static void usage (char **argv)$/;"	f	file:
use_sz	src/eg_symtab.h	/^	size_t use_sz;			\/**< @brief actual used space in all_sym *\/$/;"	m	struct:EGsymtab_t
v	TEmplate/dbl_eg_push_relabel.h	/^	EGeDgraphNode_t v;		\/**< Actual node structure to work with (EGeDgraph) *\/$/;"	m	struct:dbl_EGalgPRnode_t
v	TEmplate/fp20_eg_push_relabel.h	/^	EGeDgraphNode_t v;		\/**< Actual node structure to work with (EGeDgraph) *\/$/;"	m	struct:fp20_EGalgPRnode_t
v	TEmplate/int32_eg_push_relabel.h	/^	EGeDgraphNode_t v;		\/**< Actual node structure to work with (EGeDgraph) *\/$/;"	m	struct:int32_EGalgPRnode_t
v	TEmplate/int_eg_push_relabel.h	/^	EGeDgraphNode_t v;		\/**< Actual node structure to work with (EGeDgraph) *\/$/;"	m	struct:int_EGalgPRnode_t
v	TEmplate/ldbl_eg_push_relabel.h	/^	EGeDgraphNode_t v;		\/**< Actual node structure to work with (EGeDgraph) *\/$/;"	m	struct:ldbl_EGalgPRnode_t
v	TEmplate/mpf_eg_push_relabel.h	/^	EGeDgraphNode_t v;		\/**< Actual node structure to work with (EGeDgraph) *\/$/;"	m	struct:mpf_EGalgPRnode_t
v	TEmplate/mpq_eg_push_relabel.h	/^	EGeDgraphNode_t v;		\/**< Actual node structure to work with (EGeDgraph) *\/$/;"	m	struct:mpq_EGalgPRnode_t
v	src/eg_adgraph.ex.c	/^	EGaDN_t v;$/;"	m	struct:my_adnode_t	file:
v	src/eg_augraph.h	/^	uint32_t u,v;	\/**< @brief end points of the edge *\/$/;"	m	struct:__anon2
v	src/eg_edgraph.ex.c	/^	EGeDgraphNode_t v;$/;"	m	struct:my_dnode_t	file:
v	src/eg_eugraph.ex.c	/^	EGeUgraphNode_t v;$/;"	m	struct:my_unode_t	file:
val	TEmplate/dbl_eg_abheap.h	/^	double val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon6
val	TEmplate/dbl_eg_abkheap.h	/^	double val[dbl_EG_ABKHEAP_ENTRY];		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon4
val	TEmplate/dbl_eg_aheap.h	/^	double val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon8
val	TEmplate/dbl_eg_eheap.h	/^	double val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon10
val	TEmplate/dbl_eg_ekheap.h	/^	double val[dbl_EG_EKHEAP_ENTRY];\/**< Value of this node in the heap *\/$/;"	m	struct:__anon12
val	TEmplate/fp20_eg_abheap.h	/^	EGfp20_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon16
val	TEmplate/fp20_eg_abkheap.h	/^	EGfp20_t val[fp20_EG_ABKHEAP_ENTRY];		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon14
val	TEmplate/fp20_eg_aheap.h	/^	EGfp20_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon18
val	TEmplate/fp20_eg_eheap.h	/^	EGfp20_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon20
val	TEmplate/fp20_eg_ekheap.h	/^	EGfp20_t val[fp20_EG_EKHEAP_ENTRY];\/**< Value of this node in the heap *\/$/;"	m	struct:__anon22
val	TEmplate/int32_eg_abheap.h	/^	int32_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon36
val	TEmplate/int32_eg_abkheap.h	/^	int32_t val[int32_EG_ABKHEAP_ENTRY];		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon34
val	TEmplate/int32_eg_aheap.h	/^	int32_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon38
val	TEmplate/int32_eg_eheap.h	/^	int32_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon40
val	TEmplate/int32_eg_ekheap.h	/^	int32_t val[int32_EG_EKHEAP_ENTRY];\/**< Value of this node in the heap *\/$/;"	m	struct:__anon42
val	TEmplate/int_eg_abheap.h	/^	int val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon26
val	TEmplate/int_eg_abkheap.h	/^	int val[int_EG_ABKHEAP_ENTRY];		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon24
val	TEmplate/int_eg_aheap.h	/^	int val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon28
val	TEmplate/int_eg_eheap.h	/^	int val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon30
val	TEmplate/int_eg_ekheap.h	/^	int val[int_EG_EKHEAP_ENTRY];\/**< Value of this node in the heap *\/$/;"	m	struct:__anon32
val	TEmplate/ldbl_eg_abheap.h	/^	long double val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon46
val	TEmplate/ldbl_eg_abkheap.h	/^	long double val[ldbl_EG_ABKHEAP_ENTRY];		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon44
val	TEmplate/ldbl_eg_aheap.h	/^	long double val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon48
val	TEmplate/ldbl_eg_eheap.h	/^	long double val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon50
val	TEmplate/ldbl_eg_ekheap.h	/^	long double val[ldbl_EG_EKHEAP_ENTRY];\/**< Value of this node in the heap *\/$/;"	m	struct:__anon52
val	TEmplate/mpf_eg_abheap.h	/^	mpf_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon66
val	TEmplate/mpf_eg_abkheap.h	/^	mpf_t val[mpf_EG_ABKHEAP_ENTRY];		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon64
val	TEmplate/mpf_eg_aheap.h	/^	mpf_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon68
val	TEmplate/mpf_eg_eheap.h	/^	mpf_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon70
val	TEmplate/mpf_eg_ekheap.h	/^	mpf_t val[mpf_EG_EKHEAP_ENTRY];\/**< Value of this node in the heap *\/$/;"	m	struct:__anon72
val	TEmplate/mpq_eg_abheap.h	/^	mpq_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon56
val	TEmplate/mpq_eg_abkheap.h	/^	mpq_t val[mpq_EG_ABKHEAP_ENTRY];		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon54
val	TEmplate/mpq_eg_aheap.h	/^	mpq_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon58
val	TEmplate/mpq_eg_eheap.h	/^	mpq_t val;		\/**< Value of this node in the heap *\/$/;"	m	struct:__anon60
val	TEmplate/mpq_eg_ekheap.h	/^	mpq_t val[mpq_EG_EKHEAP_ENTRY];\/**< Value of this node in the heap *\/$/;"	m	struct:__anon62
verbose	src/eg_ebtree.ex.c	/^static int verbose = 0;$/;"	v	file:
weight	TEmplate/dbl_eg_shrink_graph.h	/^	double weight;			\/**< Weight for the edge *\/$/;"	m	struct:dbl_EGsrkEdge_t
weight	TEmplate/dbl_eg_shrink_graph.h	/^	double weight;			\/**< Weight of the @f$\\delta(n)@f$ edges for this node$/;"	m	struct:dbl_EGsrkNode_t
weight	TEmplate/fp20_eg_shrink_graph.h	/^	EGfp20_t weight;			\/**< Weight for the edge *\/$/;"	m	struct:fp20_EGsrkEdge_t
weight	TEmplate/fp20_eg_shrink_graph.h	/^	EGfp20_t weight;			\/**< Weight of the @f$\\delta(n)@f$ edges for this node$/;"	m	struct:fp20_EGsrkNode_t
weight	TEmplate/int32_eg_shrink_graph.h	/^	int32_t weight;			\/**< Weight for the edge *\/$/;"	m	struct:int32_EGsrkEdge_t
weight	TEmplate/int32_eg_shrink_graph.h	/^	int32_t weight;			\/**< Weight of the @f$\\delta(n)@f$ edges for this node$/;"	m	struct:int32_EGsrkNode_t
weight	TEmplate/int_eg_shrink_graph.h	/^	int weight;			\/**< Weight for the edge *\/$/;"	m	struct:int_EGsrkEdge_t
weight	TEmplate/int_eg_shrink_graph.h	/^	int weight;			\/**< Weight of the @f$\\delta(n)@f$ edges for this node$/;"	m	struct:int_EGsrkNode_t
weight	TEmplate/ldbl_eg_shrink_graph.h	/^	long double weight;			\/**< Weight for the edge *\/$/;"	m	struct:ldbl_EGsrkEdge_t
weight	TEmplate/ldbl_eg_shrink_graph.h	/^	long double weight;			\/**< Weight of the @f$\\delta(n)@f$ edges for this node$/;"	m	struct:ldbl_EGsrkNode_t
weight	TEmplate/mpf_eg_shrink_graph.h	/^	mpf_t weight;			\/**< Weight for the edge *\/$/;"	m	struct:mpf_EGsrkEdge_t
weight	TEmplate/mpf_eg_shrink_graph.h	/^	mpf_t weight;			\/**< Weight of the @f$\\delta(n)@f$ edges for this node$/;"	m	struct:mpf_EGsrkNode_t
weight	TEmplate/mpq_eg_shrink_graph.h	/^	mpq_t weight;			\/**< Weight for the edge *\/$/;"	m	struct:mpq_EGsrkEdge_t
weight	TEmplate/mpq_eg_shrink_graph.h	/^	mpq_t weight;			\/**< Weight of the @f$\\delta(n)@f$ edges for this node$/;"	m	struct:mpq_EGsrkNode_t
weight	src/eg_simula.h	/^	double*weight; 		\/**< @brief the value of $/;"	m	struct:__anon106
work	src/eg_thread.ex.c	/^static void work(double*result)$/;"	f	file:
x	src/eg_octree.h	/^	uint16_t x; \/** @brief X position in the grid (up to 65536) *\/$/;"	m	struct:EGeOctdata_st
x	src/eg_slk.h	/^	double* x;			\/**< X-position of the nodes *\/$/;"	m	struct:EGslkData_t
y	src/eg_octree.h	/^	uint16_t y; \/** @brief Y position in the grid (up to 65536) *\/$/;"	m	struct:EGeOctdata_st
y	src/eg_slk.h	/^	double* y;			\/**< Y-position of the nodes *\/$/;"	m	struct:EGslkData_t
z	src/eg_octree.h	/^	uint16_t z; \/** @brief Z position in the grid (up to 65536) *\/$/;"	m	struct:EGeOctdata_st
zeroEGidx	src/eg_idx.h	68;"	d
zeroLpNum	src/eg_lpnum.h	288;"	d
